{
	"id": "548f1a1ff2cf23ffa27bfdd7557f0937",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DNG.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n// import \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/cryptography/ECDSA.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\";\r\n\r\ncontract DNG {\r\n    uint256 public totalSupply = 1e12;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    // mapping(address => mapping(address => uint256)) private allowances;\r\n\r\n    mapping (bytes32 => bytes) private dataStorage;\r\n    mapping(bytes32 => bytes) private data2;\r\n    bytes32 private dataHash;\r\n    \r\n    // Events\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event StoreData(address indexed owner, bytes32 indexed dataHash);\r\n    \r\n    // constructor\r\n    constructor() public {\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= _value && _value > 0, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance2(address _owner, address _spender) public view returns (uint256) {\r\n        return allowance[_owner][_spender];\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value, \"Insufficient balance or allowance\");\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom2(address _from, address _to, uint256 _value) public {\r\n        require(balanceOf[_from] >= _value, \"Not enough balance\");\r\n        require(allowance[_from][msg.sender] >= _value, \"Not enough allowance\");\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n    }\r\n    // function storeData2(bytes memory _data) public {\r\n    //     require(_data.length <= 10485760, \"Data size exceeds 10MB limit\");\r\n    //     dataHash = keccak256(_data);\r\n    //     dataStorage[dataHash] = _data;\r\n    // }\r\n    function storeData2(bytes memory data, bytes32 dataHash) public {\r\n        require(data.length <= 10 * 1024 * 1024, \"Data size exceeds the limit of 10MB\");\r\n        dataStorage[dataHash] = data;\r\n        emit StoreData(msg.sender, dataHash);\r\n    }\r\n    function storeData3(bytes memory _data2) public {\r\n        bytes32 dataHash = sha256(_data2);\r\n        data2[dataHash] = _data2;\r\n    }\r\n\r\n    function storeData(bytes memory data) public {\r\n        require(data.length <= 10 * 1024 * 1024, \"Data size exceeds the limit of 10MB\");\r\n        // binary conversion\r\n        bytes32 binaryData = bytes32(data);\r\n        // encryption method\r\n        bytes memory encodedData = abi.encodePacked(binaryData);\r\n        binaryData = keccak256(encodedData);\r\n        // store the data in the blockchain\r\n        bytes32 dataHash = binaryData;\r\n        emit StoreData(msg.sender, dataHash);\r\n    }\r\n    function uploadData(bytes memory data) public {\r\n        require(data.length <= 10485760, \"Data size exceeds 10MB limit\");\r\n        dataHash = keccak256(data);\r\n        dataStorage[dataHash] = data;\r\n    }\r\n\r\n    function getDataHash() public view returns (bytes32) {\r\n        return dataHash;\r\n    }\r\n\r\n    function getData(bytes32 hash) public view returns (bytes memory) {\r\n        return dataStorage[hash];\r\n    }   \r\n\r\n    function getData2(bytes32 _dataHash) public view returns (bytes memory) {\r\n        return data2[_dataHash];\r\n    }\r\n\r\n}\r\n\r\n\r\n// pragma solidity ^0.8.0;\r\n\r\n// contract DNG {\r\n//     uint256 public totalSupply = 1e12;\r\n//     mapping (address => uint256) public balanceOf;\r\n//     mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n//     // Events\r\n//     event Transfer(address indexed from, address indexed to, uint256 value);\r\n//     event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    \r\n//     // constructor\r\n//     constructor() public {\r\n//         balanceOf[msg.sender] = totalSupply;\r\n//     }\r\n    \r\n//     function transfer(address _to, uint256 _value) public returns (bool) {\r\n//         require(balanceOf[msg.sender] >= _value && _value > 0, \"Insufficient balance\");\r\n//         balanceOf[msg.sender] -= _value;\r\n//         balanceOf[_to] += _value;\r\n//         emit Transfer(msg.sender, _to, _value);\r\n//         return true;\r\n//     }\r\n    \r\n//     function approve(address _spender, uint256 _value) public returns (bool) {\r\n//         allowance[msg.sender][_spender] = _value;\r\n//         emit Approval(msg.sender, _spender, _value);\r\n//         return true;\r\n//     }\r\n    \r\n//     function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n//         require(balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value, \"Insufficient balance or allowance\");\r\n//         balanceOf[_from] -= _value;\r\n//         balanceOf[_to] += _value;\r\n//         allowance[_from][msg.sender] -= _value;\r\n//         emit Transfer(_from, _to, _value);\r\n//         return true;\r\n//     }\r\n    \r\n//     function storeData(bytes memory data) public {\r\n//         require(data.length <= 10 * 1024 * 1024, \"Data size exceeds the limit of 10MB\");\r\n//         // binary conversion\r\n//         bytes32 binaryData = bytes32(data);\r\n//         // encryption method can be added here\r\n//         // ...\r\n//         // store the data in the blockchain\r\n//         // ...\r\n//     }\r\n// }\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DNG.sol": {
				"DNG": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "StoreData",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_dataHash",
									"type": "bytes32"
								}
							],
							"name": "getData2",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDataHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "storeData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "storeData2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data2",
									"type": "bytes"
								}
							],
							"name": "storeData3",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uploadData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DNG.sol\":284:4182  contract DNG {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DNG.sol\":333:337  1e12 */\n  0xe8d4a51000\n    /* \"contracts/DNG.sol\":304:337  uint256 public totalSupply = 1e12 */\n  0x00\n  sstore\n    /* \"contracts/DNG.sol\":957:1032  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DNG.sol\":1013:1024  totalSupply */\n  sload(0x00)\n    /* \"contracts/DNG.sol\":989:998  balanceOf */\n  0x01\n    /* \"contracts/DNG.sol\":989:1010  balanceOf[msg.sender] */\n  0x00\n    /* \"contracts/DNG.sol\":999:1009  msg.sender */\n  caller\n    /* \"contracts/DNG.sol\":989:1010  balanceOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DNG.sol\":989:1024  balanceOf[msg.sender] = totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/DNG.sol\":284:4182  contract DNG {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DNG.sol\":284:4182  contract DNG {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xac5c8535\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd8218148\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8bd40c3b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x965d68d9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa4da2290\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x54f6127f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x54f6127f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6377fc8b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x69cef46c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6c12ed28\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DNG.sol\":1370:1578  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":304:337  uint256 public totalSupply = 1e12 */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":1735:2143  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":3943:4052  function getData(bytes32 hash) public view returns (bytes memory) {\r... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":2994:3129  function storeData3(bytes memory _data2) public {\r... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/DNG.sol\":3635:3840  function uploadData(bytes memory data) public {\r... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/DNG.sol\":2151:2504  function transferFrom2(address _from, address _to, uint256 _value) public {\r... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/DNG.sol\":344:389  mapping (address => uint256) public balanceOf */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":2740:2988  function storeData2(bytes memory data, bytes32 dataHash) public {\r... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/DNG.sol\":4063:4177  function getData2(bytes32 _dataHash) public view returns (bytes memory) {\r... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":3848:3935  function getDataHash() public view returns (bytes32) {\r... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":1044:1358  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":3137:3629  function storeData(bytes memory data) public {\r... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/DNG.sol\":1586:1723  function allowance2(address _owner, address _spender) public view returns (uint256) {\r... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":396:462  mapping (address => mapping (address => uint256)) public allowance */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DNG.sol\":1370:1578  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n    tag_24:\n        /* \"contracts/DNG.sol\":1437:1441  bool */\n      0x00\n        /* \"contracts/DNG.sol\":1488:1494  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1454:1463  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":1454:1475  allowance[msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1454:1475  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":1454:1485  allowance[msg.sender][_spender] */\n      0x00\n        /* \"contracts/DNG.sol\":1476:1484  _spender */\n      dup6\n        /* \"contracts/DNG.sol\":1454:1485  allowance[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":1454:1494  allowance[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":1531:1539  _spender */\n      dup3\n        /* \"contracts/DNG.sol\":1510:1548  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DNG.sol\":1519:1529  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1510:1548  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/DNG.sol\":1541:1547  _value */\n      dup5\n        /* \"contracts/DNG.sol\":1510:1548  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DNG.sol\":1566:1570  true */\n      0x01\n        /* \"contracts/DNG.sol\":1559:1570  return true */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":1370:1578  function approve(address _spender, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":304:337  uint256 public totalSupply = 1e12 */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/DNG.sol\":1735:2143  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n    tag_34:\n        /* \"contracts/DNG.sol\":1817:1821  bool */\n      0x00\n        /* \"contracts/DNG.sol\":1862:1868  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1842:1851  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1842:1858  balanceOf[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":1852:1857  _from */\n      dup7\n        /* \"contracts/DNG.sol\":1842:1858  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":1842:1868  balanceOf[_from] >= _value */\n      lt\n      iszero\n        /* \"contracts/DNG.sol\":1842:1910  balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value */\n      dup1\n      iszero\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/DNG.sol\":1904:1910  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1872:1881  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":1872:1888  allowance[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":1882:1887  _from */\n      dup7\n        /* \"contracts/DNG.sol\":1872:1888  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":1872:1900  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":1889:1899  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1872:1900  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":1872:1910  allowance[_from][msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/DNG.sol\":1842:1910  balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value */\n    tag_88:\n        /* \"contracts/DNG.sol\":1834:1948  require(balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value, \"Insufficient balance or allowance\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/DNG.sol\":1979:1985  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1959:1968  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1959:1975  balanceOf[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":1969:1974  _from */\n      dup7\n        /* \"contracts/DNG.sol\":1959:1975  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":1959:1985  balanceOf[_from] -= _value */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2014:2020  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1996:2005  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1996:2010  balanceOf[_to] */\n      0x00\n        /* \"contracts/DNG.sol\":2006:2009  _to */\n      dup6\n        /* \"contracts/DNG.sol\":1996:2010  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":1996:2020  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2063:2069  _value */\n      dup2\n        /* \"contracts/DNG.sol\":2031:2040  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":2031:2047  allowance[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":2041:2046  _from */\n      dup7\n        /* \"contracts/DNG.sol\":2031:2047  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":2031:2059  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":2048:2058  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":2031:2059  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":2031:2069  allowance[_from][msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2101:2104  _to */\n      dup3\n        /* \"contracts/DNG.sol\":2085:2113  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DNG.sol\":2094:2099  _from */\n      dup5\n        /* \"contracts/DNG.sol\":2085:2113  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/DNG.sol\":2106:2112  _value */\n      dup5\n        /* \"contracts/DNG.sol\":2085:2113  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DNG.sol\":2131:2135  true */\n      0x01\n        /* \"contracts/DNG.sol\":2124:2135  return true */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":1735:2143  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":3943:4052  function getData(bytes32 hash) public view returns (bytes memory) {\r... */\n    tag_39:\n        /* \"contracts/DNG.sol\":3995:4007  bytes memory */\n      0x60\n        /* \"contracts/DNG.sol\":4027:4038  dataStorage */\n      0x03\n        /* \"contracts/DNG.sol\":4027:4044  dataStorage[hash] */\n      0x00\n        /* \"contracts/DNG.sol\":4039:4043  hash */\n      dup4\n        /* \"contracts/DNG.sol\":4027:4044  dataStorage[hash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":4020:4044  return dataStorage[hash] */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3943:4052  function getData(bytes32 hash) public view returns (bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":2994:3129  function storeData3(bytes memory _data2) public {\r... */\n    tag_45:\n        /* \"contracts/DNG.sol\":3053:3069  bytes32 dataHash */\n      0x00\n        /* \"contracts/DNG.sol\":3072:3086  sha256(_data2) */\n      0x02\n        /* \"contracts/DNG.sol\":3079:3085  _data2 */\n      dup3\n        /* \"contracts/DNG.sol\":3072:3086  sha256(_data2) */\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/DNG.sol\":3053:3086  bytes32 dataHash = sha256(_data2) */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3115:3121  _data2 */\n      dup2\n        /* \"contracts/DNG.sol\":3097:3102  data2 */\n      0x04\n        /* \"contracts/DNG.sol\":3097:3112  data2[dataHash] */\n      0x00\n        /* \"contracts/DNG.sol\":3103:3111  dataHash */\n      dup4\n        /* \"contracts/DNG.sol\":3097:3112  data2[dataHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":3097:3121  data2[dataHash] = _data2 */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/DNG.sol\":3042:3129  {\r... */\n      pop\n        /* \"contracts/DNG.sol\":2994:3129  function storeData3(bytes memory _data2) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":3635:3840  function uploadData(bytes memory data) public {\r... */\n    tag_48:\n        /* \"contracts/DNG.sol\":3715:3723  10485760 */\n      0xa00000\n        /* \"contracts/DNG.sol\":3700:3704  data */\n      dup2\n        /* \"contracts/DNG.sol\":3700:3711  data.length */\n      mload\n        /* \"contracts/DNG.sol\":3700:3723  data.length <= 10485760 */\n      gt\n      iszero\n        /* \"contracts/DNG.sol\":3692:3756  require(data.length <= 10485760, \"Data size exceeds 10MB limit\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/DNG.sol\":3788:3792  data */\n      dup1\n        /* \"contracts/DNG.sol\":3778:3793  keccak256(data) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DNG.sol\":3767:3775  dataHash */\n      0x05\n        /* \"contracts/DNG.sol\":3767:3793  dataHash = keccak256(data) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":3828:3832  data */\n      dup1\n        /* \"contracts/DNG.sol\":3804:3815  dataStorage */\n      0x03\n        /* \"contracts/DNG.sol\":3804:3825  dataStorage[dataHash] */\n      0x00\n        /* \"contracts/DNG.sol\":3816:3824  dataHash */\n      sload(0x05)\n        /* \"contracts/DNG.sol\":3804:3825  dataStorage[dataHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":3804:3832  dataStorage[dataHash] = data */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_118:\n      pop\n        /* \"contracts/DNG.sol\":3635:3840  function uploadData(bytes memory data) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":2151:2504  function transferFrom2(address _from, address _to, uint256 _value) public {\r... */\n    tag_51:\n        /* \"contracts/DNG.sol\":2264:2270  _value */\n      dup1\n        /* \"contracts/DNG.sol\":2244:2253  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":2244:2260  balanceOf[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":2254:2259  _from */\n      dup6\n        /* \"contracts/DNG.sol\":2244:2260  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":2244:2270  balanceOf[_from] >= _value */\n      lt\n      iszero\n        /* \"contracts/DNG.sol\":2236:2293  require(balanceOf[_from] >= _value, \"Not enough balance\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/DNG.sol\":2344:2350  _value */\n      dup1\n        /* \"contracts/DNG.sol\":2312:2321  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":2312:2328  allowance[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":2322:2327  _from */\n      dup6\n        /* \"contracts/DNG.sol\":2312:2328  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":2312:2340  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":2329:2339  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":2312:2340  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":2312:2350  allowance[_from][msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/DNG.sol\":2304:2375  require(allowance[_from][msg.sender] >= _value, \"Not enough allowance\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/DNG.sol\":2406:2412  _value */\n      dup1\n        /* \"contracts/DNG.sol\":2386:2395  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":2386:2402  balanceOf[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":2396:2401  _from */\n      dup6\n        /* \"contracts/DNG.sol\":2386:2402  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":2386:2412  balanceOf[_from] -= _value */\n      dup3\n      dup3\n      sload\n      tag_126\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_126:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2455:2461  _value */\n      dup1\n        /* \"contracts/DNG.sol\":2423:2432  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":2423:2439  allowance[_from] */\n      0x00\n        /* \"contracts/DNG.sol\":2433:2438  _from */\n      dup6\n        /* \"contracts/DNG.sol\":2423:2439  allowance[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":2423:2451  allowance[_from][msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":2440:2450  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":2423:2451  allowance[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":2423:2461  allowance[_from][msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2490:2496  _value */\n      dup1\n        /* \"contracts/DNG.sol\":2472:2481  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":2472:2486  balanceOf[_to] */\n      0x00\n        /* \"contracts/DNG.sol\":2482:2485  _to */\n      dup5\n        /* \"contracts/DNG.sol\":2472:2486  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":2472:2496  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":2151:2504  function transferFrom2(address _from, address _to, uint256 _value) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":344:389  mapping (address => uint256) public balanceOf */\n    tag_55:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/DNG.sol\":2740:2988  function storeData2(bytes memory data, bytes32 dataHash) public {\r... */\n    tag_60:\n        /* \"contracts/DNG.sol\":2838:2854  10 * 1024 * 1024 */\n      0xa00000\n        /* \"contracts/DNG.sol\":2823:2827  data */\n      dup3\n        /* \"contracts/DNG.sol\":2823:2834  data.length */\n      mload\n        /* \"contracts/DNG.sol\":2823:2854  data.length <= 10 * 1024 * 1024 */\n      gt\n      iszero\n        /* \"contracts/DNG.sol\":2815:2894  require(data.length <= 10 * 1024 * 1024, \"Data size exceeds the limit of 10MB\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/DNG.sol\":2929:2933  data */\n      dup2\n        /* \"contracts/DNG.sol\":2905:2916  dataStorage */\n      0x03\n        /* \"contracts/DNG.sol\":2905:2926  dataStorage[dataHash] */\n      0x00\n        /* \"contracts/DNG.sol\":2917:2925  dataHash */\n      dup4\n        /* \"contracts/DNG.sol\":2905:2926  dataStorage[dataHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":2905:2933  dataStorage[dataHash] = data */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_133:\n      pop\n        /* \"contracts/DNG.sol\":2971:2979  dataHash */\n      dup1\n        /* \"contracts/DNG.sol\":2959:2969  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":2949:2980  StoreData(msg.sender, dataHash) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DNG.sol\":2740:2988  function storeData2(bytes memory data, bytes32 dataHash) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":4063:4177  function getData2(bytes32 _dataHash) public view returns (bytes memory) {\r... */\n    tag_63:\n        /* \"contracts/DNG.sol\":4121:4133  bytes memory */\n      0x60\n        /* \"contracts/DNG.sol\":4153:4158  data2 */\n      0x04\n        /* \"contracts/DNG.sol\":4153:4169  data2[_dataHash] */\n      0x00\n        /* \"contracts/DNG.sol\":4159:4168  _dataHash */\n      dup4\n        /* \"contracts/DNG.sol\":4153:4169  data2[_dataHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":4146:4169  return data2[_dataHash] */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_100\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_100\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":4063:4177  function getData2(bytes32 _dataHash) public view returns (bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":3848:3935  function getDataHash() public view returns (bytes32) {\r... */\n    tag_66:\n        /* \"contracts/DNG.sol\":3892:3899  bytes32 */\n      0x00\n        /* \"contracts/DNG.sol\":3919:3927  dataHash */\n      sload(0x05)\n        /* \"contracts/DNG.sol\":3912:3927  return dataHash */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3848:3935  function getDataHash() public view returns (bytes32) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/DNG.sol\":1044:1358  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n    tag_71:\n        /* \"contracts/DNG.sol\":1107:1111  bool */\n      0x00\n        /* \"contracts/DNG.sol\":1157:1163  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1132:1141  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1132:1153  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":1142:1152  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1132:1153  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":1132:1163  balanceOf[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/DNG.sol\":1132:1177  balanceOf[msg.sender] >= _value && _value > 0 */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"contracts/DNG.sol\":1176:1177  0 */\n      0x00\n        /* \"contracts/DNG.sol\":1167:1173  _value */\n      dup3\n        /* \"contracts/DNG.sol\":1167:1177  _value > 0 */\n      gt\n        /* \"contracts/DNG.sol\":1132:1177  balanceOf[msg.sender] >= _value && _value > 0 */\n    tag_142:\n        /* \"contracts/DNG.sol\":1124:1202  require(balanceOf[msg.sender] >= _value && _value > 0, \"Insufficient balance\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/DNG.sol\":1238:1244  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1213:1222  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1213:1234  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/DNG.sol\":1223:1233  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1213:1234  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":1213:1244  balanceOf[msg.sender] -= _value */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":1273:1279  _value */\n      dup2\n        /* \"contracts/DNG.sol\":1255:1264  balanceOf */\n      0x01\n        /* \"contracts/DNG.sol\":1255:1269  balanceOf[_to] */\n      0x00\n        /* \"contracts/DNG.sol\":1265:1268  _to */\n      dup6\n        /* \"contracts/DNG.sol\":1255:1269  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DNG.sol\":1255:1279  balanceOf[_to] += _value */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DNG.sol\":1316:1319  _to */\n      dup3\n        /* \"contracts/DNG.sol\":1295:1328  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DNG.sol\":1304:1314  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":1295:1328  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/DNG.sol\":1321:1327  _value */\n      dup5\n        /* \"contracts/DNG.sol\":1295:1328  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DNG.sol\":1346:1350  true */\n      0x01\n        /* \"contracts/DNG.sol\":1339:1350  return true */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":1044:1358  function transfer(address _to, uint256 _value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":3137:3629  function storeData(bytes memory data) public {\r... */\n    tag_75:\n        /* \"contracts/DNG.sol\":3216:3232  10 * 1024 * 1024 */\n      0xa00000\n        /* \"contracts/DNG.sol\":3201:3205  data */\n      dup2\n        /* \"contracts/DNG.sol\":3201:3212  data.length */\n      mload\n        /* \"contracts/DNG.sol\":3201:3232  data.length <= 10 * 1024 * 1024 */\n      gt\n      iszero\n        /* \"contracts/DNG.sol\":3193:3272  require(data.length <= 10 * 1024 * 1024, \"Data size exceeds the limit of 10MB\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_132\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/DNG.sol\":3313:3331  bytes32 binaryData */\n      0x00\n        /* \"contracts/DNG.sol\":3342:3346  data */\n      dup2\n        /* \"contracts/DNG.sol\":3334:3347  bytes32(data) */\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"contracts/DNG.sol\":3313:3347  bytes32 binaryData = bytes32(data) */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3388:3412  bytes memory encodedData */\n      0x00\n        /* \"contracts/DNG.sol\":3432:3442  binaryData */\n      dup2\n        /* \"contracts/DNG.sol\":3415:3443  abi.encodePacked(binaryData) */\n      add(0x20, mload(0x40))\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DNG.sol\":3388:3443  bytes memory encodedData = abi.encodePacked(binaryData) */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3477:3488  encodedData */\n      dup1\n        /* \"contracts/DNG.sol\":3467:3489  keccak256(encodedData) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DNG.sol\":3454:3489  binaryData = keccak256(encodedData) */\n      swap2\n      pop\n        /* \"contracts/DNG.sol\":3545:3561  bytes32 dataHash */\n      0x00\n        /* \"contracts/DNG.sol\":3564:3574  binaryData */\n      dup3\n        /* \"contracts/DNG.sol\":3545:3574  bytes32 dataHash = binaryData */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":3612:3620  dataHash */\n      dup1\n        /* \"contracts/DNG.sol\":3600:3610  msg.sender */\n      caller\n        /* \"contracts/DNG.sol\":3590:3621  StoreData(msg.sender, dataHash) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DNG.sol\":3182:3629  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/DNG.sol\":3137:3629  function storeData(bytes memory data) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":1586:1723  function allowance2(address _owner, address _spender) public view returns (uint256) {\r... */\n    tag_79:\n        /* \"contracts/DNG.sol\":1661:1668  uint256 */\n      0x00\n        /* \"contracts/DNG.sol\":1688:1697  allowance */\n      0x02\n        /* \"contracts/DNG.sol\":1688:1705  allowance[_owner] */\n      0x00\n        /* \"contracts/DNG.sol\":1698:1704  _owner */\n      dup5\n        /* \"contracts/DNG.sol\":1688:1705  allowance[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DNG.sol\":1688:1715  allowance[_owner][_spender] */\n      0x00\n        /* \"contracts/DNG.sol\":1706:1714  _spender */\n      dup4\n        /* \"contracts/DNG.sol\":1688:1715  allowance[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DNG.sol\":1681:1715  return allowance[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/DNG.sol\":1586:1723  function allowance2(address _owner, address _spender) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DNG.sol\":396:462  mapping (address => mapping (address => uint256)) public allowance */\n    tag_83:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n    tag_113:\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_100\n      jump\t// in\n    tag_157:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_159\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_158)\n    tag_159:\n      dup3\n      0x1f\n      lt\n      tag_160\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_158)\n    tag_160:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_158\n      jumpi\n      swap2\n      dup3\n      add\n    tag_161:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_161)\n    tag_162:\n    tag_158:\n      pop\n      swap1\n      pop\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      pop\n      swap1\n      jump\t// out\n    tag_164:\n    tag_165:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_165)\n    tag_166:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_168:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_170\n        /* \"#utility.yul\":125:173   */\n      tag_171\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":109:174   */\n      tag_173\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":249:361   */\n    tag_174:\n        /* \"#utility.yul\":370:411   */\n      tag_177\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_179:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_181\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:707   */\n    tag_183:\n        /* \"#utility.yul\":614:619   */\n      0x00\n        /* \"#utility.yul\":652:658   */\n      dup2\n        /* \"#utility.yul\":639:659   */\n      calldataload\n        /* \"#utility.yul\":630:659   */\n      swap1\n      pop\n        /* \"#utility.yul\":668:701   */\n      tag_185\n        /* \"#utility.yul\":695:700   */\n      dup2\n        /* \"#utility.yul\":668:701   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":568:707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:856   */\n    tag_187:\n        /* \"#utility.yul\":770:775   */\n      0x00\n        /* \"#utility.yul\":801:807   */\n      dup2\n        /* \"#utility.yul\":795:808   */\n      mload\n        /* \"#utility.yul\":786:808   */\n      swap1\n      pop\n        /* \"#utility.yul\":817:850   */\n      tag_189\n        /* \"#utility.yul\":844:849   */\n      dup2\n        /* \"#utility.yul\":817:850   */\n      tag_186\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":713:856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":875:1213   */\n    tag_190:\n        /* \"#utility.yul\":930:935   */\n      0x00\n        /* \"#utility.yul\":979:982   */\n      dup3\n        /* \"#utility.yul\":972:976   */\n      0x1f\n        /* \"#utility.yul\":964:970   */\n      dup4\n        /* \"#utility.yul\":960:977   */\n      add\n        /* \"#utility.yul\":956:983   */\n      slt\n        /* \"#utility.yul\":946:1068   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":987:1066   */\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":946:1068   */\n    tag_192:\n        /* \"#utility.yul\":1104:1110   */\n      dup2\n        /* \"#utility.yul\":1091:1111   */\n      calldataload\n        /* \"#utility.yul\":1129:1207   */\n      tag_195\n        /* \"#utility.yul\":1203:1206   */\n      dup5\n        /* \"#utility.yul\":1195:1201   */\n      dup3\n        /* \"#utility.yul\":1188:1192   */\n      0x20\n        /* \"#utility.yul\":1180:1186   */\n      dup7\n        /* \"#utility.yul\":1176:1193   */\n      add\n        /* \"#utility.yul\":1129:1207   */\n      tag_168\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1120:1207   */\n      swap2\n      pop\n        /* \"#utility.yul\":936:1213   */\n      pop\n        /* \"#utility.yul\":875:1213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1219:1358   */\n    tag_196:\n        /* \"#utility.yul\":1265:1270   */\n      0x00\n        /* \"#utility.yul\":1303:1309   */\n      dup2\n        /* \"#utility.yul\":1290:1310   */\n      calldataload\n        /* \"#utility.yul\":1281:1310   */\n      swap1\n      pop\n        /* \"#utility.yul\":1319:1352   */\n      tag_198\n        /* \"#utility.yul\":1346:1351   */\n      dup2\n        /* \"#utility.yul\":1319:1352   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1219:1358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1364:1693   */\n    tag_54:\n        /* \"#utility.yul\":1423:1429   */\n      0x00\n        /* \"#utility.yul\":1472:1474   */\n      0x20\n        /* \"#utility.yul\":1460:1469   */\n      dup3\n        /* \"#utility.yul\":1451:1458   */\n      dup5\n        /* \"#utility.yul\":1447:1470   */\n      sub\n        /* \"#utility.yul\":1443:1475   */\n      slt\n        /* \"#utility.yul\":1440:1559   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1478:1557   */\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1440:1559   */\n    tag_201:\n        /* \"#utility.yul\":1598:1599   */\n      0x00\n        /* \"#utility.yul\":1623:1676   */\n      tag_204\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1659:1665   */\n      dup3\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1644:1666   */\n      add\n        /* \"#utility.yul\":1623:1676   */\n      tag_179\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1613:1676   */\n      swap2\n      pop\n        /* \"#utility.yul\":1569:1686   */\n      pop\n        /* \"#utility.yul\":1364:1693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:2173   */\n    tag_78:\n        /* \"#utility.yul\":1767:1773   */\n      0x00\n        /* \"#utility.yul\":1775:1781   */\n      dup1\n        /* \"#utility.yul\":1824:1826   */\n      0x40\n        /* \"#utility.yul\":1812:1821   */\n      dup4\n        /* \"#utility.yul\":1803:1810   */\n      dup6\n        /* \"#utility.yul\":1799:1822   */\n      sub\n        /* \"#utility.yul\":1795:1827   */\n      slt\n        /* \"#utility.yul\":1792:1911   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1830:1909   */\n      tag_207\n      tag_203\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1792:1911   */\n    tag_206:\n        /* \"#utility.yul\":1950:1951   */\n      0x00\n        /* \"#utility.yul\":1975:2028   */\n      tag_208\n        /* \"#utility.yul\":2020:2027   */\n      dup6\n        /* \"#utility.yul\":2011:2017   */\n      dup3\n        /* \"#utility.yul\":2000:2009   */\n      dup7\n        /* \"#utility.yul\":1996:2018   */\n      add\n        /* \"#utility.yul\":1975:2028   */\n      tag_179\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1965:2028   */\n      swap3\n      pop\n        /* \"#utility.yul\":1921:2038   */\n      pop\n        /* \"#utility.yul\":2077:2079   */\n      0x20\n        /* \"#utility.yul\":2103:2156   */\n      tag_209\n        /* \"#utility.yul\":2148:2155   */\n      dup6\n        /* \"#utility.yul\":2139:2145   */\n      dup3\n        /* \"#utility.yul\":2128:2137   */\n      dup7\n        /* \"#utility.yul\":2124:2146   */\n      add\n        /* \"#utility.yul\":2103:2156   */\n      tag_179\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2093:2156   */\n      swap2\n      pop\n        /* \"#utility.yul\":2048:2166   */\n      pop\n        /* \"#utility.yul\":1699:2173   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2179:2798   */\n    tag_33:\n        /* \"#utility.yul\":2256:2262   */\n      0x00\n        /* \"#utility.yul\":2264:2270   */\n      dup1\n        /* \"#utility.yul\":2272:2278   */\n      0x00\n        /* \"#utility.yul\":2321:2323   */\n      0x60\n        /* \"#utility.yul\":2309:2318   */\n      dup5\n        /* \"#utility.yul\":2300:2307   */\n      dup7\n        /* \"#utility.yul\":2296:2319   */\n      sub\n        /* \"#utility.yul\":2292:2324   */\n      slt\n        /* \"#utility.yul\":2289:2408   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2327:2406   */\n      tag_212\n      tag_203\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2289:2408   */\n    tag_211:\n        /* \"#utility.yul\":2447:2448   */\n      0x00\n        /* \"#utility.yul\":2472:2525   */\n      tag_213\n        /* \"#utility.yul\":2517:2524   */\n      dup7\n        /* \"#utility.yul\":2508:2514   */\n      dup3\n        /* \"#utility.yul\":2497:2506   */\n      dup8\n        /* \"#utility.yul\":2493:2515   */\n      add\n        /* \"#utility.yul\":2472:2525   */\n      tag_179\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2462:2525   */\n      swap4\n      pop\n        /* \"#utility.yul\":2418:2535   */\n      pop\n        /* \"#utility.yul\":2574:2576   */\n      0x20\n        /* \"#utility.yul\":2600:2653   */\n      tag_214\n        /* \"#utility.yul\":2645:2652   */\n      dup7\n        /* \"#utility.yul\":2636:2642   */\n      dup3\n        /* \"#utility.yul\":2625:2634   */\n      dup8\n        /* \"#utility.yul\":2621:2643   */\n      add\n        /* \"#utility.yul\":2600:2653   */\n      tag_179\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2590:2653   */\n      swap3\n      pop\n        /* \"#utility.yul\":2545:2663   */\n      pop\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2728:2781   */\n      tag_215\n        /* \"#utility.yul\":2773:2780   */\n      dup7\n        /* \"#utility.yul\":2764:2770   */\n      dup3\n        /* \"#utility.yul\":2753:2762   */\n      dup8\n        /* \"#utility.yul\":2749:2771   */\n      add\n        /* \"#utility.yul\":2728:2781   */\n      tag_196\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2718:2781   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2791   */\n      pop\n        /* \"#utility.yul\":2179:2798   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2804:3278   */\n    tag_23:\n        /* \"#utility.yul\":2872:2878   */\n      0x00\n        /* \"#utility.yul\":2880:2886   */\n      dup1\n        /* \"#utility.yul\":2929:2931   */\n      0x40\n        /* \"#utility.yul\":2917:2926   */\n      dup4\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2904:2927   */\n      sub\n        /* \"#utility.yul\":2900:2932   */\n      slt\n        /* \"#utility.yul\":2897:3016   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2935:3014   */\n      tag_218\n      tag_203\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2897:3016   */\n    tag_217:\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3080:3133   */\n      tag_219\n        /* \"#utility.yul\":3125:3132   */\n      dup6\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3105:3114   */\n      dup7\n        /* \"#utility.yul\":3101:3123   */\n      add\n        /* \"#utility.yul\":3080:3133   */\n      tag_179\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3070:3133   */\n      swap3\n      pop\n        /* \"#utility.yul\":3026:3143   */\n      pop\n        /* \"#utility.yul\":3182:3184   */\n      0x20\n        /* \"#utility.yul\":3208:3261   */\n      tag_220\n        /* \"#utility.yul\":3253:3260   */\n      dup6\n        /* \"#utility.yul\":3244:3250   */\n      dup3\n        /* \"#utility.yul\":3233:3242   */\n      dup7\n        /* \"#utility.yul\":3229:3251   */\n      add\n        /* \"#utility.yul\":3208:3261   */\n      tag_196\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3198:3261   */\n      swap2\n      pop\n        /* \"#utility.yul\":3153:3271   */\n      pop\n        /* \"#utility.yul\":2804:3278   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3284:3613   */\n    tag_38:\n        /* \"#utility.yul\":3343:3349   */\n      0x00\n        /* \"#utility.yul\":3392:3394   */\n      0x20\n        /* \"#utility.yul\":3380:3389   */\n      dup3\n        /* \"#utility.yul\":3371:3378   */\n      dup5\n        /* \"#utility.yul\":3367:3390   */\n      sub\n        /* \"#utility.yul\":3363:3395   */\n      slt\n        /* \"#utility.yul\":3360:3479   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_223\n      tag_203\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3360:3479   */\n    tag_222:\n        /* \"#utility.yul\":3518:3519   */\n      0x00\n        /* \"#utility.yul\":3543:3596   */\n      tag_224\n        /* \"#utility.yul\":3588:3595   */\n      dup5\n        /* \"#utility.yul\":3579:3585   */\n      dup3\n        /* \"#utility.yul\":3568:3577   */\n      dup6\n        /* \"#utility.yul\":3564:3586   */\n      add\n        /* \"#utility.yul\":3543:3596   */\n      tag_183\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3533:3596   */\n      swap2\n      pop\n        /* \"#utility.yul\":3489:3606   */\n      pop\n        /* \"#utility.yul\":3284:3613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3619:3970   */\n    tag_111:\n        /* \"#utility.yul\":3689:3695   */\n      0x00\n        /* \"#utility.yul\":3738:3740   */\n      0x20\n        /* \"#utility.yul\":3726:3735   */\n      dup3\n        /* \"#utility.yul\":3717:3724   */\n      dup5\n        /* \"#utility.yul\":3713:3736   */\n      sub\n        /* \"#utility.yul\":3709:3741   */\n      slt\n        /* \"#utility.yul\":3706:3825   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3744:3823   */\n      tag_227\n      tag_203\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3706:3825   */\n    tag_226:\n        /* \"#utility.yul\":3864:3865   */\n      0x00\n        /* \"#utility.yul\":3889:3953   */\n      tag_228\n        /* \"#utility.yul\":3945:3952   */\n      dup5\n        /* \"#utility.yul\":3936:3942   */\n      dup3\n        /* \"#utility.yul\":3925:3934   */\n      dup6\n        /* \"#utility.yul\":3921:3943   */\n      add\n        /* \"#utility.yul\":3889:3953   */\n      tag_187\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3879:3953   */\n      swap2\n      pop\n        /* \"#utility.yul\":3835:3963   */\n      pop\n        /* \"#utility.yul\":3619:3970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3976:4483   */\n    tag_44:\n        /* \"#utility.yul\":4044:4050   */\n      0x00\n        /* \"#utility.yul\":4093:4095   */\n      0x20\n        /* \"#utility.yul\":4081:4090   */\n      dup3\n        /* \"#utility.yul\":4072:4079   */\n      dup5\n        /* \"#utility.yul\":4068:4091   */\n      sub\n        /* \"#utility.yul\":4064:4096   */\n      slt\n        /* \"#utility.yul\":4061:4180   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":4099:4178   */\n      tag_231\n      tag_203\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4061:4180   */\n    tag_230:\n        /* \"#utility.yul\":4247:4248   */\n      0x00\n        /* \"#utility.yul\":4236:4245   */\n      dup3\n        /* \"#utility.yul\":4232:4249   */\n      add\n        /* \"#utility.yul\":4219:4250   */\n      calldataload\n        /* \"#utility.yul\":4277:4295   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4269:4275   */\n      dup2\n        /* \"#utility.yul\":4266:4296   */\n      gt\n        /* \"#utility.yul\":4263:4380   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4299:4378   */\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4263:4380   */\n    tag_232:\n        /* \"#utility.yul\":4404:4466   */\n      tag_235\n        /* \"#utility.yul\":4458:4465   */\n      dup5\n        /* \"#utility.yul\":4449:4455   */\n      dup3\n        /* \"#utility.yul\":4438:4447   */\n      dup6\n        /* \"#utility.yul\":4434:4456   */\n      add\n        /* \"#utility.yul\":4404:4466   */\n      tag_190\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4394:4466   */\n      swap2\n      pop\n        /* \"#utility.yul\":4190:4476   */\n      pop\n        /* \"#utility.yul\":3976:4483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:5141   */\n    tag_59:\n        /* \"#utility.yul\":4566:4572   */\n      0x00\n        /* \"#utility.yul\":4574:4580   */\n      dup1\n        /* \"#utility.yul\":4623:4625   */\n      0x40\n        /* \"#utility.yul\":4611:4620   */\n      dup4\n        /* \"#utility.yul\":4602:4609   */\n      dup6\n        /* \"#utility.yul\":4598:4621   */\n      sub\n        /* \"#utility.yul\":4594:4626   */\n      slt\n        /* \"#utility.yul\":4591:4710   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":4629:4708   */\n      tag_238\n      tag_203\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4591:4710   */\n    tag_237:\n        /* \"#utility.yul\":4777:4778   */\n      0x00\n        /* \"#utility.yul\":4766:4775   */\n      dup4\n        /* \"#utility.yul\":4762:4779   */\n      add\n        /* \"#utility.yul\":4749:4780   */\n      calldataload\n        /* \"#utility.yul\":4807:4825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4799:4805   */\n      dup2\n        /* \"#utility.yul\":4796:4826   */\n      gt\n        /* \"#utility.yul\":4793:4910   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":4829:4908   */\n      tag_240\n      tag_234\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4793:4910   */\n    tag_239:\n        /* \"#utility.yul\":4934:4996   */\n      tag_241\n        /* \"#utility.yul\":4988:4995   */\n      dup6\n        /* \"#utility.yul\":4979:4985   */\n      dup3\n        /* \"#utility.yul\":4968:4977   */\n      dup7\n        /* \"#utility.yul\":4964:4986   */\n      add\n        /* \"#utility.yul\":4934:4996   */\n      tag_190\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4924:4996   */\n      swap3\n      pop\n        /* \"#utility.yul\":4720:5006   */\n      pop\n        /* \"#utility.yul\":5045:5047   */\n      0x20\n        /* \"#utility.yul\":5071:5124   */\n      tag_242\n        /* \"#utility.yul\":5116:5123   */\n      dup6\n        /* \"#utility.yul\":5107:5113   */\n      dup3\n        /* \"#utility.yul\":5096:5105   */\n      dup7\n        /* \"#utility.yul\":5092:5114   */\n      add\n        /* \"#utility.yul\":5071:5124   */\n      tag_183\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5061:5124   */\n      swap2\n      pop\n        /* \"#utility.yul\":5016:5134   */\n      pop\n        /* \"#utility.yul\":4489:5141   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5147:5256   */\n    tag_243:\n        /* \"#utility.yul\":5228:5249   */\n      tag_245\n        /* \"#utility.yul\":5243:5248   */\n      dup2\n        /* \"#utility.yul\":5228:5249   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5223:5226   */\n      dup3\n        /* \"#utility.yul\":5216:5250   */\n      mstore\n        /* \"#utility.yul\":5147:5256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5262:5380   */\n    tag_247:\n        /* \"#utility.yul\":5349:5373   */\n      tag_249\n        /* \"#utility.yul\":5367:5372   */\n      dup2\n        /* \"#utility.yul\":5349:5373   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5344:5347   */\n      dup3\n        /* \"#utility.yul\":5337:5374   */\n      mstore\n        /* \"#utility.yul\":5262:5380   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5386:5543   */\n    tag_251:\n        /* \"#utility.yul\":5491:5536   */\n      tag_253\n        /* \"#utility.yul\":5511:5535   */\n      tag_254\n        /* \"#utility.yul\":5529:5534   */\n      dup3\n        /* \"#utility.yul\":5511:5535   */\n      tag_250\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5491:5536   */\n      tag_255\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5486:5489   */\n      dup3\n        /* \"#utility.yul\":5479:5537   */\n      mstore\n        /* \"#utility.yul\":5386:5543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5549:5909   */\n    tag_256:\n        /* \"#utility.yul\":5635:5638   */\n      0x00\n        /* \"#utility.yul\":5663:5701   */\n      tag_258\n        /* \"#utility.yul\":5695:5700   */\n      dup3\n        /* \"#utility.yul\":5663:5701   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5717:5787   */\n      tag_260\n        /* \"#utility.yul\":5780:5786   */\n      dup2\n        /* \"#utility.yul\":5775:5778   */\n      dup6\n        /* \"#utility.yul\":5717:5787   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5710:5787   */\n      swap4\n      pop\n        /* \"#utility.yul\":5796:5848   */\n      tag_262\n        /* \"#utility.yul\":5841:5847   */\n      dup2\n        /* \"#utility.yul\":5836:5839   */\n      dup6\n        /* \"#utility.yul\":5829:5833   */\n      0x20\n        /* \"#utility.yul\":5822:5827   */\n      dup7\n        /* \"#utility.yul\":5818:5834   */\n      add\n        /* \"#utility.yul\":5796:5848   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5873:5902   */\n      tag_264\n        /* \"#utility.yul\":5895:5901   */\n      dup2\n        /* \"#utility.yul\":5873:5902   */\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5868:5871   */\n      dup5\n        /* \"#utility.yul\":5864:5903   */\n      add\n        /* \"#utility.yul\":5857:5903   */\n      swap2\n      pop\n        /* \"#utility.yul\":5639:5909   */\n      pop\n        /* \"#utility.yul\":5549:5909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5915:6288   */\n    tag_266:\n        /* \"#utility.yul\":6019:6022   */\n      0x00\n        /* \"#utility.yul\":6047:6085   */\n      tag_268\n        /* \"#utility.yul\":6079:6084   */\n      dup3\n        /* \"#utility.yul\":6047:6085   */\n      tag_259\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6101:6189   */\n      tag_269\n        /* \"#utility.yul\":6182:6188   */\n      dup2\n        /* \"#utility.yul\":6177:6180   */\n      dup6\n        /* \"#utility.yul\":6101:6189   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6094:6189   */\n      swap4\n      pop\n        /* \"#utility.yul\":6198:6250   */\n      tag_271\n        /* \"#utility.yul\":6243:6249   */\n      dup2\n        /* \"#utility.yul\":6238:6241   */\n      dup6\n        /* \"#utility.yul\":6231:6235   */\n      0x20\n        /* \"#utility.yul\":6224:6229   */\n      dup7\n        /* \"#utility.yul\":6220:6236   */\n      add\n        /* \"#utility.yul\":6198:6250   */\n      tag_263\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6275:6281   */\n      dup1\n        /* \"#utility.yul\":6270:6273   */\n      dup5\n        /* \"#utility.yul\":6266:6282   */\n      add\n        /* \"#utility.yul\":6259:6282   */\n      swap2\n      pop\n        /* \"#utility.yul\":6023:6288   */\n      pop\n        /* \"#utility.yul\":5915:6288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6294:6660   */\n    tag_272:\n        /* \"#utility.yul\":6436:6439   */\n      0x00\n        /* \"#utility.yul\":6457:6524   */\n      tag_274\n        /* \"#utility.yul\":6521:6523   */\n      0x21\n        /* \"#utility.yul\":6516:6519   */\n      dup4\n        /* \"#utility.yul\":6457:6524   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6450:6524   */\n      swap2\n      pop\n        /* \"#utility.yul\":6533:6626   */\n      tag_276\n        /* \"#utility.yul\":6622:6625   */\n      dup3\n        /* \"#utility.yul\":6533:6626   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6651:6653   */\n      0x40\n        /* \"#utility.yul\":6646:6649   */\n      dup3\n        /* \"#utility.yul\":6642:6654   */\n      add\n        /* \"#utility.yul\":6635:6654   */\n      swap1\n      pop\n        /* \"#utility.yul\":6294:6660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6666:7032   */\n    tag_278:\n        /* \"#utility.yul\":6808:6811   */\n      0x00\n        /* \"#utility.yul\":6829:6896   */\n      tag_280\n        /* \"#utility.yul\":6893:6895   */\n      0x14\n        /* \"#utility.yul\":6888:6891   */\n      dup4\n        /* \"#utility.yul\":6829:6896   */\n      tag_275\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6822:6896   */\n      swap2\n      pop\n        /* \"#utility.yul\":6905:6998   */\n      tag_281\n        /* \"#utility.yul\":6994:6997   */\n      dup3\n        /* \"#utility.yul\":6905:6998   */\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7018:7021   */\n      dup3\n        /* \"#utility.yul\":7014:7026   */\n      add\n        /* \"#utility.yul\":7007:7026   */\n      swap1\n      pop\n        /* \"#utility.yul\":6666:7032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7038:7404   */\n    tag_283:\n        /* \"#utility.yul\":7180:7183   */\n      0x00\n        /* \"#utility.yul\":7201:7268   */\n      tag_285\n        /* \"#utility.yul\":7265:7267   */\n      0x12\n        /* \"#utility.yul\":7260:7263   */\n      dup4\n        /* \"#utility.yul\":7201:7268   */\n      tag_275\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7194:7268   */\n      swap2\n      pop\n        /* \"#utility.yul\":7277:7370   */\n      tag_286\n        /* \"#utility.yul\":7366:7369   */\n      dup3\n        /* \"#utility.yul\":7277:7370   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7395:7397   */\n      0x20\n        /* \"#utility.yul\":7390:7393   */\n      dup3\n        /* \"#utility.yul\":7386:7398   */\n      add\n        /* \"#utility.yul\":7379:7398   */\n      swap1\n      pop\n        /* \"#utility.yul\":7038:7404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7410:7776   */\n    tag_288:\n        /* \"#utility.yul\":7552:7555   */\n      0x00\n        /* \"#utility.yul\":7573:7640   */\n      tag_290\n        /* \"#utility.yul\":7637:7639   */\n      0x23\n        /* \"#utility.yul\":7632:7635   */\n      dup4\n        /* \"#utility.yul\":7573:7640   */\n      tag_275\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7566:7640   */\n      swap2\n      pop\n        /* \"#utility.yul\":7649:7742   */\n      tag_291\n        /* \"#utility.yul\":7738:7741   */\n      dup3\n        /* \"#utility.yul\":7649:7742   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7767:7769   */\n      0x40\n        /* \"#utility.yul\":7762:7765   */\n      dup3\n        /* \"#utility.yul\":7758:7770   */\n      add\n        /* \"#utility.yul\":7751:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7410:7776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7782:8148   */\n    tag_293:\n        /* \"#utility.yul\":7924:7927   */\n      0x00\n        /* \"#utility.yul\":7945:8012   */\n      tag_295\n        /* \"#utility.yul\":8009:8011   */\n      0x14\n        /* \"#utility.yul\":8004:8007   */\n      dup4\n        /* \"#utility.yul\":7945:8012   */\n      tag_275\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7938:8012   */\n      swap2\n      pop\n        /* \"#utility.yul\":8021:8114   */\n      tag_296\n        /* \"#utility.yul\":8110:8113   */\n      dup3\n        /* \"#utility.yul\":8021:8114   */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8139:8141   */\n      0x20\n        /* \"#utility.yul\":8134:8137   */\n      dup3\n        /* \"#utility.yul\":8130:8142   */\n      add\n        /* \"#utility.yul\":8123:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7782:8148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8520   */\n    tag_298:\n        /* \"#utility.yul\":8296:8299   */\n      0x00\n        /* \"#utility.yul\":8317:8384   */\n      tag_300\n        /* \"#utility.yul\":8381:8383   */\n      0x1c\n        /* \"#utility.yul\":8376:8379   */\n      dup4\n        /* \"#utility.yul\":8317:8384   */\n      tag_275\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8310:8384   */\n      swap2\n      pop\n        /* \"#utility.yul\":8393:8486   */\n      tag_301\n        /* \"#utility.yul\":8482:8485   */\n      dup3\n        /* \"#utility.yul\":8393:8486   */\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8511:8513   */\n      0x20\n        /* \"#utility.yul\":8506:8509   */\n      dup3\n        /* \"#utility.yul\":8502:8514   */\n      add\n        /* \"#utility.yul\":8495:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8154:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8644   */\n    tag_303:\n        /* \"#utility.yul\":8613:8637   */\n      tag_305\n        /* \"#utility.yul\":8631:8636   */\n      dup2\n        /* \"#utility.yul\":8613:8637   */\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8608:8611   */\n      dup3\n        /* \"#utility.yul\":8601:8638   */\n      mstore\n        /* \"#utility.yul\":8526:8644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8650:8906   */\n    tag_155:\n        /* \"#utility.yul\":8762:8765   */\n      0x00\n        /* \"#utility.yul\":8777:8852   */\n      tag_308\n        /* \"#utility.yul\":8848:8851   */\n      dup3\n        /* \"#utility.yul\":8839:8845   */\n      dup5\n        /* \"#utility.yul\":8777:8852   */\n      tag_251\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8877:8879   */\n      0x20\n        /* \"#utility.yul\":8872:8875   */\n      dup3\n        /* \"#utility.yul\":8868:8880   */\n      add\n        /* \"#utility.yul\":8861:8880   */\n      swap2\n      pop\n        /* \"#utility.yul\":8897:8900   */\n      dup2\n        /* \"#utility.yul\":8890:8900   */\n      swap1\n      pop\n        /* \"#utility.yul\":8650:8906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8912:9183   */\n    tag_107:\n        /* \"#utility.yul\":9042:9045   */\n      0x00\n        /* \"#utility.yul\":9064:9157   */\n      tag_310\n        /* \"#utility.yul\":9153:9156   */\n      dup3\n        /* \"#utility.yul\":9144:9150   */\n      dup5\n        /* \"#utility.yul\":9064:9157   */\n      tag_266\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9057:9157   */\n      swap2\n      pop\n        /* \"#utility.yul\":9174:9177   */\n      dup2\n        /* \"#utility.yul\":9167:9177   */\n      swap1\n      pop\n        /* \"#utility.yul\":8912:9183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9189:9399   */\n    tag_26:\n        /* \"#utility.yul\":9276:9280   */\n      0x00\n        /* \"#utility.yul\":9314:9316   */\n      0x20\n        /* \"#utility.yul\":9303:9312   */\n      dup3\n        /* \"#utility.yul\":9299:9317   */\n      add\n        /* \"#utility.yul\":9291:9317   */\n      swap1\n      pop\n        /* \"#utility.yul\":9327:9392   */\n      tag_312\n        /* \"#utility.yul\":9389:9390   */\n      0x00\n        /* \"#utility.yul\":9378:9387   */\n      dup4\n        /* \"#utility.yul\":9374:9391   */\n      add\n        /* \"#utility.yul\":9365:9371   */\n      dup5\n        /* \"#utility.yul\":9327:9392   */\n      tag_243\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9189:9399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9405:9627   */\n    tag_68:\n        /* \"#utility.yul\":9498:9502   */\n      0x00\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"#utility.yul\":9525:9534   */\n      dup3\n        /* \"#utility.yul\":9521:9539   */\n      add\n        /* \"#utility.yul\":9513:9539   */\n      swap1\n      pop\n        /* \"#utility.yul\":9549:9620   */\n      tag_314\n        /* \"#utility.yul\":9617:9618   */\n      0x00\n        /* \"#utility.yul\":9606:9615   */\n      dup4\n        /* \"#utility.yul\":9602:9619   */\n      add\n        /* \"#utility.yul\":9593:9599   */\n      dup5\n        /* \"#utility.yul\":9549:9620   */\n      tag_247\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9405:9627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9633:9942   */\n    tag_41:\n        /* \"#utility.yul\":9744:9748   */\n      0x00\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"#utility.yul\":9771:9780   */\n      dup3\n        /* \"#utility.yul\":9767:9785   */\n      add\n        /* \"#utility.yul\":9759:9785   */\n      swap1\n      pop\n        /* \"#utility.yul\":9831:9840   */\n      dup2\n        /* \"#utility.yul\":9825:9829   */\n      dup2\n        /* \"#utility.yul\":9821:9841   */\n      sub\n        /* \"#utility.yul\":9817:9818   */\n      0x00\n        /* \"#utility.yul\":9806:9815   */\n      dup4\n        /* \"#utility.yul\":9802:9819   */\n      add\n        /* \"#utility.yul\":9795:9842   */\n      mstore\n        /* \"#utility.yul\":9859:9935   */\n      tag_316\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9921:9927   */\n      dup5\n        /* \"#utility.yul\":9859:9935   */\n      tag_256\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9851:9935   */\n      swap1\n      pop\n        /* \"#utility.yul\":9633:9942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9948:10367   */\n    tag_91:\n        /* \"#utility.yul\":10114:10118   */\n      0x00\n        /* \"#utility.yul\":10152:10154   */\n      0x20\n        /* \"#utility.yul\":10141:10150   */\n      dup3\n        /* \"#utility.yul\":10137:10155   */\n      add\n        /* \"#utility.yul\":10129:10155   */\n      swap1\n      pop\n        /* \"#utility.yul\":10201:10210   */\n      dup2\n        /* \"#utility.yul\":10195:10199   */\n      dup2\n        /* \"#utility.yul\":10191:10211   */\n      sub\n        /* \"#utility.yul\":10187:10188   */\n      0x00\n        /* \"#utility.yul\":10176:10185   */\n      dup4\n        /* \"#utility.yul\":10172:10189   */\n      add\n        /* \"#utility.yul\":10165:10212   */\n      mstore\n        /* \"#utility.yul\":10229:10360   */\n      tag_318\n        /* \"#utility.yul\":10355:10359   */\n      dup2\n        /* \"#utility.yul\":10229:10360   */\n      tag_272\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10221:10360   */\n      swap1\n      pop\n        /* \"#utility.yul\":9948:10367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10373:10792   */\n    tag_145:\n        /* \"#utility.yul\":10539:10543   */\n      0x00\n        /* \"#utility.yul\":10577:10579   */\n      0x20\n        /* \"#utility.yul\":10566:10575   */\n      dup3\n        /* \"#utility.yul\":10562:10580   */\n      add\n        /* \"#utility.yul\":10554:10580   */\n      swap1\n      pop\n        /* \"#utility.yul\":10626:10635   */\n      dup2\n        /* \"#utility.yul\":10620:10624   */\n      dup2\n        /* \"#utility.yul\":10616:10636   */\n      sub\n        /* \"#utility.yul\":10612:10613   */\n      0x00\n        /* \"#utility.yul\":10601:10610   */\n      dup4\n        /* \"#utility.yul\":10597:10614   */\n      add\n        /* \"#utility.yul\":10590:10637   */\n      mstore\n        /* \"#utility.yul\":10654:10785   */\n      tag_320\n        /* \"#utility.yul\":10780:10784   */\n      dup2\n        /* \"#utility.yul\":10654:10785   */\n      tag_278\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10646:10785   */\n      swap1\n      pop\n        /* \"#utility.yul\":10373:10792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10798:11217   */\n    tag_122:\n        /* \"#utility.yul\":10964:10968   */\n      0x00\n        /* \"#utility.yul\":11002:11004   */\n      0x20\n        /* \"#utility.yul\":10991:11000   */\n      dup3\n        /* \"#utility.yul\":10987:11005   */\n      add\n        /* \"#utility.yul\":10979:11005   */\n      swap1\n      pop\n        /* \"#utility.yul\":11051:11060   */\n      dup2\n        /* \"#utility.yul\":11045:11049   */\n      dup2\n        /* \"#utility.yul\":11041:11061   */\n      sub\n        /* \"#utility.yul\":11037:11038   */\n      0x00\n        /* \"#utility.yul\":11026:11035   */\n      dup4\n        /* \"#utility.yul\":11022:11039   */\n      add\n        /* \"#utility.yul\":11015:11062   */\n      mstore\n        /* \"#utility.yul\":11079:11210   */\n      tag_322\n        /* \"#utility.yul\":11205:11209   */\n      dup2\n        /* \"#utility.yul\":11079:11210   */\n      tag_283\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11071:11210   */\n      swap1\n      pop\n        /* \"#utility.yul\":10798:11217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11223:11642   */\n    tag_132:\n        /* \"#utility.yul\":11389:11393   */\n      0x00\n        /* \"#utility.yul\":11427:11429   */\n      0x20\n        /* \"#utility.yul\":11416:11425   */\n      dup3\n        /* \"#utility.yul\":11412:11430   */\n      add\n        /* \"#utility.yul\":11404:11430   */\n      swap1\n      pop\n        /* \"#utility.yul\":11476:11485   */\n      dup2\n        /* \"#utility.yul\":11470:11474   */\n      dup2\n        /* \"#utility.yul\":11466:11486   */\n      sub\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11451:11460   */\n      dup4\n        /* \"#utility.yul\":11447:11464   */\n      add\n        /* \"#utility.yul\":11440:11487   */\n      mstore\n        /* \"#utility.yul\":11504:11635   */\n      tag_324\n        /* \"#utility.yul\":11630:11634   */\n      dup2\n        /* \"#utility.yul\":11504:11635   */\n      tag_288\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11496:11635   */\n      swap1\n      pop\n        /* \"#utility.yul\":11223:11642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11648:12067   */\n    tag_125:\n        /* \"#utility.yul\":11814:11818   */\n      0x00\n        /* \"#utility.yul\":11852:11854   */\n      0x20\n        /* \"#utility.yul\":11841:11850   */\n      dup3\n        /* \"#utility.yul\":11837:11855   */\n      add\n        /* \"#utility.yul\":11829:11855   */\n      swap1\n      pop\n        /* \"#utility.yul\":11901:11910   */\n      dup2\n        /* \"#utility.yul\":11895:11899   */\n      dup2\n        /* \"#utility.yul\":11891:11911   */\n      sub\n        /* \"#utility.yul\":11887:11888   */\n      0x00\n        /* \"#utility.yul\":11876:11885   */\n      dup4\n        /* \"#utility.yul\":11872:11889   */\n      add\n        /* \"#utility.yul\":11865:11912   */\n      mstore\n        /* \"#utility.yul\":11929:12060   */\n      tag_326\n        /* \"#utility.yul\":12055:12059   */\n      dup2\n        /* \"#utility.yul\":11929:12060   */\n      tag_293\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":11921:12060   */\n      swap1\n      pop\n        /* \"#utility.yul\":11648:12067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12073:12492   */\n    tag_117:\n        /* \"#utility.yul\":12239:12243   */\n      0x00\n        /* \"#utility.yul\":12277:12279   */\n      0x20\n        /* \"#utility.yul\":12266:12275   */\n      dup3\n        /* \"#utility.yul\":12262:12280   */\n      add\n        /* \"#utility.yul\":12254:12280   */\n      swap1\n      pop\n        /* \"#utility.yul\":12326:12335   */\n      dup2\n        /* \"#utility.yul\":12320:12324   */\n      dup2\n        /* \"#utility.yul\":12316:12336   */\n      sub\n        /* \"#utility.yul\":12312:12313   */\n      0x00\n        /* \"#utility.yul\":12301:12310   */\n      dup4\n        /* \"#utility.yul\":12297:12314   */\n      add\n        /* \"#utility.yul\":12290:12337   */\n      mstore\n        /* \"#utility.yul\":12354:12485   */\n      tag_328\n        /* \"#utility.yul\":12480:12484   */\n      dup2\n        /* \"#utility.yul\":12354:12485   */\n      tag_298\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12346:12485   */\n      swap1\n      pop\n        /* \"#utility.yul\":12073:12492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12498:12720   */\n    tag_30:\n        /* \"#utility.yul\":12591:12595   */\n      0x00\n        /* \"#utility.yul\":12629:12631   */\n      0x20\n        /* \"#utility.yul\":12618:12627   */\n      dup3\n        /* \"#utility.yul\":12614:12632   */\n      add\n        /* \"#utility.yul\":12606:12632   */\n      swap1\n      pop\n        /* \"#utility.yul\":12642:12713   */\n      tag_330\n        /* \"#utility.yul\":12710:12711   */\n      0x00\n        /* \"#utility.yul\":12699:12708   */\n      dup4\n        /* \"#utility.yul\":12695:12712   */\n      add\n        /* \"#utility.yul\":12686:12692   */\n      dup5\n        /* \"#utility.yul\":12642:12713   */\n      tag_303\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12498:12720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12726:12855   */\n    tag_173:\n        /* \"#utility.yul\":12760:12766   */\n      0x00\n        /* \"#utility.yul\":12787:12807   */\n      tag_332\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12777:12807   */\n      swap1\n      pop\n        /* \"#utility.yul\":12816:12849   */\n      tag_334\n        /* \"#utility.yul\":12844:12848   */\n      dup3\n        /* \"#utility.yul\":12836:12842   */\n      dup3\n        /* \"#utility.yul\":12816:12849   */\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12726:12855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12861:12936   */\n    tag_333:\n        /* \"#utility.yul\":12894:12900   */\n      0x00\n        /* \"#utility.yul\":12927:12929   */\n      0x40\n        /* \"#utility.yul\":12921:12930   */\n      mload\n        /* \"#utility.yul\":12911:12930   */\n      swap1\n      pop\n        /* \"#utility.yul\":12861:12936   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12942:13249   */\n    tag_172:\n        /* \"#utility.yul\":13003:13007   */\n      0x00\n        /* \"#utility.yul\":13093:13111   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13085:13091   */\n      dup3\n        /* \"#utility.yul\":13082:13112   */\n      gt\n        /* \"#utility.yul\":13079:13135   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":13115:13133   */\n      tag_339\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13079:13135   */\n    tag_338:\n        /* \"#utility.yul\":13153:13182   */\n      tag_341\n        /* \"#utility.yul\":13175:13181   */\n      dup3\n        /* \"#utility.yul\":13153:13182   */\n      tag_265\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13145:13182   */\n      swap1\n      pop\n        /* \"#utility.yul\":13237:13241   */\n      0x20\n        /* \"#utility.yul\":13231:13235   */\n      dup2\n        /* \"#utility.yul\":13227:13242   */\n      add\n        /* \"#utility.yul\":13219:13242   */\n      swap1\n      pop\n        /* \"#utility.yul\":12942:13249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13371   */\n    tag_342:\n        /* \"#utility.yul\":13306:13310   */\n      0x00\n        /* \"#utility.yul\":13329:13332   */\n      dup2\n        /* \"#utility.yul\":13321:13332   */\n      swap1\n      pop\n        /* \"#utility.yul\":13359:13363   */\n      0x20\n        /* \"#utility.yul\":13354:13357   */\n      dup3\n        /* \"#utility.yul\":13350:13364   */\n      add\n        /* \"#utility.yul\":13342:13364   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13377:13475   */\n    tag_259:\n        /* \"#utility.yul\":13428:13434   */\n      0x00\n        /* \"#utility.yul\":13462:13467   */\n      dup2\n        /* \"#utility.yul\":13456:13468   */\n      mload\n        /* \"#utility.yul\":13446:13468   */\n      swap1\n      pop\n        /* \"#utility.yul\":13377:13475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13481:13649   */\n    tag_261:\n        /* \"#utility.yul\":13564:13575   */\n      0x00\n        /* \"#utility.yul\":13598:13604   */\n      dup3\n        /* \"#utility.yul\":13593:13596   */\n      dup3\n        /* \"#utility.yul\":13586:13605   */\n      mstore\n        /* \"#utility.yul\":13638:13642   */\n      0x20\n        /* \"#utility.yul\":13633:13636   */\n      dup3\n        /* \"#utility.yul\":13629:13643   */\n      add\n        /* \"#utility.yul\":13614:13643   */\n      swap1\n      pop\n        /* \"#utility.yul\":13481:13649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13655:13802   */\n    tag_270:\n        /* \"#utility.yul\":13756:13767   */\n      0x00\n        /* \"#utility.yul\":13793:13796   */\n      dup2\n        /* \"#utility.yul\":13778:13796   */\n      swap1\n      pop\n        /* \"#utility.yul\":13655:13802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13808:13977   */\n    tag_275:\n        /* \"#utility.yul\":13892:13903   */\n      0x00\n        /* \"#utility.yul\":13926:13932   */\n      dup3\n        /* \"#utility.yul\":13921:13924   */\n      dup3\n        /* \"#utility.yul\":13914:13933   */\n      mstore\n        /* \"#utility.yul\":13966:13970   */\n      0x20\n        /* \"#utility.yul\":13961:13964   */\n      dup3\n        /* \"#utility.yul\":13957:13971   */\n      add\n        /* \"#utility.yul\":13942:13971   */\n      swap1\n      pop\n        /* \"#utility.yul\":13808:13977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13983:14288   */\n    tag_95:\n        /* \"#utility.yul\":14023:14026   */\n      0x00\n        /* \"#utility.yul\":14042:14062   */\n      tag_349\n        /* \"#utility.yul\":14060:14061   */\n      dup3\n        /* \"#utility.yul\":14042:14062   */\n      tag_306\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":14037:14062   */\n      swap2\n      pop\n        /* \"#utility.yul\":14076:14096   */\n      tag_350\n        /* \"#utility.yul\":14094:14095   */\n      dup4\n        /* \"#utility.yul\":14076:14096   */\n      tag_306\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":14071:14096   */\n      swap3\n      pop\n        /* \"#utility.yul\":14230:14231   */\n      dup3\n        /* \"#utility.yul\":14162:14228   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14158:14232   */\n      sub\n        /* \"#utility.yul\":14155:14156   */\n      dup3\n        /* \"#utility.yul\":14152:14233   */\n      gt\n        /* \"#utility.yul\":14149:14256   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":14236:14254   */\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":14149:14256   */\n    tag_351:\n        /* \"#utility.yul\":14280:14281   */\n      dup3\n        /* \"#utility.yul\":14277:14278   */\n      dup3\n        /* \"#utility.yul\":14273:14282   */\n      add\n        /* \"#utility.yul\":14266:14282   */\n      swap1\n      pop\n        /* \"#utility.yul\":13983:14288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14294:14485   */\n    tag_93:\n        /* \"#utility.yul\":14334:14338   */\n      0x00\n        /* \"#utility.yul\":14354:14374   */\n      tag_355\n        /* \"#utility.yul\":14372:14373   */\n      dup3\n        /* \"#utility.yul\":14354:14374   */\n      tag_306\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":14349:14374   */\n      swap2\n      pop\n        /* \"#utility.yul\":14388:14408   */\n      tag_356\n        /* \"#utility.yul\":14406:14407   */\n      dup4\n        /* \"#utility.yul\":14388:14408   */\n      tag_306\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":14383:14408   */\n      swap3\n      pop\n        /* \"#utility.yul\":14427:14428   */\n      dup3\n        /* \"#utility.yul\":14424:14425   */\n      dup3\n        /* \"#utility.yul\":14421:14429   */\n      lt\n        /* \"#utility.yul\":14418:14452   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":14432:14450   */\n      tag_358\n      tag_353\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14418:14452   */\n    tag_357:\n        /* \"#utility.yul\":14477:14478   */\n      dup3\n        /* \"#utility.yul\":14474:14475   */\n      dup3\n        /* \"#utility.yul\":14470:14479   */\n      sub\n        /* \"#utility.yul\":14462:14479   */\n      swap1\n      pop\n        /* \"#utility.yul\":14294:14485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14491:14587   */\n    tag_359:\n        /* \"#utility.yul\":14528:14535   */\n      0x00\n        /* \"#utility.yul\":14557:14581   */\n      tag_361\n        /* \"#utility.yul\":14575:14580   */\n      dup3\n        /* \"#utility.yul\":14557:14581   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14546:14581   */\n      swap1\n      pop\n        /* \"#utility.yul\":14491:14587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14593:14683   */\n    tag_246:\n        /* \"#utility.yul\":14627:14634   */\n      0x00\n        /* \"#utility.yul\":14670:14675   */\n      dup2\n        /* \"#utility.yul\":14663:14676   */\n      iszero\n        /* \"#utility.yul\":14656:14677   */\n      iszero\n        /* \"#utility.yul\":14645:14677   */\n      swap1\n      pop\n        /* \"#utility.yul\":14593:14683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14689:14766   */\n    tag_250:\n        /* \"#utility.yul\":14726:14733   */\n      0x00\n        /* \"#utility.yul\":14755:14760   */\n      dup2\n        /* \"#utility.yul\":14744:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14689:14766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14772:14898   */\n    tag_362:\n        /* \"#utility.yul\":14809:14816   */\n      0x00\n        /* \"#utility.yul\":14849:14891   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14842:14847   */\n      dup3\n        /* \"#utility.yul\":14838:14892   */\n      and\n        /* \"#utility.yul\":14827:14892   */\n      swap1\n      pop\n        /* \"#utility.yul\":14772:14898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14904:14981   */\n    tag_306:\n        /* \"#utility.yul\":14941:14948   */\n      0x00\n        /* \"#utility.yul\":14970:14975   */\n      dup2\n        /* \"#utility.yul\":14959:14975   */\n      swap1\n      pop\n        /* \"#utility.yul\":14904:14981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14987:15581   */\n    tag_153:\n        /* \"#utility.yul\":15071:15076   */\n      0x00\n        /* \"#utility.yul\":15102:15140   */\n      tag_368\n        /* \"#utility.yul\":15134:15139   */\n      dup3\n        /* \"#utility.yul\":15102:15140   */\n      tag_259\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":15165:15170   */\n      dup3\n        /* \"#utility.yul\":15192:15232   */\n      tag_369\n        /* \"#utility.yul\":15226:15231   */\n      dup5\n        /* \"#utility.yul\":15192:15232   */\n      tag_342\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":15180:15232   */\n      swap1\n      pop\n        /* \"#utility.yul\":15251:15286   */\n      tag_370\n        /* \"#utility.yul\":15277:15285   */\n      dup2\n        /* \"#utility.yul\":15251:15286   */\n      tag_371\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":15242:15286   */\n      swap3\n      pop\n        /* \"#utility.yul\":15310:15312   */\n      0x20\n        /* \"#utility.yul\":15302:15308   */\n      dup3\n        /* \"#utility.yul\":15299:15313   */\n      lt\n        /* \"#utility.yul\":15296:15574   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":15381:15550   */\n      tag_373\n        /* \"#utility.yul\":15466:15532   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15436:15442   */\n      dup4\n        /* \"#utility.yul\":15432:15434   */\n      0x20\n        /* \"#utility.yul\":15428:15443   */\n      sub\n        /* \"#utility.yul\":15425:15426   */\n      0x08\n        /* \"#utility.yul\":15421:15444   */\n      mul\n        /* \"#utility.yul\":15381:15550   */\n      tag_374\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":15358:15363   */\n      dup4\n        /* \"#utility.yul\":15337:15564   */\n      and\n        /* \"#utility.yul\":15328:15564   */\n      swap3\n      pop\n        /* \"#utility.yul\":15296:15574   */\n    tag_372:\n        /* \"#utility.yul\":15077:15581   */\n      pop\n      pop\n        /* \"#utility.yul\":14987:15581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15587:15741   */\n    tag_178:\n        /* \"#utility.yul\":15671:15677   */\n      dup3\n        /* \"#utility.yul\":15666:15669   */\n      dup2\n        /* \"#utility.yul\":15661:15664   */\n      dup4\n        /* \"#utility.yul\":15648:15678   */\n      calldatacopy\n        /* \"#utility.yul\":15733:15734   */\n      0x00\n        /* \"#utility.yul\":15724:15730   */\n      dup4\n        /* \"#utility.yul\":15719:15722   */\n      dup4\n        /* \"#utility.yul\":15715:15731   */\n      add\n        /* \"#utility.yul\":15708:15735   */\n      mstore\n        /* \"#utility.yul\":15587:15741   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15747:16054   */\n    tag_263:\n        /* \"#utility.yul\":15815:15816   */\n      0x00\n        /* \"#utility.yul\":15825:15938   */\n    tag_377:\n        /* \"#utility.yul\":15839:15845   */\n      dup4\n        /* \"#utility.yul\":15836:15837   */\n      dup2\n        /* \"#utility.yul\":15833:15846   */\n      lt\n        /* \"#utility.yul\":15825:15938   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":15924:15925   */\n      dup1\n        /* \"#utility.yul\":15919:15922   */\n      dup3\n        /* \"#utility.yul\":15915:15926   */\n      add\n        /* \"#utility.yul\":15909:15927   */\n      mload\n        /* \"#utility.yul\":15905:15906   */\n      dup2\n        /* \"#utility.yul\":15900:15903   */\n      dup5\n        /* \"#utility.yul\":15896:15907   */\n      add\n        /* \"#utility.yul\":15889:15928   */\n      mstore\n        /* \"#utility.yul\":15861:15863   */\n      0x20\n        /* \"#utility.yul\":15858:15859   */\n      dup2\n        /* \"#utility.yul\":15854:15864   */\n      add\n        /* \"#utility.yul\":15849:15864   */\n      swap1\n      pop\n        /* \"#utility.yul\":15825:15938   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":15956:15962   */\n      dup4\n        /* \"#utility.yul\":15953:15954   */\n      dup2\n        /* \"#utility.yul\":15950:15963   */\n      gt\n        /* \"#utility.yul\":15947:16048   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":16036:16037   */\n      0x00\n        /* \"#utility.yul\":16027:16033   */\n      dup5\n        /* \"#utility.yul\":16022:16025   */\n      dup5\n        /* \"#utility.yul\":16018:16034   */\n      add\n        /* \"#utility.yul\":16011:16038   */\n      mstore\n        /* \"#utility.yul\":15947:16048   */\n    tag_380:\n        /* \"#utility.yul\":15796:16054   */\n      pop\n        /* \"#utility.yul\":15747:16054   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16060:16380   */\n    tag_100:\n        /* \"#utility.yul\":16104:16110   */\n      0x00\n        /* \"#utility.yul\":16141:16142   */\n      0x02\n        /* \"#utility.yul\":16135:16139   */\n      dup3\n        /* \"#utility.yul\":16131:16143   */\n      div\n        /* \"#utility.yul\":16121:16143   */\n      swap1\n      pop\n        /* \"#utility.yul\":16188:16189   */\n      0x01\n        /* \"#utility.yul\":16182:16186   */\n      dup3\n        /* \"#utility.yul\":16178:16190   */\n      and\n        /* \"#utility.yul\":16209:16227   */\n      dup1\n        /* \"#utility.yul\":16199:16280   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":16265:16269   */\n      0x7f\n        /* \"#utility.yul\":16257:16263   */\n      dup3\n        /* \"#utility.yul\":16253:16270   */\n      and\n        /* \"#utility.yul\":16243:16270   */\n      swap2\n      pop\n        /* \"#utility.yul\":16199:16280   */\n    tag_382:\n        /* \"#utility.yul\":16327:16329   */\n      0x20\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16316:16330   */\n      lt\n        /* \"#utility.yul\":16296:16314   */\n      dup2\n        /* \"#utility.yul\":16293:16331   */\n      eq\n        /* \"#utility.yul\":16290:16374   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":16346:16364   */\n      tag_384\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":16290:16374   */\n    tag_383:\n        /* \"#utility.yul\":16111:16380   */\n      pop\n        /* \"#utility.yul\":16060:16380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16386:16667   */\n    tag_335:\n        /* \"#utility.yul\":16469:16496   */\n      tag_387\n        /* \"#utility.yul\":16491:16495   */\n      dup3\n        /* \"#utility.yul\":16469:16496   */\n      tag_265\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":16461:16467   */\n      dup2\n        /* \"#utility.yul\":16457:16497   */\n      add\n        /* \"#utility.yul\":16599:16605   */\n      dup2\n        /* \"#utility.yul\":16587:16597   */\n      dup2\n        /* \"#utility.yul\":16584:16606   */\n      lt\n        /* \"#utility.yul\":16563:16581   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16551:16561   */\n      dup3\n        /* \"#utility.yul\":16548:16582   */\n      gt\n        /* \"#utility.yul\":16545:16607   */\n      or\n        /* \"#utility.yul\":16542:16630   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":16610:16628   */\n      tag_389\n      tag_340\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":16542:16630   */\n    tag_388:\n        /* \"#utility.yul\":16650:16660   */\n      dup1\n        /* \"#utility.yul\":16646:16648   */\n      0x40\n        /* \"#utility.yul\":16639:16661   */\n      mstore\n        /* \"#utility.yul\":16429:16667   */\n      pop\n        /* \"#utility.yul\":16386:16667   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16673:16752   */\n    tag_255:\n        /* \"#utility.yul\":16712:16719   */\n      0x00\n        /* \"#utility.yul\":16741:16746   */\n      dup2\n        /* \"#utility.yul\":16730:16746   */\n      swap1\n      pop\n        /* \"#utility.yul\":16673:16752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16758:16938   */\n    tag_353:\n        /* \"#utility.yul\":16806:16883   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16803:16804   */\n      0x00\n        /* \"#utility.yul\":16796:16884   */\n      mstore\n        /* \"#utility.yul\":16903:16907   */\n      0x11\n        /* \"#utility.yul\":16900:16901   */\n      0x04\n        /* \"#utility.yul\":16893:16908   */\n      mstore\n        /* \"#utility.yul\":16927:16931   */\n      0x24\n        /* \"#utility.yul\":16924:16925   */\n      0x00\n        /* \"#utility.yul\":16917:16932   */\n      revert\n        /* \"#utility.yul\":16944:17124   */\n    tag_385:\n        /* \"#utility.yul\":16992:17069   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16990   */\n      0x00\n        /* \"#utility.yul\":16982:17070   */\n      mstore\n        /* \"#utility.yul\":17089:17093   */\n      0x22\n        /* \"#utility.yul\":17086:17087   */\n      0x04\n        /* \"#utility.yul\":17079:17094   */\n      mstore\n        /* \"#utility.yul\":17113:17117   */\n      0x24\n        /* \"#utility.yul\":17110:17111   */\n      0x00\n        /* \"#utility.yul\":17103:17118   */\n      revert\n        /* \"#utility.yul\":17130:17310   */\n    tag_340:\n        /* \"#utility.yul\":17178:17255   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17175:17176   */\n      0x00\n        /* \"#utility.yul\":17168:17256   */\n      mstore\n        /* \"#utility.yul\":17275:17279   */\n      0x41\n        /* \"#utility.yul\":17272:17273   */\n      0x04\n        /* \"#utility.yul\":17265:17280   */\n      mstore\n        /* \"#utility.yul\":17299:17303   */\n      0x24\n        /* \"#utility.yul\":17296:17297   */\n      0x00\n        /* \"#utility.yul\":17289:17304   */\n      revert\n        /* \"#utility.yul\":17316:17470   */\n    tag_371:\n        /* \"#utility.yul\":17359:17370   */\n      0x00\n        /* \"#utility.yul\":17395:17424   */\n      tag_395\n        /* \"#utility.yul\":17419:17422   */\n      dup3\n        /* \"#utility.yul\":17413:17423   */\n      mload\n        /* \"#utility.yul\":17395:17424   */\n      tag_250\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":17458:17463   */\n      dup1\n        /* \"#utility.yul\":17434:17463   */\n      swap2\n      pop\n        /* \"#utility.yul\":17371:17470   */\n      pop\n        /* \"#utility.yul\":17316:17470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17476:17593   */\n    tag_194:\n        /* \"#utility.yul\":17585:17586   */\n      0x00\n        /* \"#utility.yul\":17582:17583   */\n      dup1\n        /* \"#utility.yul\":17575:17587   */\n      revert\n        /* \"#utility.yul\":17599:17716   */\n    tag_176:\n        /* \"#utility.yul\":17708:17709   */\n      0x00\n        /* \"#utility.yul\":17705:17706   */\n      dup1\n        /* \"#utility.yul\":17698:17710   */\n      revert\n        /* \"#utility.yul\":17722:17839   */\n    tag_234:\n        /* \"#utility.yul\":17831:17832   */\n      0x00\n        /* \"#utility.yul\":17828:17829   */\n      dup1\n        /* \"#utility.yul\":17821:17833   */\n      revert\n        /* \"#utility.yul\":17845:17962   */\n    tag_203:\n        /* \"#utility.yul\":17954:17955   */\n      0x00\n        /* \"#utility.yul\":17951:17952   */\n      dup1\n        /* \"#utility.yul\":17944:17956   */\n      revert\n        /* \"#utility.yul\":17968:18070   */\n    tag_265:\n        /* \"#utility.yul\":18009:18015   */\n      0x00\n        /* \"#utility.yul\":18060:18062   */\n      0x1f\n        /* \"#utility.yul\":18056:18063   */\n      not\n        /* \"#utility.yul\":18051:18053   */\n      0x1f\n        /* \"#utility.yul\":18044:18049   */\n      dup4\n        /* \"#utility.yul\":18040:18054   */\n      add\n        /* \"#utility.yul\":18036:18064   */\n      and\n        /* \"#utility.yul\":18026:18064   */\n      swap1\n      pop\n        /* \"#utility.yul\":17968:18070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18076:18183   */\n    tag_374:\n        /* \"#utility.yul\":18120:18128   */\n      0x00\n        /* \"#utility.yul\":18170:18175   */\n      dup3\n        /* \"#utility.yul\":18164:18168   */\n      dup3\n        /* \"#utility.yul\":18160:18176   */\n      shl\n        /* \"#utility.yul\":18139:18176   */\n      swap1\n      pop\n        /* \"#utility.yul\":18076:18183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18189:18409   */\n    tag_277:\n        /* \"#utility.yul\":18329:18363   */\n      0x496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e63\n        /* \"#utility.yul\":18325:18326   */\n      0x00\n        /* \"#utility.yul\":18317:18323   */\n      dup3\n        /* \"#utility.yul\":18313:18327   */\n      add\n        /* \"#utility.yul\":18306:18364   */\n      mstore\n        /* \"#utility.yul\":18398:18401   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18393:18395   */\n      0x20\n        /* \"#utility.yul\":18385:18391   */\n      dup3\n        /* \"#utility.yul\":18381:18396   */\n      add\n        /* \"#utility.yul\":18374:18402   */\n      mstore\n        /* \"#utility.yul\":18189:18409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18415:18585   */\n    tag_282:\n        /* \"#utility.yul\":18555:18577   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":18551:18552   */\n      0x00\n        /* \"#utility.yul\":18543:18549   */\n      dup3\n        /* \"#utility.yul\":18539:18553   */\n      add\n        /* \"#utility.yul\":18532:18578   */\n      mstore\n        /* \"#utility.yul\":18415:18585   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18591:18759   */\n    tag_287:\n        /* \"#utility.yul\":18731:18751   */\n      0x4e6f7420656e6f7567682062616c616e63650000000000000000000000000000\n        /* \"#utility.yul\":18727:18728   */\n      0x00\n        /* \"#utility.yul\":18719:18725   */\n      dup3\n        /* \"#utility.yul\":18715:18729   */\n      add\n        /* \"#utility.yul\":18708:18752   */\n      mstore\n        /* \"#utility.yul\":18591:18759   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18765:18987   */\n    tag_292:\n        /* \"#utility.yul\":18905:18939   */\n      0x446174612073697a65206578636565647320746865206c696d6974206f662031\n        /* \"#utility.yul\":18901:18902   */\n      0x00\n        /* \"#utility.yul\":18893:18899   */\n      dup3\n        /* \"#utility.yul\":18889:18903   */\n      add\n        /* \"#utility.yul\":18882:18940   */\n      mstore\n        /* \"#utility.yul\":18974:18979   */\n      0x304d420000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18969:18971   */\n      0x20\n        /* \"#utility.yul\":18961:18967   */\n      dup3\n        /* \"#utility.yul\":18957:18972   */\n      add\n        /* \"#utility.yul\":18950:18980   */\n      mstore\n        /* \"#utility.yul\":18765:18987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18993:19163   */\n    tag_297:\n        /* \"#utility.yul\":19133:19155   */\n      0x4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000\n        /* \"#utility.yul\":19129:19130   */\n      0x00\n        /* \"#utility.yul\":19121:19127   */\n      dup3\n        /* \"#utility.yul\":19117:19131   */\n      add\n        /* \"#utility.yul\":19110:19156   */\n      mstore\n        /* \"#utility.yul\":18993:19163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19169:19347   */\n    tag_302:\n        /* \"#utility.yul\":19309:19339   */\n      0x446174612073697a6520657863656564732031304d42206c696d697400000000\n        /* \"#utility.yul\":19305:19306   */\n      0x00\n        /* \"#utility.yul\":19297:19303   */\n      dup3\n        /* \"#utility.yul\":19293:19307   */\n      add\n        /* \"#utility.yul\":19286:19340   */\n      mstore\n        /* \"#utility.yul\":19169:19347   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19353:19475   */\n    tag_182:\n        /* \"#utility.yul\":19426:19450   */\n      tag_409\n        /* \"#utility.yul\":19444:19449   */\n      dup2\n        /* \"#utility.yul\":19426:19450   */\n      tag_359\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":19419:19424   */\n      dup2\n        /* \"#utility.yul\":19416:19451   */\n      eq\n        /* \"#utility.yul\":19406:19469   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":19465:19466   */\n      0x00\n        /* \"#utility.yul\":19462:19463   */\n      dup1\n        /* \"#utility.yul\":19455:19467   */\n      revert\n        /* \"#utility.yul\":19406:19469   */\n    tag_410:\n        /* \"#utility.yul\":19353:19475   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19481:19603   */\n    tag_186:\n        /* \"#utility.yul\":19554:19578   */\n      tag_412\n        /* \"#utility.yul\":19572:19577   */\n      dup2\n        /* \"#utility.yul\":19554:19578   */\n      tag_250\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":19547:19552   */\n      dup2\n        /* \"#utility.yul\":19544:19579   */\n      eq\n        /* \"#utility.yul\":19534:19597   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":19593:19594   */\n      0x00\n        /* \"#utility.yul\":19590:19591   */\n      dup1\n        /* \"#utility.yul\":19583:19595   */\n      revert\n        /* \"#utility.yul\":19534:19597   */\n    tag_413:\n        /* \"#utility.yul\":19481:19603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19609:19731   */\n    tag_199:\n        /* \"#utility.yul\":19682:19706   */\n      tag_415\n        /* \"#utility.yul\":19700:19705   */\n      dup2\n        /* \"#utility.yul\":19682:19706   */\n      tag_306\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":19675:19680   */\n      dup2\n        /* \"#utility.yul\":19672:19707   */\n      eq\n        /* \"#utility.yul\":19662:19725   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":19721:19722   */\n      0x00\n        /* \"#utility.yul\":19718:19719   */\n      dup1\n        /* \"#utility.yul\":19711:19723   */\n      revert\n        /* \"#utility.yul\":19662:19725   */\n    tag_416:\n        /* \"#utility.yul\":19609:19731   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a115901fb7d7b7daf1b09a32398a437b4610429a11bf4307ce51aa65df7bb5264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405264e8d4a5100060005534801561001957600080fd5b50600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b348061006f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610296578063ac5c8535146102c6578063d8218148146102e2578063dd62ed3e14610312576100f5565b806370a08231146101fc5780638bd40c3b1461022c578063965d68d914610248578063a4da229014610278576100f5565b806354f6127f116100d357806354f6127f146101785780636377fc8b146101a857806369cef46c146101c45780636c12ed28146101e0576100f5565b8063095ea7b3146100fa57806318160ddd1461012a57806323b872dd14610148575b600080fd5b610114600480360381019061010f91906111ef565b610342565b60405161012191906114e0565b60405180910390f35b610132610434565b60405161013f91906115f8565b60405180910390f35b610162600480360381019061015d919061119c565b61043a565b60405161016f91906114e0565b60405180910390f35b610192600480360381019061018d919061122f565b6106f5565b60405161019f9190611516565b60405180910390f35b6101c260048036038101906101bd9190611289565b61079a565b005b6101de60048036038101906101d99190611289565b61081a565b005b6101fa60048036038101906101f5919061119c565b61089c565b005b6102166004803603810190610211919061112f565b610b21565b60405161022391906115f8565b60405180910390f35b610246600480360381019061024191906112d2565b610b39565b005b610262600480360381019061025d919061122f565b610bf0565b60405161026f9190611516565b60405180910390f35b610280610c95565b60405161028d91906114fb565b60405180910390f35b6102b060048036038101906102ab91906111ef565b610c9f565b6040516102bd91906114e0565b60405180910390f35b6102e060048036038101906102db9190611289565b610e4a565b005b6102fc60048036038101906102f7919061115c565b610f1c565b60405161030991906115f8565b60405180910390f35b61032c6004803603810190610327919061115c565b610fa3565b60405161033991906115f8565b60405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042291906115f8565b60405180910390a36001905092915050565b60005481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610507575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90611538565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105959190611707565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105eb91906116b1565b9250508190555081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461067e9190611707565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e291906115f8565b60405180910390a3600190509392505050565b606060036000838152602001908152602001600020805461071590611836565b80601f016020809104026020016040519081016040528092919081815260200182805461074190611836565b801561078e5780601f106107635761010080835404028352916020019161078e565b820191906000526020600020905b81548152906001019060200180831161077157829003601f168201915b50505050509050919050565b60006002826040516107ac91906114c9565b602060405180830381855afa1580156107c9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107ec919061125c565b905081600460008381526020019081526020016000209080519060200190610815929190610fc8565b505050565b62a0000081511115610861576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610858906115d8565b60405180910390fd5b8080519060200120600581905550806003600060055481526020019081526020016000209080519060200190610898929190610fc8565b5050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091590611578565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d4906115b8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2c9190611707565b9250508190555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610abf9190611707565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1591906116b1565b92505081905550505050565b60016020528060005260406000206000915090505481565b62a0000082511115610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790611598565b60405180910390fd5b81600360008381526020019081526020016000209080519060200190610ba7929190610fc8565b50803373ffffffffffffffffffffffffffffffffffffffff167fed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb60405160405180910390a35050565b6060600460008381526020019081526020016000208054610c1090611836565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3c90611836565b8015610c895780601f10610c5e57610100808354040283529160200191610c89565b820191906000526020600020905b815481529060010190602001808311610c6c57829003601f168201915b50505050509050919050565b6000600554905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610cf05750600082115b610d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2690611558565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d7e9190611707565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd491906116b1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3891906115f8565b60405180910390a36001905092915050565b62a0000081511115610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8890611598565b60405180910390fd5b600081610e9d9061178d565b9050600081604051602001610eb291906114ae565b6040516020818303038152906040529050808051906020012091506000829050803373ffffffffffffffffffffffffffffffffffffffff167fed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb60405160405180910390a350505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b828054610fd490611836565b90600052602060002090601f016020900481019282610ff6576000855561103d565b82601f1061100f57805160ff191683800117855561103d565b8280016001018555821561103d579182015b8281111561103c578251825591602001919060010190611021565b5b50905061104a919061104e565b5090565b5b8082111561106757600081600090555060010161104f565b5090565b600061107e61107984611638565b611613565b90508281526020810184848401111561109a5761109961194a565b5b6110a58482856117f4565b509392505050565b6000813590506110bc81611ab9565b92915050565b6000813590506110d181611ad0565b92915050565b6000815190506110e681611ad0565b92915050565b600082601f83011261110157611100611945565b5b813561111184826020860161106b565b91505092915050565b60008135905061112981611ae7565b92915050565b60006020828403121561114557611144611954565b5b6000611153848285016110ad565b91505092915050565b6000806040838503121561117357611172611954565b5b6000611181858286016110ad565b9250506020611192858286016110ad565b9150509250929050565b6000806000606084860312156111b5576111b4611954565b5b60006111c3868287016110ad565b93505060206111d4868287016110ad565b92505060406111e58682870161111a565b9150509250925092565b6000806040838503121561120657611205611954565b5b6000611214858286016110ad565b92505060206112258582860161111a565b9150509250929050565b60006020828403121561124557611244611954565b5b6000611253848285016110c2565b91505092915050565b60006020828403121561127257611271611954565b5b6000611280848285016110d7565b91505092915050565b60006020828403121561129f5761129e611954565b5b600082013567ffffffffffffffff8111156112bd576112bc61194f565b5b6112c9848285016110ec565b91505092915050565b600080604083850312156112e9576112e8611954565b5b600083013567ffffffffffffffff8111156113075761130661194f565b5b611313858286016110ec565b9250506020611324858286016110c2565b9150509250929050565b6113378161174d565b82525050565b61134681611759565b82525050565b61135d61135882611759565b611899565b82525050565b600061136e82611679565b6113788185611684565b9350611388818560208601611803565b61139181611959565b840191505092915050565b60006113a782611679565b6113b18185611695565b93506113c1818560208601611803565b80840191505092915050565b60006113da6021836116a0565b91506113e582611977565b604082019050919050565b60006113fd6014836116a0565b9150611408826119c6565b602082019050919050565b60006114206012836116a0565b915061142b826119ef565b602082019050919050565b60006114436023836116a0565b915061144e82611a18565b604082019050919050565b60006114666014836116a0565b915061147182611a67565b602082019050919050565b6000611489601c836116a0565b915061149482611a90565b602082019050919050565b6114a881611783565b82525050565b60006114ba828461134c565b60208201915081905092915050565b60006114d5828461139c565b915081905092915050565b60006020820190506114f5600083018461132e565b92915050565b6000602082019050611510600083018461133d565b92915050565b600060208201905081810360008301526115308184611363565b905092915050565b60006020820190508181036000830152611551816113cd565b9050919050565b60006020820190508181036000830152611571816113f0565b9050919050565b6000602082019050818103600083015261159181611413565b9050919050565b600060208201905081810360008301526115b181611436565b9050919050565b600060208201905081810360008301526115d181611459565b9050919050565b600060208201905081810360008301526115f18161147c565b9050919050565b600060208201905061160d600083018461149f565b92915050565b600061161d61162e565b90506116298282611868565b919050565b6000604051905090565b600067ffffffffffffffff82111561165357611652611901565b5b61165c82611959565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006116bc82611783565b91506116c783611783565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116fc576116fb6118a3565b5b828201905092915050565b600061171282611783565b915061171d83611783565b9250828210156117305761172f6118a3565b5b828203905092915050565b600061174682611763565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061179882611679565b826117a284611669565b90506117ad81611930565b925060208210156117ed576117e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261196a565b831692505b5050919050565b82818337600083830152505050565b60005b83811015611821578082015181840152602081019050611806565b83811115611830576000848401525b50505050565b6000600282049050600182168061184e57607f821691505b60208210811415611862576118616118d2565b5b50919050565b61187182611959565b810181811067ffffffffffffffff821117156118905761188f611901565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061193c8251611759565b80915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600082821b905092915050565b7f496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b7f446174612073697a65206578636565647320746865206c696d6974206f66203160008201527f304d420000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f446174612073697a6520657863656564732031304d42206c696d697400000000600082015250565b611ac28161173b565b8114611acd57600080fd5b50565b611ad981611759565b8114611ae457600080fd5b50565b611af081611783565b8114611afb57600080fd5b5056fea26469706673582212204a115901fb7d7b7daf1b09a32398a437b4610429a11bf4307ce51aa65df7bb5264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH5 0xE8D4A51000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1B34 DUP1 PUSH2 0x6F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xAC5C8535 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xD8218148 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x312 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x8BD40C3B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x965D68D9 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA4DA2290 EQ PUSH2 0x278 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x54F6127F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6377FC8B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x69CEF46C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6C12ED28 EQ PUSH2 0x1E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x715 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x741 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x763 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x771 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x815 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xA00000 DUP2 MLOAD GT ISZERO PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x915 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH3 0xA00000 DUP3 MLOAD GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xBA7 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xCF0 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD26 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD4 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA00000 DUP2 MLOAD GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE9D SWAP1 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xFD4 SWAP1 PUSH2 0x1836 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x103D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x100F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x103D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x103D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x103C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1021 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x104A SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x104F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107E PUSH2 0x1079 DUP5 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x1613 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0x194A JUMP JUMPDEST JUMPDEST PUSH2 0x10A5 DUP5 DUP3 DUP6 PUSH2 0x17F4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BC DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D1 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x1945 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1111 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x106B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1153 DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1181 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1192 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C3 DUP7 DUP3 DUP8 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11D4 DUP7 DUP3 DUP8 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E5 DUP7 DUP3 DUP8 ADD PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1225 DUP6 DUP3 DUP7 ADD PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1244 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1253 DUP5 DUP3 DUP6 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1280 DUP5 DUP3 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129E PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH2 0x12C9 DUP5 DUP3 DUP6 ADD PUSH2 0x10EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH2 0x1313 DUP6 DUP3 DUP7 ADD PUSH2 0x10EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1324 DUP6 DUP3 DUP7 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP2 PUSH2 0x174D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x1759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x135D PUSH2 0x1358 DUP3 PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136E DUP3 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1378 DUP2 DUP6 PUSH2 0x1684 JUMP JUMPDEST SWAP4 POP PUSH2 0x1388 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A7 DUP3 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x13B1 DUP2 DUP6 PUSH2 0x1695 JUMP JUMPDEST SWAP4 POP PUSH2 0x13C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DA PUSH1 0x21 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FD PUSH1 0x14 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1408 DUP3 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1420 PUSH1 0x12 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x142B DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 PUSH1 0x23 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1466 PUSH1 0x14 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1471 DUP3 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1489 PUSH1 0x1C DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1494 DUP3 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP3 DUP5 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D5 DUP3 DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1510 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1551 DUP2 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1571 DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1591 DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D1 DUP2 PUSH2 0x1459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x149F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161D PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH2 0x1629 DUP3 DUP3 PUSH2 0x1868 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x1901 JUMP JUMPDEST JUMPDEST PUSH2 0x165C DUP3 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BC DUP3 PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C7 DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x18A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP PUSH2 0x171D DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x18A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1798 DUP3 PUSH2 0x1679 JUMP JUMPDEST DUP3 PUSH2 0x17A2 DUP5 PUSH2 0x1669 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AD DUP2 PUSH2 0x1930 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x196A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1821 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1806 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1830 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x184E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1862 JUMPI PUSH2 0x1861 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1871 DUP3 PUSH2 0x1959 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1890 JUMPI PUSH2 0x188F PUSH2 0x1901 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP3 MLOAD PUSH2 0x1759 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F7220616C6C6F77616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x446174612073697A65206578636565647320746865206C696D6974206F662031 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x304D420000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820616C6C6F77616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x446174612073697A6520657863656564732031304D42206C696D697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1AC2 DUP2 PUSH2 0x173B JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x1759 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AF0 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A GT MSIZE ADD 0xFB PUSH30 0x7B7DAF1B09A32398A437B4610429A11BF4307CE51AA65DF7BB5264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "284:3898:0:-:0;;;333:4;304:33;;957:75;;;;;;;;;;1013:11;;989:9;:21;999:10;989:21;;;;;;;;;;;;;;;:35;;;;284:3898;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance2_148": {
									"entryPoint": 3868,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_15": {
									"entryPoint": 4003,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_132": {
									"entryPoint": 834,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_9": {
									"entryPoint": 2849,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getData2_415": {
									"entryPoint": 3056,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDataHash_391": {
									"entryPoint": 3221,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getData_403": {
									"entryPoint": 1781,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@storeData2_291": {
									"entryPoint": 2873,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@storeData3_309": {
									"entryPoint": 1946,
									"id": 309,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@storeData_357": {
									"entryPoint": 3658,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalSupply_5": {
									"entryPoint": 1076,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom2_259": {
									"entryPoint": 2204,
									"id": 259,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferFrom_207": {
									"entryPoint": 1082,
									"id": 207,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_104": {
									"entryPoint": 3231,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uploadData_383": {
									"entryPoint": 2074,
									"id": 383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_bytes32": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6132,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19734:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "620:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "630:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "652:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "639:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "630:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "695:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "668:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "668:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "598:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "606:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "614:5:5",
														"type": ""
													}
												],
												"src": "568:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "776:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "786:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "801:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "786:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "844:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "817:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "817:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "754:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "762:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "770:5:5",
														"type": ""
													}
												],
												"src": "713:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "936:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "964:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "972:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "960:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "960:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "979:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:35:5"
															},
															"nodeType": "YulIf",
															"src": "946:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1077:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1104:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1091:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1180:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1176:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1176:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1195:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1203:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1129:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1120:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "914:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "922:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "930:5:5",
														"type": ""
													}
												],
												"src": "875:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1271:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1281:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1290:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1281:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1346:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1319:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1319:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1249:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1257:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1265:5:5",
														"type": ""
													}
												],
												"src": "1219:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1430:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1476:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1478:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1478:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1478:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1451:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1447:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1447:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1472:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:32:5"
															},
															"nodeType": "YulIf",
															"src": "1440:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1569:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1584:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1598:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1588:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1613:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1623:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1623:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1613:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1400:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1411:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1423:6:5",
														"type": ""
													}
												],
												"src": "1364:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1828:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1830:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1830:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1812:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1795:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:32:5"
															},
															"nodeType": "YulIf",
															"src": "1792:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1921:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1936:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1940:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1965:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2000:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2011:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1996:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1996:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2020:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1975:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1975:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1965:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2048:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2063:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2067:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2093:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2128:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2139:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2124:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2124:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2148:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2103:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2093:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1744:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1755:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1767:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1775:6:5",
														"type": ""
													}
												],
												"src": "1699:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2325:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2327:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2327:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2327:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2300:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:32:5"
															},
															"nodeType": "YulIf",
															"src": "2289:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2418:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2433:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2447:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2437:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2462:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2497:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2508:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2493:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2493:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2517:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2472:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2472:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2462:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2545:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2560:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2574:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2564:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2590:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2625:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2636:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2621:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2621:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2600:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2590:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2673:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2688:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2692:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2718:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2753:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2749:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2749:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2773:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2728:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2718:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2233:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2244:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2256:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2264:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2272:6:5",
														"type": ""
													}
												],
												"src": "2179:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2887:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2933:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2935:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2935:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2935:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2904:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2900:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2900:32:5"
															},
															"nodeType": "YulIf",
															"src": "2897:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3026:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3041:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3045:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3070:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3105:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3116:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3101:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3101:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3125:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3080:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3080:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3070:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3153:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3168:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3172:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3198:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3233:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3244:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3229:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3229:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3253:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3208:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3198:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2849:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2860:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2872:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2880:6:5",
														"type": ""
													}
												],
												"src": "2804:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3371:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3380:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:32:5"
															},
															"nodeType": "YulIf",
															"src": "3360:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3489:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3504:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3518:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3508:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3533:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3568:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3579:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3564:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3564:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3588:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3543:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3533:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3320:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3331:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3343:6:5",
														"type": ""
													}
												],
												"src": "3284:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3696:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3742:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3744:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3744:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3744:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3717:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3726:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3713:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3709:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:32:5"
															},
															"nodeType": "YulIf",
															"src": "3706:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3835:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3850:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3864:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3854:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3879:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3925:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3936:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3921:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3921:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3945:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3889:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3879:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3666:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3677:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3689:6:5",
														"type": ""
													}
												],
												"src": "3619:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4051:432:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4097:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4099:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4099:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4072:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4081:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4068:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4093:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:32:5"
															},
															"nodeType": "YulIf",
															"src": "4061:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4190:286:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4205:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4236:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4247:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4232:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4232:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4219:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4209:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4297:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4299:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4299:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4299:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4269:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4277:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4266:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4266:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "4263:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4394:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4438:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4449:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4434:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4434:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4458:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4404:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4394:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4021:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4032:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4044:6:5",
														"type": ""
													}
												],
												"src": "3976:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4581:560:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4629:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4602:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4611:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:32:5"
															},
															"nodeType": "YulIf",
															"src": "4591:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4720:286:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4735:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4777:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4762:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4749:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4749:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4739:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4827:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4829:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4829:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4829:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4799:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4807:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4796:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4796:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "4793:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4924:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4968:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4934:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4934:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4924:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5016:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5031:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5045:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5035:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5061:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5096:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5107:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5116:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5071:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5061:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4543:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4554:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4566:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4574:6:5",
														"type": ""
													}
												],
												"src": "4489:652:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5206:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5223:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5243:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5228:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5228:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5216:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5216:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5194:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5201:3:5",
														"type": ""
													}
												],
												"src": "5147:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5327:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5344:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5367:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5349:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5349:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5337:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5315:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5322:3:5",
														"type": ""
													}
												],
												"src": "5262:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5486:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5529:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5511:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5491:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5491:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5479:58:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5457:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5464:3:5",
														"type": ""
													}
												],
												"src": "5386:157:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5639:270:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5649:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5695:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5663:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5653:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5710:77:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5775:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5717:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:70:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5822:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5829:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5818:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5818:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5836:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5841:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5796:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5796:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5857:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5868:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5895:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5873:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5873:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5620:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5627:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5635:3:5",
														"type": ""
													}
												],
												"src": "5549:360:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6023:265:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6033:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6079:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6047:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6037:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6094:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6177:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6182:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6101:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6101:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6094:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6224:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6231:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6220:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6238:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6243:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6198:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6198:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6259:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6266:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6004:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6011:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6019:3:5",
														"type": ""
													}
												],
												"src": "5915:373:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6450:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6516:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6457:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6450:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6622:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603",
																	"nodeType": "YulIdentifier",
																	"src": "6533:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6533:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6533:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6635:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6646:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6642:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6642:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6428:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6436:3:5",
														"type": ""
													}
												],
												"src": "6294:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6812:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6822:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6888:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6829:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6822:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6994:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "6905:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6905:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6905:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7007:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7018:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7023:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7014:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7014:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7007:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6800:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6808:3:5",
														"type": ""
													}
												],
												"src": "6666:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7184:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7194:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7260:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7265:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7201:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7201:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7194:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7366:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																	"nodeType": "YulIdentifier",
																	"src": "7277:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7379:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7390:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7386:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7379:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7172:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7180:3:5",
														"type": ""
													}
												],
												"src": "7038:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7556:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7566:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7632:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7637:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7573:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7738:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
																	"nodeType": "YulIdentifier",
																	"src": "7649:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7649:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7751:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7762:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7767:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7758:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7758:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7751:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7544:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7552:3:5",
														"type": ""
													}
												],
												"src": "7410:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7928:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7938:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8004:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8009:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7945:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8110:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
																	"nodeType": "YulIdentifier",
																	"src": "8021:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8021:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8123:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8134:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8139:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8130:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7916:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7924:3:5",
														"type": ""
													}
												],
												"src": "7782:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8300:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8376:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8381:2:5",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8317:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507",
																	"nodeType": "YulIdentifier",
																	"src": "8393:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8393:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8495:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8506:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8288:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8296:3:5",
														"type": ""
													}
												],
												"src": "8154:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8591:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8608:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8631:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8613:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8613:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8601:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8579:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8586:3:5",
														"type": ""
													}
												],
												"src": "8526:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8766:140:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8839:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8848:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8777:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8777:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8777:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8861:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8872:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8890:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8897:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8890:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8745:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8751:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8762:3:5",
														"type": ""
													}
												],
												"src": "8650:256:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9046:137:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9057:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9144:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9153:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9064:79:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9057:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9167:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9174:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9167:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9025:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9031:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9042:3:5",
														"type": ""
													}
												],
												"src": "8912:271:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9281:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9291:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9303:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9314:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9299:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9299:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9291:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9365:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9389:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9374:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9327:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9327:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9327:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9253:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9265:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9276:4:5",
														"type": ""
													}
												],
												"src": "9189:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9503:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9513:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9521:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9513:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9593:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9606:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9617:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9602:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9549:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9549:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9549:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9475:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9487:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9498:4:5",
														"type": ""
													}
												],
												"src": "9405:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9749:193:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9759:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9771:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9782:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9767:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9759:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9806:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9817:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9825:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9831:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9821:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9821:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9795:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9795:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9851:84:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9921:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9859:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:76:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9851:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9721:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9733:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9744:4:5",
														"type": ""
													}
												],
												"src": "9633:309:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10119:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10129:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10141:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10152:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10137:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10137:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10129:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10187:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10172:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10195:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10201:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10165:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10221:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10355:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10229:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10221:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10099:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10114:4:5",
														"type": ""
													}
												],
												"src": "9948:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10544:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10554:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10566:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10577:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10562:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10554:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10601:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10612:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10597:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10597:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10620:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10626:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10616:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10616:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10590:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10590:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10590:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10646:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10780:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10654:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10654:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10646:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10524:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10539:4:5",
														"type": ""
													}
												],
												"src": "10373:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10969:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10979:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10991:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11002:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10987:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10979:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11026:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11037:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11022:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11022:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11045:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11051:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11041:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11015:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11071:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11205:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11079:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11079:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11071:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10949:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10964:4:5",
														"type": ""
													}
												],
												"src": "10798:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11394:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11404:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11416:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11427:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11412:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11404:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11451:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11462:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11447:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11470:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11476:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11466:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11466:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11440:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11440:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11440:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11496:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11630:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11504:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11504:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11496:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11374:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11389:4:5",
														"type": ""
													}
												],
												"src": "11223:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11819:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11829:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11841:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11852:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11837:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11837:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11829:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11876:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11887:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11872:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11872:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11895:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11901:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11891:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11891:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11865:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11865:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11865:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11921:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12055:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11929:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11929:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11921:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11799:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11814:4:5",
														"type": ""
													}
												],
												"src": "11648:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12244:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12254:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12266:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12277:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12262:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12254:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12301:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12312:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12297:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12297:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12320:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12326:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12316:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12316:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12290:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12290:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12346:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12480:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12354:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12346:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12224:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12239:4:5",
														"type": ""
													}
												],
												"src": "12073:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12596:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12606:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12618:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12629:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12614:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12606:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12686:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12699:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12710:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12695:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12695:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12642:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12642:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12642:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12568:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12580:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12591:4:5",
														"type": ""
													}
												],
												"src": "12498:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12767:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12777:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "12787:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12787:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12836:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12844:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "12816:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12751:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12760:6:5",
														"type": ""
													}
												],
												"src": "12726:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12901:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12911:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12927:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12921:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12921:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12911:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12894:6:5",
														"type": ""
													}
												],
												"src": "12861:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13008:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13113:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13115:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13115:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13115:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13085:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13093:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13082:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13082:30:5"
															},
															"nodeType": "YulIf",
															"src": "13079:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13145:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13175:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "13153:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13153:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13145:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13219:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13231:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13237:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13227:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13219:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12992:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13003:4:5",
														"type": ""
													}
												],
												"src": "12942:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13311:60:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13321:11:5",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13329:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13321:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13342:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13354:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13359:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13350:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:14:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13342:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13298:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13306:4:5",
														"type": ""
													}
												],
												"src": "13255:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13435:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13446:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13462:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13456:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13456:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13446:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13418:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13428:6:5",
														"type": ""
													}
												],
												"src": "13377:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13576:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13593:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13598:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13586:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13614:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13633:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13638:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13629:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13614:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13548:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13553:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13564:11:5",
														"type": ""
													}
												],
												"src": "13481:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13768:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13778:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13793:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13778:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13740:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13745:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13756:11:5",
														"type": ""
													}
												],
												"src": "13655:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13904:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13921:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13926:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13914:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13942:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13961:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13966:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13957:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13957:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13942:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13876:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13881:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13892:11:5",
														"type": ""
													}
												],
												"src": "13808:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14027:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14037:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14060:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14042:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14037:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14071:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14094:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14076:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14076:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14071:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14234:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14236:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14236:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14236:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14155:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14162:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14230:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14158:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14152:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:81:5"
															},
															"nodeType": "YulIf",
															"src": "14149:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14266:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14277:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14280:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14273:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14273:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14266:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14014:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14017:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14023:3:5",
														"type": ""
													}
												],
												"src": "13983:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14339:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14349:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14372:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14354:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14349:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14383:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14406:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14388:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14383:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14430:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14432:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14432:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14432:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14424:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14427:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14421:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14421:8:5"
															},
															"nodeType": "YulIf",
															"src": "14418:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14462:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14474:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14477:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14470:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14462:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14325:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14328:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14334:4:5",
														"type": ""
													}
												],
												"src": "14294:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14536:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14546:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14575:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14557:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14557:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14546:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14518:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14528:7:5",
														"type": ""
													}
												],
												"src": "14491:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14635:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14645:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14670:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14663:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14663:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14656:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14645:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14617:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14627:7:5",
														"type": ""
													}
												],
												"src": "14593:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14734:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14744:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14755:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14744:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14716:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14726:7:5",
														"type": ""
													}
												],
												"src": "14689:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14817:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14827:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14842:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14849:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14838:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14838:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14827:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14799:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14809:7:5",
														"type": ""
													}
												],
												"src": "14772:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14949:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14959:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14970:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14959:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14931:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14941:7:5",
														"type": ""
													}
												],
												"src": "14904:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15077:504:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15088:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "15134:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15102:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15102:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15092:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15149:21:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "15165:5:5"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nodeType": "YulTypedName",
																	"src": "15153:8:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15180:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "15226:5:5"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15192:33:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:40:5"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nodeType": "YulIdentifier",
																	"src": "15180:8:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15242:44:5",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nodeType": "YulIdentifier",
																		"src": "15277:8:5"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "15251:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15251:35:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15242:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15314:260:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15328:236:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "15358:5:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15425:1:5",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15432:2:5",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nodeType": "YulIdentifier",
																											"src": "15436:6:5"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "15428:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15428:15:5"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "15421:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15421:23:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15466:66:5",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nodeType": "YulIdentifier",
																						"src": "15381:18:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15381:169:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15337:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15337:227:5"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15328:5:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15302:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15310:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15299:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15299:14:5"
															},
															"nodeType": "YulIf",
															"src": "15296:278:5"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15061:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15071:5:5",
														"type": ""
													}
												],
												"src": "14987:594:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15638:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "15661:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15666:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15671:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15648:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15648:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15648:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15719:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15724:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15715:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15733:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15708:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15708:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15620:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15625:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15630:6:5",
														"type": ""
													}
												],
												"src": "15587:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15796:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15806:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15815:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15810:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15875:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15900:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15905:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15896:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15896:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15919:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15924:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15915:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15915:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15909:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15909:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15889:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15889:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15889:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15836:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15839:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15833:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15833:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15847:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15849:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15858:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15861:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15854:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15854:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15849:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15829:3:5",
																"statements": []
															},
															"src": "15825:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15972:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16022:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16027:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16018:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16018:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16011:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16011:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16011:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15953:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15956:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15950:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:13:5"
															},
															"nodeType": "YulIf",
															"src": "15947:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15778:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15783:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15788:6:5",
														"type": ""
													}
												],
												"src": "15747:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16111:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16121:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16135:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16141:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16131:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16121:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16152:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16182:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16188:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16178:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16178:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16156:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16229:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16243:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16257:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16265:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16253:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16253:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16243:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16209:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16202:26:5"
															},
															"nodeType": "YulIf",
															"src": "16199:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16332:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "16346:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16346:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16346:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16296:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16319:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16327:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16316:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16316:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16293:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16293:38:5"
															},
															"nodeType": "YulIf",
															"src": "16290:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16095:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16104:6:5",
														"type": ""
													}
												],
												"src": "16060:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16429:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16439:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16461:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "16491:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16469:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16469:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16457:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16457:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16443:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16608:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16610:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16610:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16610:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16551:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16563:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16548:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16548:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16587:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16599:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16584:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16584:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16545:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16545:62:5"
															},
															"nodeType": "YulIf",
															"src": "16542:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16646:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16650:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16639:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16639:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16639:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16415:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16423:4:5",
														"type": ""
													}
												],
												"src": "16386:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16720:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16730:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16741:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "16730:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16702:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "16712:7:5",
														"type": ""
													}
												],
												"src": "16673:79:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16786:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16803:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16806:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16796:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16796:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16796:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16900:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16903:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16893:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16893:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16927:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16917:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16917:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16917:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16758:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16972:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16989:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16992:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16982:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16982:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16982:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17086:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17089:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17079:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17079:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17110:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17113:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17103:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17103:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "16944:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17158:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17175:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17178:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17168:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17168:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17272:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17275:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17265:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17265:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17265:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17296:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17299:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17289:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17289:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17289:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17130:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17371:99:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17382:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "17419:3:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "17413:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17413:10:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "17395:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17395:29:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17386:5:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17434:29:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17458:5:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "17434:11:5"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17351:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nodeType": "YulTypedName",
														"src": "17359:11:5",
														"type": ""
													}
												],
												"src": "17316:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17565:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17582:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17585:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17575:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17575:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "17476:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17688:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17705:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17708:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17698:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17698:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "17599:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17811:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17828:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17831:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17821:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17821:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17821:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "17722:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17934:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17951:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17954:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17944:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17944:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17944:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "17845:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18016:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18026:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18044:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18051:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18040:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18040:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18060:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18056:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18056:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18036:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18036:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18026:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17999:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18009:6:5",
														"type": ""
													}
												],
												"src": "17968:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18129:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18139:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "18164:4:5"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18170:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "18160:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18160:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "18139:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "18104:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18110:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "18120:8:5",
														"type": ""
													}
												],
												"src": "18076:107:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18295:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18317:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18325:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18313:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18313:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18329:34:5",
																		"type": "",
																		"value": "Insufficient balance or allowanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18306:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18306:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18306:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18385:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18393:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18381:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18381:15:5"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18398:3:5",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18374:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18374:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18374:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18287:6:5",
														"type": ""
													}
												],
												"src": "18189:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18521:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18543:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18539:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18539:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18555:22:5",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18532:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18532:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18532:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18513:6:5",
														"type": ""
													}
												],
												"src": "18415:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18697:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18719:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18727:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18715:14:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18731:20:5",
																		"type": "",
																		"value": "Not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18708:44:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18708:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18689:6:5",
														"type": ""
													}
												],
												"src": "18591:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18871:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18893:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18901:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18889:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18889:14:5"
																	},
																	{
																		"hexValue": "446174612073697a65206578636565647320746865206c696d6974206f662031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18905:34:5",
																		"type": "",
																		"value": "Data size exceeds the limit of 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18882:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18882:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18882:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18961:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18969:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18957:15:5"
																	},
																	{
																		"hexValue": "304d42",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18974:5:5",
																		"type": "",
																		"value": "0MB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18950:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18950:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18950:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18863:6:5",
														"type": ""
													}
												],
												"src": "18765:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19099:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19121:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19129:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19117:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19117:14:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19133:22:5",
																		"type": "",
																		"value": "Not enough allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19110:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19110:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19110:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19091:6:5",
														"type": ""
													}
												],
												"src": "18993:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19275:72:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19297:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19305:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19293:14:5"
																	},
																	{
																		"hexValue": "446174612073697a6520657863656564732031304d42206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19309:30:5",
																		"type": "",
																		"value": "Data size exceeds 10MB limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19286:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19286:54:5"
														}
													]
												},
												"name": "store_literal_in_memory_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19267:6:5",
														"type": ""
													}
												],
												"src": "19169:178:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19396:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19453:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19462:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19465:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19455:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19455:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19455:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19419:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19444:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "19426:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19426:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19416:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19416:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19409:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19409:43:5"
															},
															"nodeType": "YulIf",
															"src": "19406:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19389:5:5",
														"type": ""
													}
												],
												"src": "19353:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19524:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19581:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19590:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19593:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19583:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19583:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19583:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19547:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19572:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "19554:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19554:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19544:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19544:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19537:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19537:43:5"
															},
															"nodeType": "YulIf",
															"src": "19534:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19517:5:5",
														"type": ""
													}
												],
												"src": "19481:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19652:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19709:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19718:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19721:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19711:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19711:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19711:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19675:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19700:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19682:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19682:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19672:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19672:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19665:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19665:43:5"
															},
															"nodeType": "YulIf",
															"src": "19662:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19645:5:5",
														"type": ""
													}
												],
												"src": "19609:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function store_literal_in_memory_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance or allowanc\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance\")\n\n    }\n\n    function store_literal_in_memory_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457(memPtr) {\n\n        mstore(add(memPtr, 0), \"Data size exceeds the limit of 1\")\n\n        mstore(add(memPtr, 32), \"0MB\")\n\n    }\n\n    function store_literal_in_memory_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough allowance\")\n\n    }\n\n    function store_literal_in_memory_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507(memPtr) {\n\n        mstore(add(memPtr, 0), \"Data size exceeds 10MB limit\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610296578063ac5c8535146102c6578063d8218148146102e2578063dd62ed3e14610312576100f5565b806370a08231146101fc5780638bd40c3b1461022c578063965d68d914610248578063a4da229014610278576100f5565b806354f6127f116100d357806354f6127f146101785780636377fc8b146101a857806369cef46c146101c45780636c12ed28146101e0576100f5565b8063095ea7b3146100fa57806318160ddd1461012a57806323b872dd14610148575b600080fd5b610114600480360381019061010f91906111ef565b610342565b60405161012191906114e0565b60405180910390f35b610132610434565b60405161013f91906115f8565b60405180910390f35b610162600480360381019061015d919061119c565b61043a565b60405161016f91906114e0565b60405180910390f35b610192600480360381019061018d919061122f565b6106f5565b60405161019f9190611516565b60405180910390f35b6101c260048036038101906101bd9190611289565b61079a565b005b6101de60048036038101906101d99190611289565b61081a565b005b6101fa60048036038101906101f5919061119c565b61089c565b005b6102166004803603810190610211919061112f565b610b21565b60405161022391906115f8565b60405180910390f35b610246600480360381019061024191906112d2565b610b39565b005b610262600480360381019061025d919061122f565b610bf0565b60405161026f9190611516565b60405180910390f35b610280610c95565b60405161028d91906114fb565b60405180910390f35b6102b060048036038101906102ab91906111ef565b610c9f565b6040516102bd91906114e0565b60405180910390f35b6102e060048036038101906102db9190611289565b610e4a565b005b6102fc60048036038101906102f7919061115c565b610f1c565b60405161030991906115f8565b60405180910390f35b61032c6004803603810190610327919061115c565b610fa3565b60405161033991906115f8565b60405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161042291906115f8565b60405180910390a36001905092915050565b60005481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610507575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90611538565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105959190611707565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105eb91906116b1565b9250508190555081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461067e9190611707565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e291906115f8565b60405180910390a3600190509392505050565b606060036000838152602001908152602001600020805461071590611836565b80601f016020809104026020016040519081016040528092919081815260200182805461074190611836565b801561078e5780601f106107635761010080835404028352916020019161078e565b820191906000526020600020905b81548152906001019060200180831161077157829003601f168201915b50505050509050919050565b60006002826040516107ac91906114c9565b602060405180830381855afa1580156107c9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107ec919061125c565b905081600460008381526020019081526020016000209080519060200190610815929190610fc8565b505050565b62a0000081511115610861576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610858906115d8565b60405180910390fd5b8080519060200120600581905550806003600060055481526020019081526020016000209080519060200190610898929190610fc8565b5050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091590611578565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d4906115b8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2c9190611707565b9250508190555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610abf9190611707565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1591906116b1565b92505081905550505050565b60016020528060005260406000206000915090505481565b62a0000082511115610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790611598565b60405180910390fd5b81600360008381526020019081526020016000209080519060200190610ba7929190610fc8565b50803373ffffffffffffffffffffffffffffffffffffffff167fed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb60405160405180910390a35050565b6060600460008381526020019081526020016000208054610c1090611836565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3c90611836565b8015610c895780601f10610c5e57610100808354040283529160200191610c89565b820191906000526020600020905b815481529060010190602001808311610c6c57829003601f168201915b50505050509050919050565b6000600554905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610cf05750600082115b610d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2690611558565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d7e9190611707565b9250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd491906116b1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3891906115f8565b60405180910390a36001905092915050565b62a0000081511115610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8890611598565b60405180910390fd5b600081610e9d9061178d565b9050600081604051602001610eb291906114ae565b6040516020818303038152906040529050808051906020012091506000829050803373ffffffffffffffffffffffffffffffffffffffff167fed4db59f1764789ecac8e436bc4ffbd671282c22b4d3860cba3aaf331b45f6cb60405160405180910390a350505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b828054610fd490611836565b90600052602060002090601f016020900481019282610ff6576000855561103d565b82601f1061100f57805160ff191683800117855561103d565b8280016001018555821561103d579182015b8281111561103c578251825591602001919060010190611021565b5b50905061104a919061104e565b5090565b5b8082111561106757600081600090555060010161104f565b5090565b600061107e61107984611638565b611613565b90508281526020810184848401111561109a5761109961194a565b5b6110a58482856117f4565b509392505050565b6000813590506110bc81611ab9565b92915050565b6000813590506110d181611ad0565b92915050565b6000815190506110e681611ad0565b92915050565b600082601f83011261110157611100611945565b5b813561111184826020860161106b565b91505092915050565b60008135905061112981611ae7565b92915050565b60006020828403121561114557611144611954565b5b6000611153848285016110ad565b91505092915050565b6000806040838503121561117357611172611954565b5b6000611181858286016110ad565b9250506020611192858286016110ad565b9150509250929050565b6000806000606084860312156111b5576111b4611954565b5b60006111c3868287016110ad565b93505060206111d4868287016110ad565b92505060406111e58682870161111a565b9150509250925092565b6000806040838503121561120657611205611954565b5b6000611214858286016110ad565b92505060206112258582860161111a565b9150509250929050565b60006020828403121561124557611244611954565b5b6000611253848285016110c2565b91505092915050565b60006020828403121561127257611271611954565b5b6000611280848285016110d7565b91505092915050565b60006020828403121561129f5761129e611954565b5b600082013567ffffffffffffffff8111156112bd576112bc61194f565b5b6112c9848285016110ec565b91505092915050565b600080604083850312156112e9576112e8611954565b5b600083013567ffffffffffffffff8111156113075761130661194f565b5b611313858286016110ec565b9250506020611324858286016110c2565b9150509250929050565b6113378161174d565b82525050565b61134681611759565b82525050565b61135d61135882611759565b611899565b82525050565b600061136e82611679565b6113788185611684565b9350611388818560208601611803565b61139181611959565b840191505092915050565b60006113a782611679565b6113b18185611695565b93506113c1818560208601611803565b80840191505092915050565b60006113da6021836116a0565b91506113e582611977565b604082019050919050565b60006113fd6014836116a0565b9150611408826119c6565b602082019050919050565b60006114206012836116a0565b915061142b826119ef565b602082019050919050565b60006114436023836116a0565b915061144e82611a18565b604082019050919050565b60006114666014836116a0565b915061147182611a67565b602082019050919050565b6000611489601c836116a0565b915061149482611a90565b602082019050919050565b6114a881611783565b82525050565b60006114ba828461134c565b60208201915081905092915050565b60006114d5828461139c565b915081905092915050565b60006020820190506114f5600083018461132e565b92915050565b6000602082019050611510600083018461133d565b92915050565b600060208201905081810360008301526115308184611363565b905092915050565b60006020820190508181036000830152611551816113cd565b9050919050565b60006020820190508181036000830152611571816113f0565b9050919050565b6000602082019050818103600083015261159181611413565b9050919050565b600060208201905081810360008301526115b181611436565b9050919050565b600060208201905081810360008301526115d181611459565b9050919050565b600060208201905081810360008301526115f18161147c565b9050919050565b600060208201905061160d600083018461149f565b92915050565b600061161d61162e565b90506116298282611868565b919050565b6000604051905090565b600067ffffffffffffffff82111561165357611652611901565b5b61165c82611959565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006116bc82611783565b91506116c783611783565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116fc576116fb6118a3565b5b828201905092915050565b600061171282611783565b915061171d83611783565b9250828210156117305761172f6118a3565b5b828203905092915050565b600061174682611763565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061179882611679565b826117a284611669565b90506117ad81611930565b925060208210156117ed576117e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261196a565b831692505b5050919050565b82818337600083830152505050565b60005b83811015611821578082015181840152602081019050611806565b83811115611830576000848401525b50505050565b6000600282049050600182168061184e57607f821691505b60208210811415611862576118616118d2565b5b50919050565b61187182611959565b810181811067ffffffffffffffff821117156118905761188f611901565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061193c8251611759565b80915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b600082821b905092915050565b7f496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b7f446174612073697a65206578636565647320746865206c696d6974206f66203160008201527f304d420000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f446174612073697a6520657863656564732031304d42206c696d697400000000600082015250565b611ac28161173b565b8114611acd57600080fd5b50565b611ad981611759565b8114611ae457600080fd5b50565b611af081611783565b8114611afb57600080fd5b5056fea26469706673582212204a115901fb7d7b7daf1b09a32398a437b4610429a11bf4307ce51aa65df7bb5264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xAC5C8535 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xD8218148 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x312 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x8BD40C3B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x965D68D9 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA4DA2290 EQ PUSH2 0x278 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x54F6127F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6377FC8B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x69CEF46C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6C12ED28 EQ PUSH2 0x1E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67E SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x715 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x741 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x78E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x763 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x78E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x771 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x815 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xA00000 DUP2 MLOAD GT ISZERO PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x915 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH3 0xA00000 DUP3 MLOAD GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xBA7 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x1836 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xCF0 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD26 SWAP1 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD4 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA00000 DUP2 MLOAD GT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE9D SWAP1 PUSH2 0x178D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x0 DUP3 SWAP1 POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xFD4 SWAP1 PUSH2 0x1836 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x103D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x100F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x103D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x103D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x103C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1021 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x104A SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x104F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107E PUSH2 0x1079 DUP5 PUSH2 0x1638 JUMP JUMPDEST PUSH2 0x1613 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0x194A JUMP JUMPDEST JUMPDEST PUSH2 0x10A5 DUP5 DUP3 DUP6 PUSH2 0x17F4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BC DUP2 PUSH2 0x1AB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D1 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E6 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1101 JUMPI PUSH2 0x1100 PUSH2 0x1945 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1111 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x106B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1129 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1153 DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1181 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1192 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C3 DUP7 DUP3 DUP8 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11D4 DUP7 DUP3 DUP8 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E5 DUP7 DUP3 DUP8 ADD PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1214 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1225 DUP6 DUP3 DUP7 ADD PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1245 JUMPI PUSH2 0x1244 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1253 DUP5 DUP3 DUP6 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1272 JUMPI PUSH2 0x1271 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1280 DUP5 DUP3 DUP6 ADD PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129E PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH2 0x12C9 DUP5 DUP3 DUP6 ADD PUSH2 0x10EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH2 0x1313 DUP6 DUP3 DUP7 ADD PUSH2 0x10EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1324 DUP6 DUP3 DUP7 ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1337 DUP2 PUSH2 0x174D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1346 DUP2 PUSH2 0x1759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x135D PUSH2 0x1358 DUP3 PUSH2 0x1759 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136E DUP3 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1378 DUP2 DUP6 PUSH2 0x1684 JUMP JUMPDEST SWAP4 POP PUSH2 0x1388 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A7 DUP3 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x13B1 DUP2 DUP6 PUSH2 0x1695 JUMP JUMPDEST SWAP4 POP PUSH2 0x13C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1803 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DA PUSH1 0x21 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E5 DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FD PUSH1 0x14 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1408 DUP3 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1420 PUSH1 0x12 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x142B DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 PUSH1 0x23 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1466 PUSH1 0x14 DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1471 DUP3 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1489 PUSH1 0x1C DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1494 DUP3 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A8 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA DUP3 DUP5 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D5 DUP3 DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1510 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1530 DUP2 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1551 DUP2 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1571 DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1591 DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 PUSH2 0x1436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D1 DUP2 PUSH2 0x1459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x149F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161D PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH2 0x1629 DUP3 DUP3 PUSH2 0x1868 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x1901 JUMP JUMPDEST JUMPDEST PUSH2 0x165C DUP3 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BC DUP3 PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C7 DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x18A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP PUSH2 0x171D DUP4 PUSH2 0x1783 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x18A3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1746 DUP3 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1798 DUP3 PUSH2 0x1679 JUMP JUMPDEST DUP3 PUSH2 0x17A2 DUP5 PUSH2 0x1669 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AD DUP2 PUSH2 0x1930 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x17ED JUMPI PUSH2 0x17E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x196A JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1821 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1806 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1830 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x184E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1862 JUMPI PUSH2 0x1861 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1871 DUP3 PUSH2 0x1959 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1890 JUMPI PUSH2 0x188F PUSH2 0x1901 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x193C DUP3 MLOAD PUSH2 0x1759 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F7220616C6C6F77616E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x446174612073697A65206578636565647320746865206C696D6974206F662031 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x304D420000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820616C6C6F77616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x446174612073697A6520657863656564732031304D42206C696D697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1AC2 DUP2 PUSH2 0x173B JUMP JUMPDEST DUP2 EQ PUSH2 0x1ACD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AD9 DUP2 PUSH2 0x1759 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AF0 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A GT MSIZE ADD 0xFB PUSH30 0x7B7DAF1B09A32398A437B4610429A11BF4307CE51AA65DF7BB5264736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "284:3898:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1370:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1735:408;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3943:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2994:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3635:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2151:353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;344:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2740:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4063:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3848:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:492;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1586:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1370:208;1437:4;1488:6;1454:9;:21;1464:10;1454:21;;;;;;;;;;;;;;;:31;1476:8;1454:31;;;;;;;;;;;;;;;:40;;;;1531:8;1510:38;;1519:10;1510:38;;;1541:6;1510:38;;;;;;:::i;:::-;;;;;;;;1566:4;1559:11;;1370:208;;;;:::o;304:33::-;;;;:::o;1735:408::-;1817:4;1862:6;1842:9;:16;1852:5;1842:16;;;;;;;;;;;;;;;;:26;;:68;;;;;1904:6;1872:9;:16;1882:5;1872:16;;;;;;;;;;;;;;;:28;1889:10;1872:28;;;;;;;;;;;;;;;;:38;;1842:68;1834:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1979:6;1959:9;:16;1969:5;1959:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2014:6;1996:9;:14;2006:3;1996:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2063:6;2031:9;:16;2041:5;2031:16;;;;;;;;;;;;;;;:28;2048:10;2031:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2101:3;2085:28;;2094:5;2085:28;;;2106:6;2085:28;;;;;;:::i;:::-;;;;;;;;2131:4;2124:11;;1735:408;;;;;:::o;3943:109::-;3995:12;4027:11;:17;4039:4;4027:17;;;;;;;;;;;4020:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3943:109;;;:::o;2994:135::-;3053:16;3072:14;3079:6;3072:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3053:33;;3115:6;3097:5;:15;3103:8;3097:15;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;3042:87;2994:135;:::o;3635:205::-;3715:8;3700:4;:11;:23;;3692:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3788:4;3778:15;;;;;;3767:8;:26;;;;3828:4;3804:11;:21;3816:8;;3804:21;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;3635:205;:::o;2151:353::-;2264:6;2244:9;:16;2254:5;2244:16;;;;;;;;;;;;;;;;:26;;2236:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2344:6;2312:9;:16;2322:5;2312:16;;;;;;;;;;;;;;;:28;2329:10;2312:28;;;;;;;;;;;;;;;;:38;;2304:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2406:6;2386:9;:16;2396:5;2386:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2455:6;2423:9;:16;2433:5;2423:16;;;;;;;;;;;;;;;:28;2440:10;2423:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2490:6;2472:9;:14;2482:3;2472:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2151:353;;;:::o;344:45::-;;;;;;;;;;;;;;;;;:::o;2740:248::-;2838:16;2823:4;:11;:31;;2815:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:4;2905:11;:21;2917:8;2905:21;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;2971:8;2959:10;2949:31;;;;;;;;;;;;2740:248;;:::o;4063:114::-;4121:12;4153:5;:16;4159:9;4153:16;;;;;;;;;;;4146:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4063:114;;;:::o;3848:87::-;3892:7;3919:8;;3912:15;;3848:87;:::o;1044:314::-;1107:4;1157:6;1132:9;:21;1142:10;1132:21;;;;;;;;;;;;;;;;:31;;:45;;;;;1176:1;1167:6;:10;1132:45;1124:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1238:6;1213:9;:21;1223:10;1213:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1273:6;1255:9;:14;1265:3;1255:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1316:3;1295:33;;1304:10;1295:33;;;1321:6;1295:33;;;;;;:::i;:::-;;;;;;;;1346:4;1339:11;;1044:314;;;;:::o;3137:492::-;3216:16;3201:4;:11;:31;;3193:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3313:18;3342:4;3334:13;;;:::i;:::-;3313:34;;3388:24;3432:10;3415:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;3388:55;;3477:11;3467:22;;;;;;3454:35;;3545:16;3564:10;3545:29;;3612:8;3600:10;3590:31;;;;;;;;;;;;3182:447;;;3137:492;:::o;1586:137::-;1661:7;1688:9;:17;1698:6;1688:17;;;;;;;;;;;;;;;:27;1706:8;1688:27;;;;;;;;;;;;;;;;1681:34;;1586:137;;;;:::o;396:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:::-;614:5;652:6;639:20;630:29;;668:33;695:5;668:33;:::i;:::-;568:139;;;;:::o;713:143::-;770:5;801:6;795:13;786:22;;817:33;844:5;817:33;:::i;:::-;713:143;;;;:::o;875:338::-;930:5;979:3;972:4;964:6;960:17;956:27;946:122;;987:79;;:::i;:::-;946:122;1104:6;1091:20;1129:78;1203:3;1195:6;1188:4;1180:6;1176:17;1129:78;:::i;:::-;1120:87;;936:277;875:338;;;;:::o;1219:139::-;1265:5;1303:6;1290:20;1281:29;;1319:33;1346:5;1319:33;:::i;:::-;1219:139;;;;:::o;1364:329::-;1423:6;1472:2;1460:9;1451:7;1447:23;1443:32;1440:119;;;1478:79;;:::i;:::-;1440:119;1598:1;1623:53;1668:7;1659:6;1648:9;1644:22;1623:53;:::i;:::-;1613:63;;1569:117;1364:329;;;;:::o;1699:474::-;1767:6;1775;1824:2;1812:9;1803:7;1799:23;1795:32;1792:119;;;1830:79;;:::i;:::-;1792:119;1950:1;1975:53;2020:7;2011:6;2000:9;1996:22;1975:53;:::i;:::-;1965:63;;1921:117;2077:2;2103:53;2148:7;2139:6;2128:9;2124:22;2103:53;:::i;:::-;2093:63;;2048:118;1699:474;;;;;:::o;2179:619::-;2256:6;2264;2272;2321:2;2309:9;2300:7;2296:23;2292:32;2289:119;;;2327:79;;:::i;:::-;2289:119;2447:1;2472:53;2517:7;2508:6;2497:9;2493:22;2472:53;:::i;:::-;2462:63;;2418:117;2574:2;2600:53;2645:7;2636:6;2625:9;2621:22;2600:53;:::i;:::-;2590:63;;2545:118;2702:2;2728:53;2773:7;2764:6;2753:9;2749:22;2728:53;:::i;:::-;2718:63;;2673:118;2179:619;;;;;:::o;2804:474::-;2872:6;2880;2929:2;2917:9;2908:7;2904:23;2900:32;2897:119;;;2935:79;;:::i;:::-;2897:119;3055:1;3080:53;3125:7;3116:6;3105:9;3101:22;3080:53;:::i;:::-;3070:63;;3026:117;3182:2;3208:53;3253:7;3244:6;3233:9;3229:22;3208:53;:::i;:::-;3198:63;;3153:118;2804:474;;;;;:::o;3284:329::-;3343:6;3392:2;3380:9;3371:7;3367:23;3363:32;3360:119;;;3398:79;;:::i;:::-;3360:119;3518:1;3543:53;3588:7;3579:6;3568:9;3564:22;3543:53;:::i;:::-;3533:63;;3489:117;3284:329;;;;:::o;3619:351::-;3689:6;3738:2;3726:9;3717:7;3713:23;3709:32;3706:119;;;3744:79;;:::i;:::-;3706:119;3864:1;3889:64;3945:7;3936:6;3925:9;3921:22;3889:64;:::i;:::-;3879:74;;3835:128;3619:351;;;;:::o;3976:507::-;4044:6;4093:2;4081:9;4072:7;4068:23;4064:32;4061:119;;;4099:79;;:::i;:::-;4061:119;4247:1;4236:9;4232:17;4219:31;4277:18;4269:6;4266:30;4263:117;;;4299:79;;:::i;:::-;4263:117;4404:62;4458:7;4449:6;4438:9;4434:22;4404:62;:::i;:::-;4394:72;;4190:286;3976:507;;;;:::o;4489:652::-;4566:6;4574;4623:2;4611:9;4602:7;4598:23;4594:32;4591:119;;;4629:79;;:::i;:::-;4591:119;4777:1;4766:9;4762:17;4749:31;4807:18;4799:6;4796:30;4793:117;;;4829:79;;:::i;:::-;4793:117;4934:62;4988:7;4979:6;4968:9;4964:22;4934:62;:::i;:::-;4924:72;;4720:286;5045:2;5071:53;5116:7;5107:6;5096:9;5092:22;5071:53;:::i;:::-;5061:63;;5016:118;4489:652;;;;;:::o;5147:109::-;5228:21;5243:5;5228:21;:::i;:::-;5223:3;5216:34;5147:109;;:::o;5262:118::-;5349:24;5367:5;5349:24;:::i;:::-;5344:3;5337:37;5262:118;;:::o;5386:157::-;5491:45;5511:24;5529:5;5511:24;:::i;:::-;5491:45;:::i;:::-;5486:3;5479:58;5386:157;;:::o;5549:360::-;5635:3;5663:38;5695:5;5663:38;:::i;:::-;5717:70;5780:6;5775:3;5717:70;:::i;:::-;5710:77;;5796:52;5841:6;5836:3;5829:4;5822:5;5818:16;5796:52;:::i;:::-;5873:29;5895:6;5873:29;:::i;:::-;5868:3;5864:39;5857:46;;5639:270;5549:360;;;;:::o;5915:373::-;6019:3;6047:38;6079:5;6047:38;:::i;:::-;6101:88;6182:6;6177:3;6101:88;:::i;:::-;6094:95;;6198:52;6243:6;6238:3;6231:4;6224:5;6220:16;6198:52;:::i;:::-;6275:6;6270:3;6266:16;6259:23;;6023:265;5915:373;;;;:::o;6294:366::-;6436:3;6457:67;6521:2;6516:3;6457:67;:::i;:::-;6450:74;;6533:93;6622:3;6533:93;:::i;:::-;6651:2;6646:3;6642:12;6635:19;;6294:366;;;:::o;6666:::-;6808:3;6829:67;6893:2;6888:3;6829:67;:::i;:::-;6822:74;;6905:93;6994:3;6905:93;:::i;:::-;7023:2;7018:3;7014:12;7007:19;;6666:366;;;:::o;7038:::-;7180:3;7201:67;7265:2;7260:3;7201:67;:::i;:::-;7194:74;;7277:93;7366:3;7277:93;:::i;:::-;7395:2;7390:3;7386:12;7379:19;;7038:366;;;:::o;7410:::-;7552:3;7573:67;7637:2;7632:3;7573:67;:::i;:::-;7566:74;;7649:93;7738:3;7649:93;:::i;:::-;7767:2;7762:3;7758:12;7751:19;;7410:366;;;:::o;7782:::-;7924:3;7945:67;8009:2;8004:3;7945:67;:::i;:::-;7938:74;;8021:93;8110:3;8021:93;:::i;:::-;8139:2;8134:3;8130:12;8123:19;;7782:366;;;:::o;8154:::-;8296:3;8317:67;8381:2;8376:3;8317:67;:::i;:::-;8310:74;;8393:93;8482:3;8393:93;:::i;:::-;8511:2;8506:3;8502:12;8495:19;;8154:366;;;:::o;8526:118::-;8613:24;8631:5;8613:24;:::i;:::-;8608:3;8601:37;8526:118;;:::o;8650:256::-;8762:3;8777:75;8848:3;8839:6;8777:75;:::i;:::-;8877:2;8872:3;8868:12;8861:19;;8897:3;8890:10;;8650:256;;;;:::o;8912:271::-;9042:3;9064:93;9153:3;9144:6;9064:93;:::i;:::-;9057:100;;9174:3;9167:10;;8912:271;;;;:::o;9189:210::-;9276:4;9314:2;9303:9;9299:18;9291:26;;9327:65;9389:1;9378:9;9374:17;9365:6;9327:65;:::i;:::-;9189:210;;;;:::o;9405:222::-;9498:4;9536:2;9525:9;9521:18;9513:26;;9549:71;9617:1;9606:9;9602:17;9593:6;9549:71;:::i;:::-;9405:222;;;;:::o;9633:309::-;9744:4;9782:2;9771:9;9767:18;9759:26;;9831:9;9825:4;9821:20;9817:1;9806:9;9802:17;9795:47;9859:76;9930:4;9921:6;9859:76;:::i;:::-;9851:84;;9633:309;;;;:::o;9948:419::-;10114:4;10152:2;10141:9;10137:18;10129:26;;10201:9;10195:4;10191:20;10187:1;10176:9;10172:17;10165:47;10229:131;10355:4;10229:131;:::i;:::-;10221:139;;9948:419;;;:::o;10373:::-;10539:4;10577:2;10566:9;10562:18;10554:26;;10626:9;10620:4;10616:20;10612:1;10601:9;10597:17;10590:47;10654:131;10780:4;10654:131;:::i;:::-;10646:139;;10373:419;;;:::o;10798:::-;10964:4;11002:2;10991:9;10987:18;10979:26;;11051:9;11045:4;11041:20;11037:1;11026:9;11022:17;11015:47;11079:131;11205:4;11079:131;:::i;:::-;11071:139;;10798:419;;;:::o;11223:::-;11389:4;11427:2;11416:9;11412:18;11404:26;;11476:9;11470:4;11466:20;11462:1;11451:9;11447:17;11440:47;11504:131;11630:4;11504:131;:::i;:::-;11496:139;;11223:419;;;:::o;11648:::-;11814:4;11852:2;11841:9;11837:18;11829:26;;11901:9;11895:4;11891:20;11887:1;11876:9;11872:17;11865:47;11929:131;12055:4;11929:131;:::i;:::-;11921:139;;11648:419;;;:::o;12073:::-;12239:4;12277:2;12266:9;12262:18;12254:26;;12326:9;12320:4;12316:20;12312:1;12301:9;12297:17;12290:47;12354:131;12480:4;12354:131;:::i;:::-;12346:139;;12073:419;;;:::o;12498:222::-;12591:4;12629:2;12618:9;12614:18;12606:26;;12642:71;12710:1;12699:9;12695:17;12686:6;12642:71;:::i;:::-;12498:222;;;;:::o;12726:129::-;12760:6;12787:20;;:::i;:::-;12777:30;;12816:33;12844:4;12836:6;12816:33;:::i;:::-;12726:129;;;:::o;12861:75::-;12894:6;12927:2;12921:9;12911:19;;12861:75;:::o;12942:307::-;13003:4;13093:18;13085:6;13082:30;13079:56;;;13115:18;;:::i;:::-;13079:56;13153:29;13175:6;13153:29;:::i;:::-;13145:37;;13237:4;13231;13227:15;13219:23;;12942:307;;;:::o;13255:116::-;13306:4;13329:3;13321:11;;13359:4;13354:3;13350:14;13342:22;;13255:116;;;:::o;13377:98::-;13428:6;13462:5;13456:12;13446:22;;13377:98;;;:::o;13481:168::-;13564:11;13598:6;13593:3;13586:19;13638:4;13633:3;13629:14;13614:29;;13481:168;;;;:::o;13655:147::-;13756:11;13793:3;13778:18;;13655:147;;;;:::o;13808:169::-;13892:11;13926:6;13921:3;13914:19;13966:4;13961:3;13957:14;13942:29;;13808:169;;;;:::o;13983:305::-;14023:3;14042:20;14060:1;14042:20;:::i;:::-;14037:25;;14076:20;14094:1;14076:20;:::i;:::-;14071:25;;14230:1;14162:66;14158:74;14155:1;14152:81;14149:107;;;14236:18;;:::i;:::-;14149:107;14280:1;14277;14273:9;14266:16;;13983:305;;;;:::o;14294:191::-;14334:4;14354:20;14372:1;14354:20;:::i;:::-;14349:25;;14388:20;14406:1;14388:20;:::i;:::-;14383:25;;14427:1;14424;14421:8;14418:34;;;14432:18;;:::i;:::-;14418:34;14477:1;14474;14470:9;14462:17;;14294:191;;;;:::o;14491:96::-;14528:7;14557:24;14575:5;14557:24;:::i;:::-;14546:35;;14491:96;;;:::o;14593:90::-;14627:7;14670:5;14663:13;14656:21;14645:32;;14593:90;;;:::o;14689:77::-;14726:7;14755:5;14744:16;;14689:77;;;:::o;14772:126::-;14809:7;14849:42;14842:5;14838:54;14827:65;;14772:126;;;:::o;14904:77::-;14941:7;14970:5;14959:16;;14904:77;;;:::o;14987:594::-;15071:5;15102:38;15134:5;15102:38;:::i;:::-;15165:5;15192:40;15226:5;15192:40;:::i;:::-;15180:52;;15251:35;15277:8;15251:35;:::i;:::-;15242:44;;15310:2;15302:6;15299:14;15296:278;;;15381:169;15466:66;15436:6;15432:2;15428:15;15425:1;15421:23;15381:169;:::i;:::-;15358:5;15337:227;15328:236;;15296:278;15077:504;;14987:594;;;:::o;15587:154::-;15671:6;15666:3;15661;15648:30;15733:1;15724:6;15719:3;15715:16;15708:27;15587:154;;;:::o;15747:307::-;15815:1;15825:113;15839:6;15836:1;15833:13;15825:113;;;15924:1;15919:3;15915:11;15909:18;15905:1;15900:3;15896:11;15889:39;15861:2;15858:1;15854:10;15849:15;;15825:113;;;15956:6;15953:1;15950:13;15947:101;;;16036:1;16027:6;16022:3;16018:16;16011:27;15947:101;15796:258;15747:307;;;:::o;16060:320::-;16104:6;16141:1;16135:4;16131:12;16121:22;;16188:1;16182:4;16178:12;16209:18;16199:81;;16265:4;16257:6;16253:17;16243:27;;16199:81;16327:2;16319:6;16316:14;16296:18;16293:38;16290:84;;;16346:18;;:::i;:::-;16290:84;16111:269;16060:320;;;:::o;16386:281::-;16469:27;16491:4;16469:27;:::i;:::-;16461:6;16457:40;16599:6;16587:10;16584:22;16563:18;16551:10;16548:34;16545:62;16542:88;;;16610:18;;:::i;:::-;16542:88;16650:10;16646:2;16639:22;16429:238;16386:281;;:::o;16673:79::-;16712:7;16741:5;16730:16;;16673:79;;;:::o;16758:180::-;16806:77;16803:1;16796:88;16903:4;16900:1;16893:15;16927:4;16924:1;16917:15;16944:180;16992:77;16989:1;16982:88;17089:4;17086:1;17079:15;17113:4;17110:1;17103:15;17130:180;17178:77;17175:1;17168:88;17275:4;17272:1;17265:15;17299:4;17296:1;17289:15;17316:154;17359:11;17395:29;17419:3;17413:10;17395:29;:::i;:::-;17458:5;17434:29;;17371:99;17316:154;;;:::o;17476:117::-;17585:1;17582;17575:12;17599:117;17708:1;17705;17698:12;17722:117;17831:1;17828;17821:12;17845:117;17954:1;17951;17944:12;17968:102;18009:6;18060:2;18056:7;18051:2;18044:5;18040:14;18036:28;18026:38;;17968:102;;;:::o;18076:107::-;18120:8;18170:5;18164:4;18160:16;18139:37;;18076:107;;;;:::o;18189:220::-;18329:34;18325:1;18317:6;18313:14;18306:58;18398:3;18393:2;18385:6;18381:15;18374:28;18189:220;:::o;18415:170::-;18555:22;18551:1;18543:6;18539:14;18532:46;18415:170;:::o;18591:168::-;18731:20;18727:1;18719:6;18715:14;18708:44;18591:168;:::o;18765:222::-;18905:34;18901:1;18893:6;18889:14;18882:58;18974:5;18969:2;18961:6;18957:15;18950:30;18765:222;:::o;18993:170::-;19133:22;19129:1;19121:6;19117:14;19110:46;18993:170;:::o;19169:178::-;19309:30;19305:1;19297:6;19293:14;19286:54;19169:178;:::o;19353:122::-;19426:24;19444:5;19426:24;:::i;:::-;19419:5;19416:35;19406:63;;19465:1;19462;19455:12;19406:63;19353:122;:::o;19481:::-;19554:24;19572:5;19554:24;:::i;:::-;19547:5;19544:35;19534:63;;19593:1;19590;19583:12;19534:63;19481:122;:::o;19609:::-;19682:24;19700:5;19682:24;:::i;:::-;19675:5;19672:35;19662:63;;19721:1;19718;19711:12;19662:63;19609:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1392800",
								"executionCost": "47860",
								"totalCost": "1440660"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"allowance2(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2837",
								"getData(bytes32)": "infinite",
								"getData2(bytes32)": "infinite",
								"getDataHash()": "2526",
								"storeData(bytes)": "infinite",
								"storeData2(bytes,bytes32)": "infinite",
								"storeData3(bytes)": "infinite",
								"totalSupply()": "2475",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferFrom2(address,address,uint256)": "infinite",
								"uploadData(bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 333,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "E8D4A51000"
								},
								{
									"begin": 304,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 337,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 957,
									"end": 1032,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 989,
									"end": 1010,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1024,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 989,
									"end": 1024,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 4182,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a115901fb7d7b7daf1b09a32398a437b4610429a11bf4307ce51aa65df7bb5264736f6c63430008070033",
									".code": [
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "AC5C8535"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "D8218148"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "8BD40C3B"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "965D68D9"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "A4DA2290"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "54F6127F"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "54F6127F"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "6377FC8B"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "69CEF46C"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "6C12ED28"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 4182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1484,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1559,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 337,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1888,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1910,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1842,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1834,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1996,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2101,
											"end": 2104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2099,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2113,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 2143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4027,
											"end": 4038,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 4052,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3053,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3053,
											"end": 3086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3053,
											"end": 3086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3723,
											"name": "PUSH",
											"source": 0,
											"value": "A00000"
										},
										{
											"begin": 3700,
											"end": 3704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3723,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3692,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3828,
											"end": 3832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3815,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3824,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3816,
											"end": 3824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2339,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2312,
											"end": 2350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2304,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2450,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2504,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 344,
											"end": 389,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "PUSH",
											"source": 0,
											"value": "A00000"
										},
										{
											"begin": 2823,
											"end": 2827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2815,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2916,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2971,
											"end": 2979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2959,
											"end": 2969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "ED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB"
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2980,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2740,
											"end": 2988,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4133,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4177,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3927,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3919,
											"end": 3927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1132,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1124,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1314,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1044,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3232,
											"name": "PUSH",
											"source": 0,
											"value": "A00000"
										},
										{
											"begin": 3201,
											"end": 3205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3193,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3313,
											"end": 3347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3313,
											"end": 3347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3415,
											"end": 3443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3467,
											"end": 3489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3612,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "ED4DB59F1764789ECAC8E436BC4FFBD671282C22B4D3860CBA3AAF331B45F6CB"
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3621,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3182,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3182,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3182,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 396,
											"end": 462,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "157"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "159"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "162"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "162"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "163"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "163"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 707,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 568,
											"end": 707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 614,
											"end": 619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 639,
											"end": 659,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 630,
											"end": 659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 668,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 668,
											"end": 701,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 701,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 668,
											"end": 701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 568,
											"end": 707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 707,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 856,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 713,
											"end": 856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 795,
											"end": 808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 786,
											"end": 808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 786,
											"end": 808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 817,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 713,
											"end": 856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 713,
											"end": 856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 713,
											"end": 856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 713,
											"end": 856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 713,
											"end": 856,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 972,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 960,
											"end": 977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 956,
											"end": 983,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 987,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 987,
											"end": 1066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1066,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 987,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 946,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1111,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1129,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1203,
											"end": 1206,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1186,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1129,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1129,
											"end": 1207,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1129,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1213,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1310,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1346,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1319,
											"end": 1352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1352,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1319,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1358,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1447,
											"end": 1470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1475,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1440,
											"end": 1559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1478,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1478,
											"end": 1557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1478,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1440,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1693,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1822,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1827,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1792,
											"end": 1911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1830,
											"end": 1909,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1830,
											"end": 1909,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1792,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2020,
											"end": 2027,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1975,
											"end": 2028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2028,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1975,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2137,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2103,
											"end": 2156,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2103,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2319,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2324,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2408,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2289,
											"end": 2408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2327,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2327,
											"end": 2406,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2406,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2327,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2289,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2517,
											"end": 2524,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2525,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2600,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2653,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2773,
											"end": 2780,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2728,
											"end": 2781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2728,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2728,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2798,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2932,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 3016,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2897,
											"end": 3016,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 3016,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2897,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3080,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3242,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3208,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 3278,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3378,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3395,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3479,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3360,
											"end": 3479,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3479,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3360,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3543,
											"end": 3596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3543,
											"end": 3596,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3543,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3489,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3613,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3740,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3709,
											"end": 3741,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3825,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3706,
											"end": 3825,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3744,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3744,
											"end": 3823,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3744,
											"end": 3823,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3744,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3825,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3706,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3889,
											"end": 3953,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3889,
											"end": 3953,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3889,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3970,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4091,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4296,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4263,
											"end": 4380,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4263,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4263,
											"end": 4380,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4299,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4299,
											"end": 4378,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4299,
											"end": 4378,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4299,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4263,
											"end": 4380,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4263,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4404,
											"end": 4466,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4466,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4404,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4483,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4602,
											"end": 4609,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 4626,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4710,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4591,
											"end": 4710,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4710,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4591,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4780,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4799,
											"end": 4805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4793,
											"end": 4910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4829,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4829,
											"end": 4908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4829,
											"end": 4908,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4829,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4910,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4793,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4934,
											"end": 4996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 4996,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4934,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4996,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 5006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5047,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5071,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 5141,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5147,
											"end": 5256,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5147,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5256,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5262,
											"end": 5380,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5262,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5367,
											"end": 5372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5349,
											"end": 5373,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5349,
											"end": 5373,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5349,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5337,
											"end": 5374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5380,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5386,
											"end": 5543,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5386,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5511,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5511,
											"end": 5535,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5511,
											"end": 5535,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5511,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 5491,
											"end": 5536,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5491,
											"end": 5536,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5491,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5486,
											"end": 5489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5479,
											"end": 5537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5543,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5695,
											"end": 5700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5778,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5717,
											"end": 5787,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5717,
											"end": 5787,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5717,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5787,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5839,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5822,
											"end": 5827,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5796,
											"end": 5848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5796,
											"end": 5848,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5796,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5873,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5871,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 5903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5857,
											"end": 5903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5909,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6079,
											"end": 6084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6047,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6047,
											"end": 6085,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6047,
											"end": 6085,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6047,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6101,
											"end": 6189,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6101,
											"end": 6189,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6101,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6189,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6241,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6198,
											"end": 6250,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6198,
											"end": 6250,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6198,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6266,
											"end": 6282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6288,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6516,
											"end": 6519,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6457,
											"end": 6524,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6457,
											"end": 6524,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 6457,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6524,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6622,
											"end": 6625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6533,
											"end": 6626,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6533,
											"end": 6626,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6533,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6642,
											"end": 6654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6888,
											"end": 6891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6829,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6829,
											"end": 6896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6829,
											"end": 6896,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6829,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6822,
											"end": 6896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6822,
											"end": 6896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6994,
											"end": 6997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6905,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6905,
											"end": 6998,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6905,
											"end": 6998,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6905,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7018,
											"end": 7021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 7032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7180,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7265,
											"end": 7267,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7260,
											"end": 7263,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7201,
											"end": 7268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7201,
											"end": 7268,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7201,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7268,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7366,
											"end": 7369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 7277,
											"end": 7370,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7370,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7277,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7386,
											"end": 7398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7404,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7552,
											"end": 7555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 7632,
											"end": 7635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7573,
											"end": 7640,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 7573,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7566,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7566,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7649,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7649,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 7649,
											"end": 7742,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7649,
											"end": 7742,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7649,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7776,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 8004,
											"end": 8007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7945,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 8012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 8012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 8110,
											"end": 8113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 8021,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8139,
											"end": 8141,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7782,
											"end": 8148,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 8376,
											"end": 8379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8509,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8631,
											"end": 8636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8608,
											"end": 8611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8601,
											"end": 8638,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 8845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8777,
											"end": 8852,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8852,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 8777,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8861,
											"end": 8880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8861,
											"end": 8880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 8900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8890,
											"end": 8900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8906,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9144,
											"end": 9150,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9064,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9064,
											"end": 9157,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9064,
											"end": 9157,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9064,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8912,
											"end": 9183,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9387,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9374,
											"end": 9391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 9327,
											"end": 9392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9327,
											"end": 9392,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 9327,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9399,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9498,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9602,
											"end": 9619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9549,
											"end": 9620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9549,
											"end": 9620,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 9549,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9627,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9744,
											"end": 9748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9831,
											"end": 9840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9821,
											"end": 9841,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9802,
											"end": 9819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9795,
											"end": 9842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9859,
											"end": 9935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9859,
											"end": 9935,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9859,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9851,
											"end": 9935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9851,
											"end": 9935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9942,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10137,
											"end": 10155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10129,
											"end": 10155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10129,
											"end": 10155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10195,
											"end": 10199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10185,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10165,
											"end": 10212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10355,
											"end": 10359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10221,
											"end": 10360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10221,
											"end": 10360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10616,
											"end": 10636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10612,
											"end": 10613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10610,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10597,
											"end": 10614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 10780,
											"end": 10784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 10654,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10373,
											"end": 10792,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10964,
											"end": 10968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 11005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11051,
											"end": 11060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11041,
											"end": 11061,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11035,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11022,
											"end": 11039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11015,
											"end": 11062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 11205,
											"end": 11209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11389,
											"end": 11393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11427,
											"end": 11429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11416,
											"end": 11425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11404,
											"end": 11430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11404,
											"end": 11430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11476,
											"end": 11485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11466,
											"end": 11486,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11440,
											"end": 11487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11504,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 11630,
											"end": 11634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11504,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11504,
											"end": 11635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11504,
											"end": 11635,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 11504,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11496,
											"end": 11635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11642,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11814,
											"end": 11818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11841,
											"end": 11850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11837,
											"end": 11855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11829,
											"end": 11855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11895,
											"end": 11899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11891,
											"end": 11911,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11887,
											"end": 11888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11876,
											"end": 11885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11872,
											"end": 11889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11865,
											"end": 11912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11929,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12055,
											"end": 12059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11929,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 11929,
											"end": 12060,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11929,
											"end": 12060,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11929,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 12067,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12239,
											"end": 12243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12277,
											"end": 12279,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12262,
											"end": 12280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12254,
											"end": 12280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12254,
											"end": 12280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12326,
											"end": 12335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12320,
											"end": 12324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12316,
											"end": 12336,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12312,
											"end": 12313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12290,
											"end": 12337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12354,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12354,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12354,
											"end": 12485,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12354,
											"end": 12485,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12354,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12492,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12629,
											"end": 12631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12618,
											"end": 12627,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12606,
											"end": 12632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12606,
											"end": 12632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12642,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12710,
											"end": 12711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12708,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12695,
											"end": 12712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12686,
											"end": 12692,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12642,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 12642,
											"end": 12713,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12642,
											"end": 12713,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12642,
											"end": 12713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12720,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12760,
											"end": 12766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12777,
											"end": 12807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12777,
											"end": 12807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 12844,
											"end": 12848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12836,
											"end": 12842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12726,
											"end": 12855,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12861,
											"end": 12936,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 12861,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12894,
											"end": 12900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12927,
											"end": 12929,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12911,
											"end": 12930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12911,
											"end": 12930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12861,
											"end": 12936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12861,
											"end": 12936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13085,
											"end": 13091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13082,
											"end": 13112,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13079,
											"end": 13135,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13079,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 13079,
											"end": 13135,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 13115,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13079,
											"end": 13135,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 13079,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13153,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 13175,
											"end": 13181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13153,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 13153,
											"end": 13182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13153,
											"end": 13182,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 13153,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13145,
											"end": 13182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13145,
											"end": 13182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13237,
											"end": 13241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13231,
											"end": 13235,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13227,
											"end": 13242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13219,
											"end": 13242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13219,
											"end": 13242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12942,
											"end": 13249,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13306,
											"end": 13310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13329,
											"end": 13332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13321,
											"end": 13332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13321,
											"end": 13332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13359,
											"end": 13363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13350,
											"end": 13364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13342,
											"end": 13364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13342,
											"end": 13364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13371,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13462,
											"end": 13467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13456,
											"end": 13468,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13446,
											"end": 13468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13446,
											"end": 13468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13377,
											"end": 13475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13564,
											"end": 13575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13598,
											"end": 13604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13593,
											"end": 13596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13586,
											"end": 13605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13638,
											"end": 13642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13633,
											"end": 13636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13629,
											"end": 13643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13614,
											"end": 13643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13481,
											"end": 13649,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13756,
											"end": 13767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13802,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13892,
											"end": 13903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13926,
											"end": 13932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 13924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13914,
											"end": 13933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13966,
											"end": 13970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 13964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13957,
											"end": 13971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13942,
											"end": 13971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13942,
											"end": 13971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14023,
											"end": 14026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 14060,
											"end": 14061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14230,
											"end": 14231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14162,
											"end": 14228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14158,
											"end": 14232,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14155,
											"end": 14156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14152,
											"end": 14233,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14149,
											"end": 14256,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14149,
											"end": 14256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 14149,
											"end": 14256,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14149,
											"end": 14256,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 14149,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14280,
											"end": 14281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14277,
											"end": 14278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14273,
											"end": 14282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14266,
											"end": 14282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14266,
											"end": 14282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13983,
											"end": 14288,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14334,
											"end": 14338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14354,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14372,
											"end": 14373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14354,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14354,
											"end": 14374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14374,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14354,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 14406,
											"end": 14407,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 14388,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14383,
											"end": 14408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14383,
											"end": 14408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14427,
											"end": 14428,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14424,
											"end": 14425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14429,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 14418,
											"end": 14452,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14452,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 14418,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14477,
											"end": 14478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14474,
											"end": 14475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14462,
											"end": 14479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14462,
											"end": 14479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14294,
											"end": 14485,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14528,
											"end": 14535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 14575,
											"end": 14580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14557,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 14557,
											"end": 14581,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14557,
											"end": 14581,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 14557,
											"end": 14581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14546,
											"end": 14581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14546,
											"end": 14581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14491,
											"end": 14587,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14627,
											"end": 14634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14670,
											"end": 14675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14663,
											"end": 14676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14656,
											"end": 14677,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14645,
											"end": 14677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14645,
											"end": 14677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14593,
											"end": 14683,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14689,
											"end": 14766,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14809,
											"end": 14816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14849,
											"end": 14891,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14842,
											"end": 14847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14838,
											"end": 14892,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14827,
											"end": 14892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14827,
											"end": 14892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14772,
											"end": 14898,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14941,
											"end": 14948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14970,
											"end": 14975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14959,
											"end": 14975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14959,
											"end": 14975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14904,
											"end": 14981,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15071,
											"end": 15076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15102,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 15134,
											"end": 15139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15102,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 15102,
											"end": 15140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15102,
											"end": 15140,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 15102,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15165,
											"end": 15170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15226,
											"end": 15231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 15192,
											"end": 15232,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15192,
											"end": 15232,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15192,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15180,
											"end": 15232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15180,
											"end": 15232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15251,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15277,
											"end": 15285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15251,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 15251,
											"end": 15286,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15251,
											"end": 15286,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15251,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15242,
											"end": 15286,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15242,
											"end": 15286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15310,
											"end": 15312,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15302,
											"end": 15308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15313,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 15296,
											"end": 15574,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15381,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 15466,
											"end": 15532,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15436,
											"end": 15442,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15434,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15428,
											"end": 15443,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15425,
											"end": 15426,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 15421,
											"end": 15444,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15381,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 15381,
											"end": 15550,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15381,
											"end": 15550,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 15381,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15358,
											"end": 15363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15337,
											"end": 15564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15328,
											"end": 15564,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15328,
											"end": 15564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15574,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 15296,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15077,
											"end": 15581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15077,
											"end": 15581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14987,
											"end": 15581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15671,
											"end": 15677,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15666,
											"end": 15669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15661,
											"end": 15664,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15648,
											"end": 15678,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 15733,
											"end": 15734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15719,
											"end": 15722,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15715,
											"end": 15731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15708,
											"end": 15735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15587,
											"end": 15741,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15815,
											"end": 15816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15839,
											"end": 15845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15836,
											"end": 15837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15833,
											"end": 15846,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15924,
											"end": 15925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15919,
											"end": 15922,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15909,
											"end": 15927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15905,
											"end": 15906,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15900,
											"end": 15903,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15896,
											"end": 15907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15861,
											"end": 15863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15858,
											"end": 15859,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15849,
											"end": 15864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15849,
											"end": 15864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 15825,
											"end": 15938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15956,
											"end": 15962,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15953,
											"end": 15954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 16048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 15947,
											"end": 16048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16036,
											"end": 16037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16022,
											"end": 16025,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16018,
											"end": 16034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16011,
											"end": 16038,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 16048,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 15947,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15796,
											"end": 16054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15747,
											"end": 16054,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16104,
											"end": 16110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16141,
											"end": 16142,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 16135,
											"end": 16139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16131,
											"end": 16143,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 16121,
											"end": 16143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16121,
											"end": 16143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 16182,
											"end": 16186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16178,
											"end": 16190,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16199,
											"end": 16280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 16199,
											"end": 16280,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16265,
											"end": 16269,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 16257,
											"end": 16263,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16253,
											"end": 16270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16243,
											"end": 16270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16243,
											"end": 16270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16199,
											"end": 16280,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 16199,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16327,
											"end": 16329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16316,
											"end": 16330,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16293,
											"end": 16331,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16290,
											"end": 16374,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16290,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 16290,
											"end": 16374,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 16346,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16290,
											"end": 16374,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 16290,
											"end": 16374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16111,
											"end": 16380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16060,
											"end": 16380,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16386,
											"end": 16667,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 16386,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16469,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 16491,
											"end": 16495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16469,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 16469,
											"end": 16496,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16469,
											"end": 16496,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 16469,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16461,
											"end": 16467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16457,
											"end": 16497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16587,
											"end": 16597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16584,
											"end": 16606,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 16563,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16551,
											"end": 16561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 16545,
											"end": 16607,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16542,
											"end": 16630,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16542,
											"end": 16630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 16542,
											"end": 16630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16610,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 16610,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 16610,
											"end": 16628,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16610,
											"end": 16628,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 16610,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16542,
											"end": 16630,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 16542,
											"end": 16630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16650,
											"end": 16660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16646,
											"end": 16648,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16639,
											"end": 16661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16429,
											"end": 16667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16386,
											"end": 16667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16386,
											"end": 16667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16386,
											"end": 16667,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16712,
											"end": 16719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16730,
											"end": 16746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16730,
											"end": 16746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16673,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16758,
											"end": 16938,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 16758,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16806,
											"end": 16883,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16803,
											"end": 16804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16796,
											"end": 16884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16903,
											"end": 16907,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 16900,
											"end": 16901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16893,
											"end": 16908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16927,
											"end": 16931,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 16924,
											"end": 16925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16917,
											"end": 16932,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16944,
											"end": 17124,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 16944,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16992,
											"end": 17069,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16982,
											"end": 17070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17089,
											"end": 17093,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 17086,
											"end": 17087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17079,
											"end": 17094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17113,
											"end": 17117,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 17110,
											"end": 17111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17103,
											"end": 17118,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17130,
											"end": 17310,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 17130,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17178,
											"end": 17255,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17175,
											"end": 17176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17168,
											"end": 17256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17279,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17272,
											"end": 17273,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17265,
											"end": 17280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17299,
											"end": 17303,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 17296,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17289,
											"end": 17304,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17359,
											"end": 17370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17395,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 17419,
											"end": 17422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17413,
											"end": 17423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17395,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17395,
											"end": 17424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17395,
											"end": 17424,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 17395,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17458,
											"end": 17463,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17434,
											"end": 17463,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17434,
											"end": 17463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17371,
											"end": 17470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17316,
											"end": 17470,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17476,
											"end": 17593,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17476,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17585,
											"end": 17586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17582,
											"end": 17583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17599,
											"end": 17716,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 17599,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17708,
											"end": 17709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17705,
											"end": 17706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17698,
											"end": 17710,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17722,
											"end": 17839,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 17722,
											"end": 17839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17831,
											"end": 17832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17828,
											"end": 17829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17821,
											"end": 17833,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17845,
											"end": 17962,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 17845,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17954,
											"end": 17955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17951,
											"end": 17952,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17944,
											"end": 17956,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18009,
											"end": 18015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18060,
											"end": 18062,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 18056,
											"end": 18063,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 18051,
											"end": 18053,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 18044,
											"end": 18049,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18040,
											"end": 18054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18036,
											"end": 18064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18026,
											"end": 18064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18026,
											"end": 18064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17968,
											"end": 18070,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18120,
											"end": 18128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18170,
											"end": 18175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18164,
											"end": 18168,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18160,
											"end": 18176,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 18139,
											"end": 18176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18139,
											"end": 18176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18076,
											"end": 18183,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18189,
											"end": 18409,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 18189,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18329,
											"end": 18363,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365206F7220616C6C6F77616E63"
										},
										{
											"begin": 18325,
											"end": 18326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18317,
											"end": 18323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18313,
											"end": 18327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18306,
											"end": 18364,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18398,
											"end": 18401,
											"name": "PUSH",
											"source": 5,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18393,
											"end": 18395,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18385,
											"end": 18391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18381,
											"end": 18396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18374,
											"end": 18402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18189,
											"end": 18409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18189,
											"end": 18409,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18415,
											"end": 18585,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 18415,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18555,
											"end": 18577,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 18551,
											"end": 18552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18543,
											"end": 18549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18539,
											"end": 18553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18532,
											"end": 18578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18415,
											"end": 18585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18415,
											"end": 18585,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18591,
											"end": 18759,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 18591,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18731,
											"end": 18751,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F7567682062616C616E63650000000000000000000000000000"
										},
										{
											"begin": 18727,
											"end": 18728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18719,
											"end": 18725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18715,
											"end": 18729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18708,
											"end": 18752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18591,
											"end": 18759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18591,
											"end": 18759,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18765,
											"end": 18987,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 18765,
											"end": 18987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18905,
											"end": 18939,
											"name": "PUSH",
											"source": 5,
											"value": "446174612073697A65206578636565647320746865206C696D6974206F662031"
										},
										{
											"begin": 18901,
											"end": 18902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18893,
											"end": 18899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18889,
											"end": 18903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18882,
											"end": 18940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18974,
											"end": 18979,
											"name": "PUSH",
											"source": 5,
											"value": "304D420000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18969,
											"end": 18971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18961,
											"end": 18967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18957,
											"end": 18972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18950,
											"end": 18980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18765,
											"end": 18987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18765,
											"end": 18987,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18993,
											"end": 19163,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 18993,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19133,
											"end": 19155,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F75676820616C6C6F77616E6365000000000000000000000000"
										},
										{
											"begin": 19129,
											"end": 19130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19121,
											"end": 19127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19117,
											"end": 19131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19110,
											"end": 19156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18993,
											"end": 19163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18993,
											"end": 19163,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19169,
											"end": 19347,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 19169,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19309,
											"end": 19339,
											"name": "PUSH",
											"source": 5,
											"value": "446174612073697A6520657863656564732031304D42206C696D697400000000"
										},
										{
											"begin": 19305,
											"end": 19306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19297,
											"end": 19303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19293,
											"end": 19307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19286,
											"end": 19340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19169,
											"end": 19347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19169,
											"end": 19347,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19353,
											"end": 19475,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 19353,
											"end": 19475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19426,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 19444,
											"end": 19449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19426,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 19426,
											"end": 19450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19426,
											"end": 19450,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 19426,
											"end": 19450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19419,
											"end": 19424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19416,
											"end": 19451,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19406,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 19406,
											"end": 19469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 19465,
											"end": 19466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19462,
											"end": 19463,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19455,
											"end": 19467,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 19406,
											"end": 19469,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 19406,
											"end": 19469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19353,
											"end": 19475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19353,
											"end": 19475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19481,
											"end": 19603,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 19481,
											"end": 19603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19554,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 19572,
											"end": 19577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19554,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 19554,
											"end": 19578,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19554,
											"end": 19578,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 19554,
											"end": 19578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19547,
											"end": 19552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19544,
											"end": 19579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19534,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 19534,
											"end": 19597,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 19593,
											"end": 19594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19590,
											"end": 19591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19583,
											"end": 19595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 19534,
											"end": 19597,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 19534,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19481,
											"end": 19603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19481,
											"end": 19603,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19609,
											"end": 19731,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 19609,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 19700,
											"end": 19705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 19682,
											"end": 19706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19675,
											"end": 19680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19672,
											"end": 19707,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19662,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 19662,
											"end": 19725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 19721,
											"end": 19722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19718,
											"end": 19719,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19711,
											"end": 19723,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 19662,
											"end": 19725,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 19662,
											"end": 19725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19609,
											"end": 19731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19609,
											"end": 19731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"allowance2(address,address)": "d8218148",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getData(bytes32)": "54f6127f",
							"getData2(bytes32)": "965d68d9",
							"getDataHash()": "a4da2290",
							"storeData(bytes)": "ac5c8535",
							"storeData2(bytes,bytes32)": "8bd40c3b",
							"storeData3(bytes)": "6377fc8b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom2(address,address,uint256)": "6c12ed28",
							"uploadData(bytes)": "69cef46c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"StoreData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"}],\"name\":\"getData2\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDataHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"storeData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"storeData2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data2\",\"type\":\"bytes\"}],\"name\":\"storeData3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uploadData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DNG.sol\":\"DNG\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DNG.sol\":{\"keccak256\":\"0x02c923dead1066f67b522201d649d74367ca65d232239ead457785d9db8ec53c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8bb7477c1e6393fa61407183538e0503a90583c7e0eda9457f6ad59ddd82197d\",\"dweb:/ipfs/QmcT6gTw7p13aWZfhVMgfUA2sFiq5WuFBh1WqpeZdGgoqk\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x54ee424bfc83ce63b2a918b9a1efb5090a0fb68dbd1de3b10bc667776885dd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c8245bd91b51a6e411db1a68397e6d89ea76d28fd3fff2b5986ebd860c43aca\",\"dweb:/ipfs/QmUBfM8dUuxABn9ctfZWqierQbbux6NuhvSmQuSdrSEdch\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/DNG.sol:DNG",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/DNG.sol:DNG",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 15,
								"contract": "contracts/DNG.sol:DNG",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 19,
								"contract": "contracts/DNG.sol:DNG",
								"label": "dataStorage",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_bytes_storage)"
							},
							{
								"astId": 23,
								"contract": "contracts/DNG.sol:DNG",
								"label": "data2",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_bytes_storage)"
							},
							{
								"astId": 25,
								"contract": "contracts/DNG.sol:DNG",
								"label": "dataHash",
								"offset": 0,
								"slot": "5",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bytes_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes)",
								"numberOfBytes": "32",
								"value": "t_bytes_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xFB MULMOD MSTORE8 0x23 DUP6 PUSH7 0x3854073449E0FE 0xD8 PUSH4 0xFB19FECE 0xD6 0x29 0xE9 0xC0 DUP8 PUSH5 0x28CAAE38DE PUSH12 0x64736F6C6343000807003300 ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xFB MULMOD MSTORE8 0x23 DUP6 PUSH7 0x3854073449E0FE 0xD8 PUSH4 0xFB19FECE 0xD6 0x29 0xE9 0xC0 DUP8 PUSH5 0x28CAAE38DE PUSH12 0x64736F6C6343000807003300 ",
							"sourceMap": "220:2559:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000fb09532385663854073449e0fed863fb19feced629e9c0876428caae38de6b64736f6c63430008070033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":369:8401  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":369:8401  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f80f3f344b7106bf54d59c00131bb32f811fded8627295da851489486058bfa464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f80f3f344b7106bf54d59c00131bb32f811fded8627295da851489486058bfa464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xF EXTCODEHASH CALLVALUE 0x4B PUSH18 0x6BF54D59C00131BB32F811FDED8627295DA DUP6 EQ DUP10 BASEFEE PUSH1 0x58 0xBF LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "369:8032:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f80f3f344b7106bf54d59c00131bb32f811fded8627295da851489486058bfa464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xF EXTCODEHASH CALLVALUE 0x4B PUSH18 0x6BF54D59C00131BB32F811FDED8627295DA DUP6 EQ DUP10 BASEFEE PUSH1 0x58 0xBF LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "369:8032:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 369,
									"end": 8401,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f80f3f344b7106bf54d59c00131bb32f811fded8627295da851489486058bfa464736f6c63430008070033",
									".code": [
										{
											"begin": 369,
											"end": 8401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 369,
											"end": 8401,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x54ee424bfc83ce63b2a918b9a1efb5090a0fb68dbd1de3b10bc667776885dd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c8245bd91b51a6e411db1a68397e6d89ea76d28fd3fff2b5986ebd860c43aca\",\"dweb:/ipfs/QmUBfM8dUuxABn9ctfZWqierQbbux6NuhvSmQuSdrSEdch\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x4E XOR SSTORE MSTORE8 0x4F 0xE0 0x2D MOD EXTCODEHASH 0xC2 SELFBALANCE 0xE 0xA6 0xC0 SWAP15 0x26 0xCD SELFDESTRUCT PUSH30 0x7664CD5F9EFB23243CEC61E664736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12289:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x4E XOR SSTORE MSTORE8 0x4F 0xE0 0x2D MOD EXTCODEHASH 0xC2 SELFBALANCE 0xE 0xA6 0xC0 SWAP15 0x26 0xCD SELFDESTRUCT PUSH30 0x7664CD5F9EFB23243CEC61E664736F6C6343000807003300000000000000 ",
							"sourceMap": "202:12289:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f4e1855534fe02d063fc2470ea6c09e26cdff7d7664cd5f9efb23243cec61e664736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 BYTE 0xBA 0xBB CODECOPY 0x2C 0xDD AND LOG3 PUSH6 0x1B47D6C25716 SWAP6 0xB9 0x4E SAR ADDMOD SWAP8 CREATE2 0xAE 0xF CALLVALUE 0xB6 0xE3 DUP7 SWAP2 DUP4 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "215:1047:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 BYTE 0xBA 0xBB CODECOPY 0x2C 0xDD AND LOG3 PUSH6 0x1B47D6C25716 SWAP6 0xB9 0x4E SAR ADDMOD SWAP8 CREATE2 0xAE 0xF CALLVALUE 0xB6 0xE3 DUP7 SWAP2 DUP4 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "215:1047:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220841ababb392cdd16a3651b47d6c2571695b94e1d0897f5ae0f34b6e38691838164736f6c63430008070033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/DNG.sol:66:44:\n   |\n66 |     function storeData2(bytes memory data, bytes32 dataHash) public {\n   |                                            ^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/DNG.sol:15:5:\n   |\n15 |     bytes32 private dataHash;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 670,
						"file": "contracts/DNG.sol",
						"message": "The shadowed declaration is here:",
						"start": 646
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2795,
					"file": "contracts/DNG.sol",
					"start": 2779
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/DNG.sol:72:9:\n   |\n72 |         bytes32 dataHash = sha256(_data2);\n   |         ^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/DNG.sol:15:5:\n   |\n15 |     bytes32 private dataHash;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 670,
						"file": "contracts/DNG.sol",
						"message": "The shadowed declaration is here:",
						"start": 646
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3069,
					"file": "contracts/DNG.sol",
					"start": 3053
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/DNG.sol:84:9:\n   |\n84 |         bytes32 dataHash = binaryData;\n   |         ^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/DNG.sol:15:5:\n   |\n15 |     bytes32 private dataHash;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 670,
						"file": "contracts/DNG.sol",
						"message": "The shadowed declaration is here:",
						"start": 646
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3561,
					"file": "contracts/DNG.sol",
					"start": 3545
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/DNG.sol:23:5:\n   |\n23 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1032,
					"file": "contracts/DNG.sol",
					"start": 957
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/DNG.sol": {
				"ast": {
					"absolutePath": "contracts/DNG.sol",
					"exportedSymbols": {
						"DNG": [
							416
						],
						"ECDSA": [
							1006
						],
						"Math": [
							1872
						],
						"SignedMath": [
							1977
						],
						"Strings": [
							645
						]
					},
					"id": 417,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 1007,
							"src": "165:115:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 416,
							"linearizedBaseContracts": [
								416
							],
							"name": "DNG",
							"nameLocation": "293:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 5,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "319:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "304:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "304:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653132",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 9,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "380:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "344:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "353:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "344:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "364:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 15,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "453:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "396:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "405:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "396:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 13,
											"keyType": {
												"id": 11,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "416:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "dataStorage",
									"nameLocation": "582:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "547:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
										"typeString": "mapping(bytes32 => bytes)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "556:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "547:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
											"typeString": "mapping(bytes32 => bytes)"
										},
										"valueType": {
											"id": 17,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "567:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "data2",
									"nameLocation": "634:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "600:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
										"typeString": "mapping(bytes32 => bytes)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "608:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "600:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
											"typeString": "mapping(bytes32 => bytes)"
										},
										"valueType": {
											"id": 21,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "619:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "dataHash",
									"nameLocation": "662:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "646:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 24,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "Transfer",
									"nameLocation": "704:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "713:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "751:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "735:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "763:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "755:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:57:0"
									},
									"src": "698:72:0"
								},
								{
									"anonymous": false,
									"id": 41,
									"name": "Approval",
									"nameLocation": "782:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "807:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "791:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "814:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:63:0"
									},
									"src": "776:78:0"
								},
								{
									"anonymous": false,
									"id": 47,
									"name": "StoreData",
									"nameLocation": "866:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "876:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "899:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:49:0"
									},
									"src": "860:65:0"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "978:54:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 50,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "989:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 53,
														"indexExpression": {
															"expression": {
																"id": 51,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "999:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "999:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "989:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1013:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "989:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "989:35:0"
											}
										]
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:0"
									},
									"scope": 416,
									"src": "957:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1113:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 68,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1132:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 71,
																	"indexExpression": {
																		"expression": {
																			"id": 69,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1142:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1142:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1132:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 72,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1157:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1132:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 74,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1167:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1132:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1179:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1124:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1124:78:0"
											},
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 81,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1213:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 84,
														"indexExpression": {
															"expression": {
																"id": 82,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1223:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1223:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1213:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 85,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1238:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1213:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1213:31:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 88,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1255:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 90,
														"indexExpression": {
															"id": 89,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1265:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1255:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 91,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1273:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1255:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1255:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1304:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1304:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 97,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1316:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 94,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1295:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1290:38:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 66,
												"id": 102,
												"nodeType": "Return",
												"src": "1339:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1053:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1070:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1062:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:29:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:6:0"
									},
									"scope": 416,
									"src": "1044:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1443:135:0",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 113,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1454:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 117,
															"indexExpression": {
																"expression": {
																	"id": 114,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1464:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1464:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1454:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 118,
														"indexExpression": {
															"id": 116,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1476:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1454:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1488:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1454:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1454:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1519:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1519:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1531:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1541:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1510:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1510:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "1505:43:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1566:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 112,
												"id": 130,
												"nodeType": "Return",
												"src": "1559:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1379:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1395:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1387:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1405:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:34:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1437:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1436:6:0"
									},
									"scope": 416,
									"src": "1370:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1670:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 141,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 143,
														"indexExpression": {
															"id": 142,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1688:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 145,
													"indexExpression": {
														"id": 144,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1706:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1688:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 146,
												"nodeType": "Return",
												"src": "1681:34:0"
											}
										]
									},
									"functionSelector": "d8218148",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance2",
									"nameLocation": "1595:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1614:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1630:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1622:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:34:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 416,
									"src": "1586:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1823:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 160,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1842:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 162,
																	"indexExpression": {
																		"id": 161,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "1852:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1842:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 163,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1862:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1842:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 165,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "1872:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 167,
																		"indexExpression": {
																			"id": 166,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1882:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1872:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 170,
																	"indexExpression": {
																		"expression": {
																			"id": 168,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1889:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1889:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1872:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 171,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1904:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1872:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1842:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e6365",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603",
																"typeString": "literal_string \"Insufficient balance or allowance\""
															},
															"value": "Insufficient balance or allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42f449660ffb3aec83881d8609ac21da772d54f90dbb1c51a510d67b777a1603",
																"typeString": "literal_string \"Insufficient balance or allowance\""
															}
														],
														"id": 159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1834:114:0"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 177,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1959:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 179,
														"indexExpression": {
															"id": 178,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1959:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 180,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1979:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1959:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1959:26:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 183,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1996:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 185,
														"indexExpression": {
															"id": 184,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2006:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1996:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 186,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2014:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1996:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1996:24:0"
											},
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 189,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2031:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 193,
															"indexExpression": {
																"id": 190,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2041:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2031:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 194,
														"indexExpression": {
															"expression": {
																"id": 191,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2048:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2048:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2031:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 195,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2063:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2031:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2031:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 199,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2094:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 200,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2101:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "EmitStatement",
												"src": "2080:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 158,
												"id": 205,
												"nodeType": "Return",
												"src": "2124:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1744:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1765:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1757:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1780:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1772:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1793:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1785:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:44:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1816:6:0"
									},
									"scope": 416,
									"src": "1735:408:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2225:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 217,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "2244:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 219,
																"indexExpression": {
																	"id": 218,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2254:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2244:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 220,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2264:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2244:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e6365",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															},
															"value": "Not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2236:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 226,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "2312:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 228,
																	"indexExpression": {
																		"id": 227,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2312:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 231,
																"indexExpression": {
																	"expression": {
																		"id": 229,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2329:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2329:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2312:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 232,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2344:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2312:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820616c6c6f77616e6365",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2352:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
																"typeString": "literal_string \"Not enough allowance\""
															},
															"value": "Not enough allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b022b055ca598d53dea4e2d13bd2864e05a62be10c287a4dddfb651804a110cc",
																"typeString": "literal_string \"Not enough allowance\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "2304:71:0"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 237,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2386:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 239,
														"indexExpression": {
															"id": 238,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2386:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 240,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2406:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2386:26:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 243,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2423:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 247,
															"indexExpression": {
																"id": 244,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2433:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2423:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 248,
														"indexExpression": {
															"expression": {
																"id": 245,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2440:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2440:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2423:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 249,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2455:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2423:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2423:38:0"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 252,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2472:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "2482:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2472:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 255,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2490:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2472:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2472:24:0"
											}
										]
									},
									"functionSelector": "6c12ed28",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom2",
									"nameLocation": "2160:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2197:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2189:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:44:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:0:0"
									},
									"scope": 416,
									"src": "2151:353:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2804:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 267,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "2823:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10485760_by_1",
																	"typeString": "int_const 10485760"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_10240_by_1",
																		"typeString": "int_const 10240"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2838:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31303234",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2843:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1024_by_1",
																			"typeString": "int_const 1024"
																		},
																		"value": "1024"
																	},
																	"src": "2838:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10240_by_1",
																		"typeString": "int_const 10240"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303234",
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2850:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024_by_1",
																		"typeString": "int_const 1024"
																	},
																	"value": "1024"
																},
																"src": "2838:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10485760_by_1",
																	"typeString": "int_const 10485760"
																}
															},
															"src": "2823:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446174612073697a65206578636565647320746865206c696d6974206f662031304d42",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2856:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
																"typeString": "literal_string \"Data size exceeds the limit of 10MB\""
															},
															"value": "Data size exceeds the limit of 10MB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
																"typeString": "literal_string \"Data size exceeds the limit of 10MB\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "2815:79:0"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 278,
															"name": "dataStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2905:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
																"typeString": "mapping(bytes32 => bytes storage ref)"
															}
														},
														"id": 280,
														"indexExpression": {
															"id": 279,
															"name": "dataHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2917:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2905:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2929:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "2905:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2905:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 285,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2959:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "dataHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 284,
														"name": "StoreData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2949:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2949:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "EmitStatement",
												"src": "2944:36:0"
											}
										]
									},
									"functionSelector": "8bd40c3b",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeData2",
									"nameLocation": "2749:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2773:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2760:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2760:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2787:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2779:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:37:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2804:0:0"
									},
									"scope": 416,
									"src": "2740:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3042:87:0",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "dataHash",
														"nameLocation": "3061:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "3053:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 296,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [
														{
															"id": 299,
															"name": "_data2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3079:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "3072:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3072:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3053:33:0"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 302,
															"name": "data2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "3097:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
																"typeString": "mapping(bytes32 => bytes storage ref)"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "dataHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3103:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3097:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 305,
														"name": "_data2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3115:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "3097:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3097:24:0"
											}
										]
									},
									"functionSelector": "6377fc8b",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeData3",
									"nameLocation": "3003:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_data2",
												"nameLocation": "3027:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3014:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3014:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3013:21:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3042:0:0"
									},
									"scope": 416,
									"src": "2994:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3182:447:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 315,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "3201:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3201:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10485760_by_1",
																	"typeString": "int_const 10485760"
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_10240_by_1",
																		"typeString": "int_const 10240"
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3216:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31303234",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3221:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1024_by_1",
																			"typeString": "int_const 1024"
																		},
																		"value": "1024"
																	},
																	"src": "3216:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10240_by_1",
																		"typeString": "int_const 10240"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303234",
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3228:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024_by_1",
																		"typeString": "int_const 1024"
																	},
																	"value": "1024"
																},
																"src": "3216:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10485760_by_1",
																	"typeString": "int_const 10485760"
																}
															},
															"src": "3201:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446174612073697a65206578636565647320746865206c696d6974206f662031304d42",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3234:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
																"typeString": "literal_string \"Data size exceeds the limit of 10MB\""
															},
															"value": "Data size exceeds the limit of 10MB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96cd42990cbe605788c0756651514d55091d4703c8306642df32dcf782744457",
																"typeString": "literal_string \"Data size exceeds the limit of 10MB\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "3193:79:0"
											},
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "binaryData",
														"nameLocation": "3321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "3313:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 326,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"arguments": [
														{
															"id": 330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 328,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3334:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3313:34:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "encodedData",
														"nameLocation": "3401:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "3388:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3388:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"arguments": [
														{
															"id": 337,
															"name": "binaryData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3432:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 335,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3415:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "3415:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3415:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3388:55:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 340,
														"name": "binaryData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "3454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 342,
																"name": "encodedData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "3477:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 341,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3467:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3454:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "3454:35:0"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "dataHash",
														"nameLocation": "3553:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "3545:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 346,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"id": 348,
													"name": "binaryData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "3564:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3545:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 351,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3600:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3600:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "dataHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3612:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 350,
														"name": "StoreData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "3590:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3590:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "3585:36:0"
											}
										]
									},
									"functionSelector": "ac5c8535",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeData",
									"nameLocation": "3146:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3156:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:19:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:0:0"
									},
									"scope": 416,
									"src": "3137:492:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3681:159:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 363,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "3700:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3700:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130343835373630",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3715:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10485760_by_1",
																	"typeString": "int_const 10485760"
																},
																"value": "10485760"
															},
															"src": "3700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446174612073697a6520657863656564732031304d42206c696d6974",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507",
																"typeString": "literal_string \"Data size exceeds 10MB limit\""
															},
															"value": "Data size exceeds 10MB limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc70beb08c9b8718f09f3df6ada42a6fb8f537db3d4ed13aaef24d0662374507",
																"typeString": "literal_string \"Data size exceeds 10MB limit\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3692:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "3692:64:0"
											},
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "dataHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3767:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 372,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3788:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 371,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3778:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3778:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3767:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3767:26:0"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 376,
															"name": "dataStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "3804:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
																"typeString": "mapping(bytes32 => bytes storage ref)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 377,
															"name": "dataHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3816:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3804:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 379,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3828:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "3804:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3804:28:0"
											}
										]
									},
									"functionSelector": "69cef46c",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uploadData",
									"nameLocation": "3644:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3655:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3655:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:19:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3681:0:0"
									},
									"scope": 416,
									"src": "3635:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "3901:34:0",
										"statements": [
											{
												"expression": {
													"id": 388,
													"name": "dataHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "3919:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 387,
												"id": 389,
												"nodeType": "Return",
												"src": "3912:15:0"
											}
										]
									},
									"functionSelector": "a4da2290",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDataHash",
									"nameLocation": "3857:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3868:2:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "3892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:9:0"
									},
									"scope": 416,
									"src": "3848:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "4009:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 398,
														"name": "dataStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "4027:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
															"typeString": "mapping(bytes32 => bytes storage ref)"
														}
													},
													"id": 400,
													"indexExpression": {
														"id": 399,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "4039:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4027:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"functionReturnParameters": 397,
												"id": 401,
												"nodeType": "Return",
												"src": "4020:24:0"
											}
										]
									},
									"functionSelector": "54f6127f",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "3952:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3968:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3960:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3959:14:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3995:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:14:0"
									},
									"scope": 416,
									"src": "3943:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "4135:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 410,
														"name": "data2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "4153:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
															"typeString": "mapping(bytes32 => bytes storage ref)"
														}
													},
													"id": 412,
													"indexExpression": {
														"id": 411,
														"name": "_dataHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4159:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4153:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"functionReturnParameters": 409,
												"id": 413,
												"nodeType": "Return",
												"src": "4146:23:0"
											}
										]
									},
									"functionSelector": "965d68d9",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData2",
									"nameLocation": "4072:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_dataHash",
												"nameLocation": "4089:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "4081:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4080:19:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "4121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4120:14:0"
									},
									"scope": 416,
									"src": "4063:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 417,
							"src": "284:3898:0",
							"usedErrors": []
						}
					],
					"src": "37:6099:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1872
						],
						"SignedMath": [
							1977
						],
						"Strings": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1873,
							"src": "126:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 1978,
							"src": "152:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "Strings",
							"nameLocation": "228:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 424,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "242:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 422,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 427,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "302:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 425,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "518:625:1",
										"statements": [
											{
												"id": 473,
												"nodeType": "UncheckedBlock",
												"src": "528:609:1",
												"statements": [
													{
														"assignments": [
															436
														],
														"declarations": [
															{
																"constant": false,
																"id": 436,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 473,
																"src": "552:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 443,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "580:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 437,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1872_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1709,
																	"src": "569:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:1"
													},
													{
														"assignments": [
															445
														],
														"declarations": [
															{
																"constant": false,
																"id": 445,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 473,
																"src": "604:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 444,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 450,
														"initialValue": {
															"arguments": [
																{
																	"id": 448,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "638:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 446,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:1"
													},
													{
														"assignments": [
															452
														],
														"declarations": [
															{
																"constant": false,
																"id": 452,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 473,
																"src": "659:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 453,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 445,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:1",
																"valueSize": 1
															},
															{
																"declaration": 436,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:1",
																"valueSize": 1
															},
															{
																"declaration": 452,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:1",
																"valueSize": 1
															}
														],
														"id": 454,
														"nodeType": "InlineAssembly",
														"src": "731:76:1"
													},
													{
														"body": {
															"id": 469,
															"nodeType": "Block",
															"src": "833:267:1",
															"statements": [
																{
																	"expression": {
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:1",
																		"subExpression": {
																			"id": 456,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 452,
																			"src": "851:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 458,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:1"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:1"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 424,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 452,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 430,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 459,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:1"
																},
																{
																	"expression": {
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 460,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 430,
																			"src": "1035:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 463,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 430,
																			"src": "1068:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 468,
																	"nodeType": "IfStatement",
																	"src": "1064:21:1",
																	"trueBody": {
																		"id": 467,
																		"nodeType": "Break",
																		"src": "1080:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 470,
														"nodeType": "WhileStatement",
														"src": "820:280:1"
													},
													{
														"expression": {
															"id": 471,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "1120:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 434,
														"id": 472,
														"nodeType": "Return",
														"src": "1113:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "503:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:1"
									},
									"scope": 645,
									"src": "447:696:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "1313:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "1354:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:1",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 496,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 478,
																					"src": "1400:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 494,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1977,
																					"src": "1385:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1977_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1976,
																				"src": "1385:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 493,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			475,
																			503
																		],
																		"referencedDeclaration": 475,
																		"src": "1376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 485,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 483,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 501,
												"nodeType": "Return",
												"src": "1323:86:1"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1261:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1298:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:1"
									},
									"scope": 645,
									"src": "1243:173:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "1595:100:1",
										"statements": [
											{
												"id": 521,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 512,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "1648:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 515,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "1667:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 513,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1872,
																				"src": "1655:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1872_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1832,
																			"src": "1655:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 511,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	523,
																	599,
																	619
																],
																"referencedDeclaration": 599,
																"src": "1636:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 510,
														"id": 520,
														"nodeType": "Return",
														"src": "1629:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1580:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:1"
									},
									"scope": 645,
									"src": "1521:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "1908:347:1",
										"statements": [
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "1918:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 533,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 543,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 538,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "1954:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:1"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 544,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "1975:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 546,
														"indexExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:1"
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 550,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "2000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 552,
														"indexExpression": {
															"hexValue": "31",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:1"
											},
											{
												"body": {
													"id": 584,
													"nodeType": "Block",
													"src": "2070:83:1",
													"statements": [
														{
															"expression": {
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 570,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "2084:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 572,
																	"indexExpression": {
																		"id": 571,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "2091:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 573,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2096:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 577,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "2105:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:1"
														},
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "2131:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2058:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"initializationExpression": {
													"assignments": [
														557
													],
													"declarations": [
														{
															"constant": false,
															"id": 557,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 585,
															"src": "2030:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 556,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 563,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 559,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2046:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:1"
												},
												"loopExpression": {
													"expression": {
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:1",
														"subExpression": {
															"id": 567,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "2067:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 569,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 587,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2170:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 595,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "2241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 593,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 597,
												"nodeType": "Return",
												"src": "2227:21:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1839:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1893:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:1"
									},
									"scope": 645,
									"src": "1818:437:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "2480:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 612,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "2525:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 610,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 615,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2533:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 607,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															523,
															599,
															619
														],
														"referencedDeclaration": 599,
														"src": "2497:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 606,
												"id": 617,
												"nodeType": "Return",
												"src": "2490:59:1"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:1"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"scope": 645,
									"src": "2407:149:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "2711:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 632,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "2744:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 629,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 638,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "2767:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 635,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 628,
												"id": 642,
												"nodeType": "Return",
												"src": "2721:49:1"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2648:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2665:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:1"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2705:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:1"
									},
									"scope": 645,
									"src": "2633:144:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 646,
							"src": "220:2559:1",
							"usedErrors": []
						}
					],
					"src": "101:2679:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1006
						],
						"Math": [
							1872
						],
						"SignedMath": [
							1977
						],
						"Strings": [
							645
						]
					},
					"id": 1007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1007,
							"sourceUnit": 646,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1006,
							"linearizedBaseContracts": [
								1006
							],
							"name": "ECDSA",
							"nameLocation": "377:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 655,
									"members": [
										{
											"id": 650,
											"name": "NoError",
											"nameLocation": "417:7:2",
											"nodeType": "EnumValue",
											"src": "417:7:2"
										},
										{
											"id": 651,
											"name": "InvalidSignature",
											"nameLocation": "434:16:2",
											"nodeType": "EnumValue",
											"src": "434:16:2"
										},
										{
											"id": 652,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:2",
											"nodeType": "EnumValue",
											"src": "460:22:2"
										},
										{
											"id": 653,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:2",
											"nodeType": "EnumValue",
											"src": "492:17:2"
										},
										{
											"id": 654,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:2",
											"nodeType": "EnumValue",
											"src": "519:17:2"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:2",
									"nodeType": "EnumDefinition",
									"src": "389:175:2"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "624:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$655",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "638:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 662,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "647:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "647:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 667,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "734:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 668,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "743:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "743:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 676,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "843:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$655",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 677,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "852:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 652,
																"src": "852:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$655",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$655",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 685,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "965:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$655",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 686,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "974:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 653,
																	"src": "974:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$655",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 694,
															"nodeType": "IfStatement",
															"src": "961:114:2",
															"trueBody": {
																"id": 693,
																"nodeType": "Block",
																"src": "1006:69:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 689,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 692,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:2"
																	}
																]
															}
														},
														"id": 695,
														"nodeType": "IfStatement",
														"src": "839:236:2",
														"trueBody": {
															"id": 684,
															"nodeType": "Block",
															"src": "889:66:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 680,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:2"
																}
															]
														}
													},
													"id": 696,
													"nodeType": "IfStatement",
													"src": "730:345:2",
													"trueBody": {
														"id": 675,
														"nodeType": "Block",
														"src": "774:59:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 671,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 674,
																"nodeType": "ExpressionStatement",
																"src": "788:34:2"
															}
														]
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "634:441:2",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "669:55:2",
													"statements": [
														{
															"functionReturnParameters": 660,
															"id": 665,
															"nodeType": "Return",
															"src": "683:7:2"
														}
													]
												}
											}
										]
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "591:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$655",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 655,
														"src": "591:12:2"
													},
													"referencedDeclaration": 655,
													"src": "591:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$655",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:2"
									},
									"scope": 1006,
									"src": "570:511:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "2249:626:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "2263:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "2788:81:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 734,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 738,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "2822:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 652,
																		"src": "2822:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$655",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 711,
															"id": 741,
															"nodeType": "Return",
															"src": "2802:56:2"
														}
													]
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "2259:610:2",
												"trueBody": {
													"id": 733,
													"nodeType": "Block",
													"src": "2287:495:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 733,
																	"src": "2301:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 718,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:2"
														},
														{
															"assignments": [
																720
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 720,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 733,
																	"src": "2324:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 721,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:2"
														},
														{
															"assignments": [
																723
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 723,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 733,
																	"src": "2347:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 722,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 724,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:2"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:2"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 717,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 720,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 704,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 704,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 704,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 723,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:2",
																	"valueSize": 1
																}
															],
															"id": 725,
															"nodeType": "InlineAssembly",
															"src": "2546:180:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 727,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "2757:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 728,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "2763:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 729,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "2766:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 730,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "2769:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 726,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		745,
																		819,
																		913
																	],
																	"referencedDeclaration": 913,
																	"src": "2746:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$655_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 711,
															"id": 732,
															"nodeType": "Return",
															"src": "2739:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2179:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2226:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2235:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$655",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 655,
														"src": "2235:12:2"
													},
													"referencedDeclaration": 655,
													"src": "2235:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$655",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:2"
									},
									"scope": 1006,
									"src": "2145:730:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "3748:140:2",
										"statements": [
											{
												"assignments": [
													756,
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "3759:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 755,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "3778:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 758,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 757,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 655,
																"src": "3778:12:2"
															},
															"referencedDeclaration": 655,
															"src": "3778:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 761,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3811:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 762,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "3817:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 760,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															745,
															819,
															913
														],
														"referencedDeclaration": 745,
														"src": "3800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$655_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3849:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 765,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "3837:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$655_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:2"
											},
											{
												"expression": {
													"id": 769,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 756,
													"src": "3872:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 754,
												"id": 770,
												"nodeType": "Return",
												"src": "3865:16:2"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "3678:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 747,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "3692:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "3739:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:2"
									},
									"scope": 1006,
									"src": "3661:227:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "4245:203:2",
										"statements": [
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4263:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "4255:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 787,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 789,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4267:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4280:66:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4272:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 790,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4272:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4272:75:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4267:80:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:92:2"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4363:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "4357:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 796,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4357:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 802,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "4382:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4374:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 800,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4374:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4374:11:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4389:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4374:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4373:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4396:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4373:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4367:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 798,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4367:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4357:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4427:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 813,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "4433:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 814,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4436:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 815,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4439:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 811,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															745,
															819,
															913
														],
														"referencedDeclaration": 913,
														"src": "4416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$655_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 786,
												"id": 817,
												"nodeType": "Return",
												"src": "4409:32:2"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4170:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4162:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4184:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4176:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 776,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4195:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4187:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:37:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4222:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "4231:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$655",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 783,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 655,
														"src": "4231:12:2"
													},
													"referencedDeclaration": 655,
													"src": "4231:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$655",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:23:2"
									},
									"scope": 1006,
									"src": "4142:306:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "4699:136:2",
										"statements": [
											{
												"assignments": [
													832,
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4718:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 848,
														"src": "4710:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4742:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 848,
														"src": "4729:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 833,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 655,
																"src": "4729:12:2"
															},
															"referencedDeclaration": 655,
															"src": "4729:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [
														{
															"id": 837,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4762:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 838,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4768:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 839,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "4771:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 836,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															745,
															819,
															913
														],
														"referencedDeclaration": 819,
														"src": "4751:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$655_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4796:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 842,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "4784:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$655_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4784:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4784:18:2"
											},
											{
												"expression": {
													"id": 846,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "4819:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 830,
												"id": 847,
												"nodeType": "Return",
												"src": "4812:16:2"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "4454:154:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4622:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4638:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4630:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 821,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4644:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 823,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4663:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4655:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:37:2"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4690:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:2"
									},
									"scope": 1006,
									"src": "4613:222:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "5120:1345:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 868,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "6016:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6008:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 866,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6008:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6008:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6008:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "6004:161:2",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "6089:76:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6119:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6111:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 872,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6111:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6111:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 876,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "6123:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 653,
																		"src": "6123:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$655",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6110:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 865,
															"id": 879,
															"nodeType": "Return",
															"src": "6103:51:2"
														}
													]
												}
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6267:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "6259:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6259:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"id": 885,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "6286:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 886,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "6292:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 887,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6295:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 888,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6298:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 884,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6276:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6259:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6314:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6332:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6324:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 892,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6324:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6324:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6314:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "6310:101:2",
												"trueBody": {
													"id": 905,
													"nodeType": "Block",
													"src": "6336:75:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6366:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6358:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6358:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6358:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 901,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "6370:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 651,
																		"src": "6370:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$655",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6357:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 865,
															"id": 904,
															"nodeType": "Return",
															"src": "6350:50:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 907,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "6429:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 908,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "6437:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$655_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 650,
															"src": "6437:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 910,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6428:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 865,
												"id": 911,
												"nodeType": "Return",
												"src": "6421:37:2"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "4841:163:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5018:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5037:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5029:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5049:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5043:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 853,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5060:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5052:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:45:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5106:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$655",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 862,
														"name": "RecoverError",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 655,
														"src": "5106:12:2"
													},
													"referencedDeclaration": 655,
													"src": "5106:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$655",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:23:2"
									},
									"scope": 1006,
									"src": "5009:1456:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "6692:138:2",
										"statements": [
											{
												"assignments": [
													928,
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6711:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "6703:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6735:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "6722:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$655",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 930,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 929,
																"name": "RecoverError",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 655,
																"src": "6722:12:2"
															},
															"referencedDeclaration": 655,
															"src": "6722:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"id": 933,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "6755:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 934,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "6761:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 935,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "6764:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 936,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "6767:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 932,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															745,
															819,
															913
														],
														"referencedDeclaration": 913,
														"src": "6744:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$655_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$655_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "6791:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$655",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 939,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "6779:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$655_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "6779:18:2"
											},
											{
												"expression": {
													"id": 943,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "6814:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 926,
												"id": 944,
												"nodeType": "Return",
												"src": "6807:16:2"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "6471:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6607:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6623:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "6615:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 915,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6635:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "6629:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 917,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6629:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6646:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "6638:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6657:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "6649:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 921,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:45:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "6683:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:9:2"
									},
									"scope": 1006,
									"src": "6598:232:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "7198:187:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7336:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 958,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "7372:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 955,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7319:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7319:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7319:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7309:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7309:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 953,
												"id": 961,
												"nodeType": "Return",
												"src": "7302:76:2"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "6836:279:2",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7129:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7160:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7152:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 948,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:14:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7189:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:9:2"
									},
									"scope": 1006,
									"src": "7120:265:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "7750:116:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7794:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 977,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "7845:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7845:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 975,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "7828:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$645_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 475,
																		"src": "7828:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7828:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 980,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "7856:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 972,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7777:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7777:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7777:81:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 971,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7767:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7767:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 970,
												"id": 983,
												"nodeType": "Return",
												"src": "7760:99:2"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "7391:274:2",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7679:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7715:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "7702:14:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7702:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7701:16:2"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "7741:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 968,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7741:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7740:9:2"
									},
									"scope": 1006,
									"src": "7670:196:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "8307:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8351:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 999,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "8363:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1000,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "8380:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 996,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8334:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8334:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 995,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8324:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 994,
												"id": 1003,
												"nodeType": "Return",
												"src": "8317:75:2"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "7872:328:2",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8214:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8238:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "8230:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 987,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8263:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "8255:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 989,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:45:2"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "8298:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:9:2"
									},
									"scope": 1006,
									"src": "8205:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1007,
							"src": "369:8032:2",
							"usedErrors": []
						}
					],
					"src": "112:8290:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1008,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1009,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "Math",
							"nameLocation": "210:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1013,
									"members": [
										{
											"id": 1010,
											"name": "Down",
											"nameLocation": "245:4:3",
											"nodeType": "EnumValue",
											"src": "245:4:3"
										},
										{
											"id": 1011,
											"name": "Up",
											"nameLocation": "287:2:3",
											"nodeType": "EnumValue",
											"src": "287:2:3"
										},
										{
											"id": 1012,
											"name": "Zero",
											"nameLocation": "318:4:3",
											"nodeType": "EnumValue",
											"src": "318:4:3"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:3",
									"nodeType": "EnumDefinition",
									"src": "221:122:3"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "480:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "497:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1024,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "501:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1027,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "509:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:3",
													"trueExpression": {
														"id": 1026,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "505:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1029,
												"nodeType": "Return",
												"src": "490:20:3"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "426:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "437:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:3"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "471:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:3"
									},
									"scope": 1872,
									"src": "413:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "655:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1041,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "672:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1042,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "676:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1045,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "684:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:3",
													"trueExpression": {
														"id": 1044,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "680:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1047,
												"nodeType": "Return",
												"src": "665:20:3"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "612:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:3"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "646:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:3"
									},
									"scope": 1872,
									"src": "588:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "876:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1059,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "931:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1060,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "935:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1062,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1063,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "941:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1064,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "945:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1066,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1070,
												"nodeType": "Return",
												"src": "923:28:3"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "822:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "833:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:3"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "867:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:3"
									},
									"scope": 1872,
									"src": "805:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1228:123:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1082,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "1316:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1086,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1075,
																			"src": "1330:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1089,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1090,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "1339:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:3",
													"trueExpression": {
														"hexValue": "30",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1095,
												"nodeType": "Return",
												"src": "1309:35:3"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1174:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1185:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:3"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1219:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:3"
									},
									"scope": 1872,
									"src": "1157:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1765:3822:3",
										"statements": [
											{
												"id": 1218,
												"nodeType": "UncheckedBlock",
												"src": "1775:3806:3",
												"statements": [
													{
														"assignments": [
															1110
														],
														"declarations": [
															{
																"constant": false,
																"id": 1110,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "2096:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1111,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:3"
													},
													{
														"assignments": [
															1113
														],
														"declarations": [
															{
																"constant": false,
																"id": 1113,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "2168:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1112,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1114,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:3"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:3"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1113,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1100,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:3",
																"valueSize": 1
															},
															{
																"declaration": 1100,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:3",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:3",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:3",
																"valueSize": 1
															}
														],
														"id": 1115,
														"nodeType": "InlineAssembly",
														"src": "2239:166:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "2486:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1124,
														"nodeType": "IfStatement",
														"src": "2482:75:3",
														"trueBody": {
															"id": 1123,
															"nodeType": "Block",
															"src": "2498:59:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1119,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "2523:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1120,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "2531:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2523:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1108,
																	"id": 1122,
																	"nodeType": "Return",
																	"src": "2516:26:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1126,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "2667:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1127,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2681:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2667:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2688:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1125,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2659:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2659:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1131,
														"nodeType": "ExpressionStatement",
														"src": "2659:53:3"
													},
													{
														"assignments": [
															1133
														],
														"declarations": [
															{
																"constant": false,
																"id": 1133,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2976:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "2968:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2968:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1134,
														"nodeType": "VariableDeclarationStatement",
														"src": "2968:17:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3008:291:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3077:38:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3097:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3100:1:3"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3103:11:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3090:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3090:25:3"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3077:9:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3197:41:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3210:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3220:9:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3231:5:3"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3217:20:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:32:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3197:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3255:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3268:5:3"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:21:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3255:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1104,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:11:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "3231:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "3255:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "3268:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1113,
																"isOffset": false,
																"isSlot": false,
																"src": "3197:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1113,
																"isOffset": false,
																"isSlot": false,
																"src": "3210:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1133,
																"isOffset": false,
																"isSlot": false,
																"src": "3077:9:3",
																"valueSize": 1
															},
															{
																"declaration": 1133,
																"isOffset": false,
																"isSlot": false,
																"src": "3220:9:3",
																"valueSize": 1
															},
															{
																"declaration": 1133,
																"isOffset": false,
																"isSlot": false,
																"src": "3275:9:3",
																"valueSize": 1
															},
															{
																"declaration": 1100,
																"isOffset": false,
																"isSlot": false,
																"src": "3097:1:3",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "3100:1:3",
																"valueSize": 1
															}
														],
														"id": 1135,
														"nodeType": "InlineAssembly",
														"src": "2999:300:3"
													},
													{
														"assignments": [
															1137
														],
														"declarations": [
															{
																"constant": false,
																"id": 1137,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3614:4:3",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "3606:12:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1136,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3606:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1145,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "3621:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3636:12:3",
																			"subExpression": {
																				"id": 1139,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "3637:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3651:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3636:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3635:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3621:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3606:47:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3676:362:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3741:37:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3760:11:3"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3773:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3756:22:3"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3741:11:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3845:25:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3858:5:3"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3865:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:16:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3845:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3985:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4005:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4008:4:3"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4001:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4001:12:3"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4015:4:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:23:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3993:31:3"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3985:4:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1104,
																"isOffset": false,
																"isSlot": false,
																"src": "3741:11:3",
																"valueSize": 1
															},
															{
																"declaration": 1104,
																"isOffset": false,
																"isSlot": false,
																"src": "3760:11:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "3845:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1110,
																"isOffset": false,
																"isSlot": false,
																"src": "3858:5:3",
																"valueSize": 1
															},
															{
																"declaration": 1137,
																"isOffset": false,
																"isSlot": false,
																"src": "3773:4:3",
																"valueSize": 1
															},
															{
																"declaration": 1137,
																"isOffset": false,
																"isSlot": false,
																"src": "3865:4:3",
																"valueSize": 1
															},
															{
																"declaration": 1137,
																"isOffset": false,
																"isSlot": false,
																"src": "3985:4:3",
																"valueSize": 1
															},
															{
																"declaration": 1137,
																"isOffset": false,
																"isSlot": false,
																"src": "4008:4:3",
																"valueSize": 1
															},
															{
																"declaration": 1137,
																"isOffset": false,
																"isSlot": false,
																"src": "4015:4:3",
																"valueSize": 1
															}
														],
														"id": 1146,
														"nodeType": "InlineAssembly",
														"src": "3667:371:3"
													},
													{
														"expression": {
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1147,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "4104:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4113:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1149,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4121:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4113:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4104:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1152,
														"nodeType": "ExpressionStatement",
														"src": "4104:21:3"
													},
													{
														"assignments": [
															1154
														],
														"declarations": [
															{
																"constant": false,
																"id": 1154,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4451:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "4443:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1153,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4443:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1161,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4462:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1156,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "4466:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4462:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4461:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4481:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4461:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4443:39:3"
													},
													{
														"expression": {
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4699:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4710:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4714:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "4728:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4714:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4710:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4699:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1169,
														"nodeType": "ExpressionStatement",
														"src": "4699:36:3"
													},
													{
														"expression": {
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4768:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4779:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4783:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "4797:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4783:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4779:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4768:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1177,
														"nodeType": "ExpressionStatement",
														"src": "4768:36:3"
													},
													{
														"expression": {
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4838:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4849:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4853:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "4867:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4853:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4849:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4838:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "4838:36:3"
													},
													{
														"expression": {
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4908:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4919:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4923:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "4937:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4923:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4919:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4908:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1193,
														"nodeType": "ExpressionStatement",
														"src": "4908:36:3"
													},
													{
														"expression": {
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4978:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4989:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4993:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "5007:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4993:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4989:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4978:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1201,
														"nodeType": "ExpressionStatement",
														"src": "4978:36:3"
													},
													{
														"expression": {
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1202,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "5049:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5060:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1204,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "5064:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1205,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "5078:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5064:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5060:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5049:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1209,
														"nodeType": "ExpressionStatement",
														"src": "5049:36:3"
													},
													{
														"expression": {
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1210,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "5519:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1211,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "5528:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1212,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "5536:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5528:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5519:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1215,
														"nodeType": "ExpressionStatement",
														"src": "5519:24:3"
													},
													{
														"expression": {
															"id": 1216,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "5564:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1108,
														"id": 1217,
														"nodeType": "Return",
														"src": "5557:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:3",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1683:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1694:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1705:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:3"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1749:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:3"
									},
									"scope": 1872,
									"src": "1667:3920:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5829:189:3",
										"statements": [
											{
												"assignments": [
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5847:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "5839:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5839:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"arguments": [
														{
															"id": 1238,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "5863:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1239,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "5866:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1240,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5869:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1237,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1220,
															1264
														],
														"referencedDeclaration": 1220,
														"src": "5856:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5839:42:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1013",
															"typeString": "enum Math.Rounding"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1243,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "5895:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1013",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1244,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "5907:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1013_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1011,
															"src": "5907:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1013",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5895:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1248,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "5929:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1249,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "5932:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1250,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "5935:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1247,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5922:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5922:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5950:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5922:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5895:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "5891:98:3",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "5953:36:3",
													"statements": [
														{
															"expression": {
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1255,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "5967:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5977:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5967:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "5967:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1261,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1236,
													"src": "6005:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1262,
												"nodeType": "Return",
												"src": "5998:13:3"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "5593:121:3",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5728:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5743:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5735:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5754:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5746:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5765:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5757:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5787:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5778:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1013",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1228,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1013,
														"src": "5778:8:3"
													},
													"referencedDeclaration": 1013,
													"src": "5778:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1013",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5734:62:3"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5819:9:3"
									},
									"scope": 1872,
									"src": "5719:299:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "6294:1585:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1272,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "6308:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6313:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6308:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "6304:45:3",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "6316:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6337:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1271,
															"id": 1276,
															"nodeType": "Return",
															"src": "6330:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7036:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7028:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7045:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1283,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "7056:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1282,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1544,
																			1580
																		],
																		"referencedDeclaration": 1544,
																		"src": "7051:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7051:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7062:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7051:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1287,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7050:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:36:3"
											},
											{
												"id": 1374,
												"nodeType": "UncheckedBlock",
												"src": "7465:408:3",
												"statements": [
													{
														"expression": {
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1290,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7489:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1291,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7499:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1292,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7508:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1293,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7512:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7508:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7499:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1296,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7498:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7523:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7498:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7489:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1300,
														"nodeType": "ExpressionStatement",
														"src": "7489:35:3"
													},
													{
														"expression": {
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1301,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7538:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1302,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7548:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1303,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7557:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1304,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7561:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7557:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7548:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1307,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7547:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7572:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7547:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7538:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1311,
														"nodeType": "ExpressionStatement",
														"src": "7538:35:3"
													},
													{
														"expression": {
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1312,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7587:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1313,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7597:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1314,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7606:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1315,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7610:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7606:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7597:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7596:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7596:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7587:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1322,
														"nodeType": "ExpressionStatement",
														"src": "7587:35:3"
													},
													{
														"expression": {
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1323,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7636:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1324,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7646:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1325,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7655:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1326,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7659:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7655:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7646:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7645:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7670:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7645:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7636:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1333,
														"nodeType": "ExpressionStatement",
														"src": "7636:35:3"
													},
													{
														"expression": {
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1334,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7685:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1335,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7695:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1336,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7704:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1337,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7708:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7704:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7695:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1340,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7694:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7719:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7694:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7685:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1344,
														"nodeType": "ExpressionStatement",
														"src": "7685:35:3"
													},
													{
														"expression": {
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1345,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7734:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1346,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7744:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1347,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7753:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1348,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7757:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7753:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7744:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1351,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7768:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7743:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7734:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1355,
														"nodeType": "ExpressionStatement",
														"src": "7734:35:3"
													},
													{
														"expression": {
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "7783:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1357,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "7793:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1358,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1267,
																					"src": "7802:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1359,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7806:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7802:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7793:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1362,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7792:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7817:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7792:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7783:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1366,
														"nodeType": "ExpressionStatement",
														"src": "7783:35:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1368,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7843:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1369,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "7851:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1370,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "7855:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7851:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1367,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "7839:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7839:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1271,
														"id": 1373,
														"nodeType": "Return",
														"src": "7832:30:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "6024:208:3",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6246:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6259:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6251:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6251:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:11:3"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6285:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6284:9:3"
									},
									"scope": 1872,
									"src": "6237:1642:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "8055:161:3",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "8065:145:3",
												"statements": [
													{
														"assignments": [
															1388
														],
														"declarations": [
															{
																"constant": false,
																"id": 1388,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8097:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1410,
																"src": "8089:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8089:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1392,
														"initialValue": {
															"arguments": [
																{
																	"id": 1390,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "8111:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1389,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1376,
																	1412
																],
																"referencedDeclaration": 1376,
																"src": "8106:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8106:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8089:24:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "8134:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1013",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1394,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1382,
																					"src": "8144:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1395,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "8156:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1013_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1011,
																					"src": "8156:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8144:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1398,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1388,
																						"src": "8171:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1399,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1388,
																						"src": "8180:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8171:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1401,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "8189:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8171:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8144:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8197:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8144:54:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8193:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8143:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8134:65:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1386,
														"id": 1409,
														"nodeType": "Return",
														"src": "8127:72:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "7885:89:3",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7988:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8001:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "7993:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8013:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "8004:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1013",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1013,
														"src": "8004:8:3"
													},
													"referencedDeclaration": 1013,
													"src": "8004:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1013",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:30:3"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "8046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:9:3"
									},
									"scope": 1872,
									"src": "7979:237:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "8401:922:3",
										"statements": [
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8419:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1543,
														"src": "8411:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8411:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"hexValue": "30",
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8428:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8411:18:3"
											},
											{
												"id": 1540,
												"nodeType": "UncheckedBlock",
												"src": "8439:855:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8467:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8476:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8467:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8482:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8467:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1438,
														"nodeType": "IfStatement",
														"src": "8463:99:3",
														"trueBody": {
															"id": 1437,
															"nodeType": "Block",
															"src": "8485:77:3",
															"statements": [
																{
																	"expression": {
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1429,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "8503:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8513:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8503:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1432,
																	"nodeType": "ExpressionStatement",
																	"src": "8503:13:3"
																},
																{
																	"expression": {
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "8534:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8544:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8534:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1436,
																	"nodeType": "ExpressionStatement",
																	"src": "8534:13:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8579:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8588:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8579:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8593:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8579:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1453,
														"nodeType": "IfStatement",
														"src": "8575:96:3",
														"trueBody": {
															"id": 1452,
															"nodeType": "Block",
															"src": "8596:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "8614:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8624:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8614:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "8614:12:3"
																},
																{
																	"expression": {
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "8644:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8654:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8644:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"nodeType": "ExpressionStatement",
																	"src": "8644:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8688:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8697:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8688:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8702:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8688:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1468,
														"nodeType": "IfStatement",
														"src": "8684:96:3",
														"trueBody": {
															"id": 1467,
															"nodeType": "Block",
															"src": "8705:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "8723:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8733:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8723:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "8723:12:3"
																},
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "8753:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8763:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8753:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "8753:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8797:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8806:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8797:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8797:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1483,
														"nodeType": "IfStatement",
														"src": "8793:96:3",
														"trueBody": {
															"id": 1482,
															"nodeType": "Block",
															"src": "8814:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1474,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "8832:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8842:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8832:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1477,
																	"nodeType": "ExpressionStatement",
																	"src": "8832:12:3"
																},
																{
																	"expression": {
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "8862:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8872:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8862:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1481,
																	"nodeType": "ExpressionStatement",
																	"src": "8862:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1484,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "8906:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8906:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8919:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8906:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "8902:93:3",
														"trueBody": {
															"id": 1497,
															"nodeType": "Block",
															"src": "8922:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1489,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "8940:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8950:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8940:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1492,
																	"nodeType": "ExpressionStatement",
																	"src": "8940:11:3"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "8969:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8979:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8969:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "8969:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1499,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "9012:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9021:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9012:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9025:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9012:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1513,
														"nodeType": "IfStatement",
														"src": "9008:93:3",
														"trueBody": {
															"id": 1512,
															"nodeType": "Block",
															"src": "9028:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "9046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9046:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1507,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:11:3"
																},
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "9075:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9085:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9075:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "9075:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "9118:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9127:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9118:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9131:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9118:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1528,
														"nodeType": "IfStatement",
														"src": "9114:93:3",
														"trueBody": {
															"id": 1527,
															"nodeType": "Block",
															"src": "9134:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "9152:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9162:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9152:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1522,
																	"nodeType": "ExpressionStatement",
																	"src": "9152:11:3"
																},
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "9181:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9191:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9181:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "9181:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "9224:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9233:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9224:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9237:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9224:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1539,
														"nodeType": "IfStatement",
														"src": "9220:64:3",
														"trueBody": {
															"id": 1538,
															"nodeType": "Block",
															"src": "9240:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "9258:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9268:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9258:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "9258:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1541,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "9310:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1542,
												"nodeType": "Return",
												"src": "9303:13:3"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "8222:113:3",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8349:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8362:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "8354:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:15:3"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "8392:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8391:9:3"
									},
									"scope": 1872,
									"src": "8340:983:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "9556:165:3",
										"statements": [
											{
												"id": 1578,
												"nodeType": "UncheckedBlock",
												"src": "9566:149:3",
												"statements": [
													{
														"assignments": [
															1556
														],
														"declarations": [
															{
																"constant": false,
																"id": 1556,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9598:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1578,
																"src": "9590:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9590:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1560,
														"initialValue": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "9612:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1557,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1544,
																	1580
																],
																"referencedDeclaration": 1544,
																"src": "9607:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9607:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9590:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "9639:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1013",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1562,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "9649:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1563,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "9661:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1013_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1011,
																					"src": "9661:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9649:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1566,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9676:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1567,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1556,
																						"src": "9681:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9676:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1569,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1547,
																					"src": "9690:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9676:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9649:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9702:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9649:54:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9698:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9648:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9639:65:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1554,
														"id": 1577,
														"nodeType": "Return",
														"src": "9632:72:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "9329:142:3",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9485:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "9490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9514:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "9505:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1013",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1548,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1013,
														"src": "9505:8:3"
													},
													"referencedDeclaration": 1013,
													"src": "9505:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1013",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9489:34:3"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "9547:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9546:9:3"
									},
									"scope": 1872,
									"src": "9476:245:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "9908:854:3",
										"statements": [
											{
												"assignments": [
													1589
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9926:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1708,
														"src": "9918:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9918:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"hexValue": "30",
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9935:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:18:3"
											},
											{
												"id": 1705,
												"nodeType": "UncheckedBlock",
												"src": "9946:787:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "9974:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9983:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9989:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "9983:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "9974:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1608,
														"nodeType": "IfStatement",
														"src": "9970:103:3",
														"trueBody": {
															"id": 1607,
															"nodeType": "Block",
															"src": "9993:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1597,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10011:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10020:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10020:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10011:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1602,
																	"nodeType": "ExpressionStatement",
																	"src": "10011:17:3"
																},
																{
																	"expression": {
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1603,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10046:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10056:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10046:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1606,
																	"nodeType": "ExpressionStatement",
																	"src": "10046:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1609,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10090:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10105:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10099:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10090:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1625,
														"nodeType": "IfStatement",
														"src": "10086:103:3",
														"trueBody": {
															"id": 1624,
															"nodeType": "Block",
															"src": "10109:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10127:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10136:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10142:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10136:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10127:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1619,
																	"nodeType": "ExpressionStatement",
																	"src": "10127:17:3"
																},
																{
																	"expression": {
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1620,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10162:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10172:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10162:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1623,
																	"nodeType": "ExpressionStatement",
																	"src": "10162:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1626,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10206:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10221:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10215:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10206:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1642,
														"nodeType": "IfStatement",
														"src": "10202:103:3",
														"trueBody": {
															"id": 1641,
															"nodeType": "Block",
															"src": "10225:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1631,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10243:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10252:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10258:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10252:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10243:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1636,
																	"nodeType": "ExpressionStatement",
																	"src": "10243:17:3"
																},
																{
																	"expression": {
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1637,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10278:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10288:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10278:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1640,
																	"nodeType": "ExpressionStatement",
																	"src": "10278:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10322:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10331:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10337:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10331:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10322:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "10318:100:3",
														"trueBody": {
															"id": 1658,
															"nodeType": "Block",
															"src": "10340:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1648,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10358:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10367:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10373:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10367:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10358:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1653,
																	"nodeType": "ExpressionStatement",
																	"src": "10358:16:3"
																},
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10392:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10402:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10392:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "10392:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10435:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10444:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10450:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10444:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10435:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1676,
														"nodeType": "IfStatement",
														"src": "10431:100:3",
														"trueBody": {
															"id": 1675,
															"nodeType": "Block",
															"src": "10453:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10471:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10480:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10486:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10480:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10471:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1670,
																	"nodeType": "ExpressionStatement",
																	"src": "10471:16:3"
																},
																{
																	"expression": {
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1671,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10505:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10515:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10505:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"nodeType": "ExpressionStatement",
																	"src": "10505:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1677,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10548:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10557:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10563:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10557:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10548:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1693,
														"nodeType": "IfStatement",
														"src": "10544:100:3",
														"trueBody": {
															"id": 1692,
															"nodeType": "Block",
															"src": "10566:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "10584:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10593:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10599:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10584:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "10584:16:3"
																},
																{
																	"expression": {
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10618:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10628:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10618:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1691,
																	"nodeType": "ExpressionStatement",
																	"src": "10618:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "10661:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10670:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10676:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10670:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10661:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "10657:66:3",
														"trueBody": {
															"id": 1703,
															"nodeType": "Block",
															"src": "10679:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "10697:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10707:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10697:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "10697:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1706,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1589,
													"src": "10749:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1707,
												"nodeType": "Return",
												"src": "10742:13:3"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "9727:114:3",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9855:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "9861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9860:15:3"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "9899:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9898:9:3"
									},
									"scope": 1872,
									"src": "9846:916:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "10997:167:3",
										"statements": [
											{
												"id": 1743,
												"nodeType": "UncheckedBlock",
												"src": "11007:151:3",
												"statements": [
													{
														"assignments": [
															1721
														],
														"declarations": [
															{
																"constant": false,
																"id": 1721,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11039:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1743,
																"src": "11031:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11031:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1725,
														"initialValue": {
															"arguments": [
																{
																	"id": 1723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "11054:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1722,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1709,
																	1745
																],
																"referencedDeclaration": 1709,
																"src": "11048:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11048:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11031:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "11081:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1013",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1727,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1715,
																					"src": "11091:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1728,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "11103:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1013_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1011,
																					"src": "11103:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11091:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1731,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11118:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1732,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "11124:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11118:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1734,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1712,
																					"src": "11133:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11118:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11091:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11145:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11091:55:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11141:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11090:57:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11081:66:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1742,
														"nodeType": "Return",
														"src": "11074:73:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "10768:143:3",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10925:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10939:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "10931:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10931:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10955:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "10946:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1013",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1713,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1013,
														"src": "10946:8:3"
													},
													"referencedDeclaration": 1013,
													"src": "10946:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1013",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10930:34:3"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "10988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:9:3"
									},
									"scope": 1872,
									"src": "10916:248:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "11478:600:3",
										"statements": [
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11496:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "11488:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11488:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"hexValue": "30",
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11505:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11488:18:3"
											},
											{
												"id": 1828,
												"nodeType": "UncheckedBlock",
												"src": "11516:533:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "11544:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11544:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11559:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11544:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1771,
														"nodeType": "IfStatement",
														"src": "11540:98:3",
														"trueBody": {
															"id": 1770,
															"nodeType": "Block",
															"src": "11562:76:3",
															"statements": [
																{
																	"expression": {
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1762,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "11580:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11590:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11580:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1765,
																	"nodeType": "ExpressionStatement",
																	"src": "11580:13:3"
																},
																{
																	"expression": {
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1766,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "11611:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11621:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11611:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1769,
																	"nodeType": "ExpressionStatement",
																	"src": "11611:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1772,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "11655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11664:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11655:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11669:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11655:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1786,
														"nodeType": "IfStatement",
														"src": "11651:95:3",
														"trueBody": {
															"id": 1785,
															"nodeType": "Block",
															"src": "11672:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1777,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "11690:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11700:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11690:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1780,
																	"nodeType": "ExpressionStatement",
																	"src": "11690:12:3"
																},
																{
																	"expression": {
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1781,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "11720:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11730:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11720:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1784,
																	"nodeType": "ExpressionStatement",
																	"src": "11720:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "11763:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11763:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11777:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11763:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1801,
														"nodeType": "IfStatement",
														"src": "11759:95:3",
														"trueBody": {
															"id": 1800,
															"nodeType": "Block",
															"src": "11780:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "11798:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11808:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11798:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1795,
																	"nodeType": "ExpressionStatement",
																	"src": "11798:12:3"
																},
																{
																	"expression": {
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1796,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "11828:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11838:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11828:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1799,
																	"nodeType": "ExpressionStatement",
																	"src": "11828:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "11871:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11880:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11871:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11885:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11871:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1816,
														"nodeType": "IfStatement",
														"src": "11867:95:3",
														"trueBody": {
															"id": 1815,
															"nodeType": "Block",
															"src": "11888:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1807,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "11906:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11916:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11906:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1810,
																	"nodeType": "ExpressionStatement",
																	"src": "11906:12:3"
																},
																{
																	"expression": {
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "11936:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11946:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11936:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1814,
																	"nodeType": "ExpressionStatement",
																	"src": "11936:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1817,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "11979:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11988:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11979:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11992:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11979:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1827,
														"nodeType": "IfStatement",
														"src": "11975:64:3",
														"trueBody": {
															"id": 1826,
															"nodeType": "Block",
															"src": "11995:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1822,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "12013:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12013:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1825,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1829,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1754,
													"src": "12065:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1752,
												"id": 1830,
												"nodeType": "Return",
												"src": "12058:13:3"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "11170:240:3",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11424:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11439:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "11431:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11430:15:3"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "11469:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11468:9:3"
									},
									"scope": 1872,
									"src": "11415:663:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "12315:174:3",
										"statements": [
											{
												"id": 1869,
												"nodeType": "UncheckedBlock",
												"src": "12325:158:3",
												"statements": [
													{
														"assignments": [
															1844
														],
														"declarations": [
															{
																"constant": false,
																"id": 1844,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12357:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1869,
																"src": "12349:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1843,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12349:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1848,
														"initialValue": {
															"arguments": [
																{
																	"id": 1846,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "12373:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1845,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1832,
																	1871
																],
																"referencedDeclaration": 1832,
																"src": "12366:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12366:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12349:30:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "12400:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1013",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1850,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "12410:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1851,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "12422:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1013_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1011,
																					"src": "12422:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1013",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12410:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1859,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1854,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12437:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1857,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1855,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1844,
																									"src": "12443:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1856,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12453:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12443:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1858,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12442:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12437:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1860,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1835,
																					"src": "12458:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12437:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12410:53:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12470:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12410:61:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12466:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12409:63:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12400:72:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1842,
														"id": 1868,
														"nodeType": "Return",
														"src": "12393:79:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "12084:144:3",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12242:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12257:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "12249:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12249:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12273:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "12264:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1013",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1836,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1013,
														"src": "12264:8:3"
													},
													"referencedDeclaration": 1013,
													"src": "12264:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1013",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12248:34:3"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "12306:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12305:9:3"
									},
									"scope": 1872,
									"src": "12233:256:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1873,
							"src": "202:12289:3",
							"usedErrors": []
						}
					],
					"src": "103:12389:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1977
						]
					},
					"id": 1978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1875,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:4",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1977,
							"linearizedBaseContracts": [
								1977
							],
							"name": "SignedMath",
							"nameLocation": "223:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "375:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1885,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "392:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1886,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "396:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "404:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:4",
													"trueExpression": {
														"id": 1888,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1884,
												"id": 1891,
												"nodeType": "Return",
												"src": "385:20:4"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:4",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "324:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1877,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "334:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:4"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "367:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:4"
									},
									"scope": 1977,
									"src": "311:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "554:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1903,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "571:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1904,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "575:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "583:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:4",
													"trueExpression": {
														"id": 1906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "579:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1909,
												"nodeType": "Return",
												"src": "564:20:4"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:4",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "503:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1895,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "513:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1897,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:4"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "546:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1900,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:4"
									},
									"scope": 1977,
									"src": "490:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "796:162:4",
										"statements": [
											{
												"assignments": [
													1922
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1954,
														"src": "858:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1921,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1923,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "870:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1924,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "874:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1926,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1927,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1914,
																				"src": "881:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1928,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1916,
																				"src": "885:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1930,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1933,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1936,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "910:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1941,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1922,
																						"src": "930:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1939,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1937,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1946,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1914,
																				"src": "944:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1947,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1916,
																				"src": "948:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1949,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1951,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1920,
												"id": 1953,
												"nodeType": "Return",
												"src": "903:48:4"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:4",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "745:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1913,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "755:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:4"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "788:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1918,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:4"
									},
									"scope": 1977,
									"src": "728:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "1102:158:4",
										"statements": [
											{
												"id": 1974,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "1227:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:4",
																		"subExpression": {
																			"id": 1969,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "1241:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:4",
																	"trueExpression": {
																		"id": 1968,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "1236:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1963,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1962,
														"id": 1973,
														"nodeType": "Return",
														"src": "1212:31:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:4",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "1060:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1957,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:4"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "1093:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:4"
									},
									"scope": 1977,
									"src": "1047:213:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1978,
							"src": "215:1047:4",
							"usedErrors": []
						}
					],
					"src": "109:1154:4"
				},
				"id": 4
			}
		}
	}
}